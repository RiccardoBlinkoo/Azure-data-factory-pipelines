{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "blinkoo-data-factory"
		},
		"AzureDataLakeStorageDev_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorageDev'"
		},
		"AzureDatabricks1_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks1'"
		},
		"AzureDatabricks2_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks2'"
		},
		"blinkoorepo_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'blinkoorepo'"
		},
		"AzureDataLakeStorageDev_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://blinkoodatalakedev.dfs.core.windows.net"
		},
		"AzureDatabricks1_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0304-092528-p5078pvj"
		},
		"AzureDatabricks2_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0304-092528-p5078pvj"
		},
		"Rest_loganalytics_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{concat('https://api.loganalytics.io/v1/workspaces/',linkedService().WorkSpaceID,'/')}"
		},
		"DailyCosmosDB_properties_Daily_Bronze_Update_CosmosDB_parameters_Tables": {
			"type": "array",
			"defaultValue": [
				"Feed",
				"FeedList",
				"PostStat",
				"UserInfo"
			]
		},
		"DailyCosmosDB_properties_Daily_Bronze_Update_CosmosDB_parameters_end_time": {
			"type": "string",
			"defaultValue": "@trigger().startTime"
		},
		"DailyCosmosDB_properties_Daily_Bronze_SqlServer_parameters_Tables": {
			"type": "array",
			"defaultValue": [
				"place_tip"
			]
		},
		"DailyCosmosDB_properties_Daily_Bronze_SqlServer_parameters_end_time": {
			"type": "string",
			"defaultValue": "@trigger().startTime"
		},
		"HourlyBronzeLogAnalytics_properties_Bronze_LogAnalytics_parameters_ClientSecret": {
			"type": "string",
			"defaultValue": "b0w7Q~IGjV3RcA~b3N2yXYWmVN.gTd1GUeA-."
		},
		"HourlyBronzeLogAnalytics_properties_Bronze_LogAnalytics_parameters_ClientID": {
			"type": "string",
			"defaultValue": "9dc3796a-275c-4753-aedd-1c61fb230b74"
		},
		"HourlyBronzeLogAnalytics_properties_Bronze_LogAnalytics_parameters_TenantID": {
			"type": "string",
			"defaultValue": "f8e56e96-2cd7-413d-9a4d-177bfd942437"
		},
		"HourlyBronzeLogAnalytics_properties_Bronze_LogAnalytics_parameters_WorkspaceID": {
			"type": "string",
			"defaultValue": "8f01acd1-5ade-4ad8-8c2c-5a3708be25e5"
		},
		"HourlyBronzeLogAnalytics_properties_Bronze_LogAnalytics_parameters_Table_Names": {
			"type": "array",
			"defaultValue": [
				"AppDependencies",
				"AppEvents",
				"AppExceptions",
				"AppMetrics",
				"AppPageViews",
				"AppPerformanceCounters",
				"AppRequests",
				"AppSystemEvents",
				"AppTraces",
				"Usage"
			]
		},
		"HourlyBronzeLogAnalytics_properties_Bronze_LogAnalytics_parameters_end_time": {
			"type": "string",
			"defaultValue": "@trigger().startTime"
		},
		"WeeklyCosmosDB_properties_Weekly_Bronze_SqlServer_parameters_Tables": {
			"type": "array",
			"defaultValue": [
				"categories",
				"geo_location",
				"places"
			]
		},
		"WeeklyCosmosDB_properties_Weekly_Bronze_SqlServer_parameters_end_time": {
			"type": "string",
			"defaultValue": "@trigger().startTime"
		},
		"WeeklySilverLogAnalytics_properties_Silver_LogAnalytics_parameters_TableNames": {
			"type": "array",
			"defaultValue": [
				"AppDependencies",
				"AppEvents",
				"AppExceptions",
				"AppMetrics",
				"AppPageViews",
				"AppPerformanceCounters",
				"AppRequests",
				"AppSystemEvents",
				"AppTraces",
				"Usage"
			]
		},
		"WeeklySilverLogAnalytics_properties_Silver_LogAnalytics_parameters_start_time": {
			"type": "string",
			"defaultValue": "@trigger().startTime"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_Delta_CosmosDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Tables",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set variable Table",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable EndTime",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set variable Table",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "EndTime",
										"value": {
											"value": "@{div(sub(ticks(addHours(pipeline().parameters.end_time,-3)), ticks('1970-01-01')),10000000)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Notebook1",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Set variable EndTime",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/elnur.garashov@porini.it/elnur.garashov/CosmosDB/Bronze/Bronze Delta",
										"baseParameters": {
											"Table": {
												"value": "@variables('Table')",
												"type": "Expression"
											},
											"EndDate": {
												"value": "@variables('EndTime')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Trigger Silver Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Silver_Delta_CosmosDB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"end_time": {
									"value": "@pipeline().parameters.end_time",
									"type": "Expression"
								},
								"Tables": {
									"value": "@pipeline().parameters.Tables",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"end_time": {
						"type": "string",
						"defaultValue": "2022-05-12 03:00:00"
					},
					"Tables": {
						"type": "array",
						"defaultValue": [
							"Post",
							"Geometry",
							"PostStat",
							"UserInfo",
							"Categories",
							"Places",
							"Feed",
							"GeoLocation"
						]
					}
				},
				"variables": {
					"EndTime": {
						"type": "String"
					},
					"Table": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Dev/Draft/CosmosDB/Delta"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-23T08:12:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Silver_Delta_CosmosDB')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_Full_CosmosDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Set variable EndTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/elnur.garashov@porini.it/elnur.garashov/CosmosDB/Bronze/Bronze Full",
							"baseParameters": {
								"StartDate": {
									"value": "@variables('StartTime')",
									"type": "Expression"
								},
								"EndDate": {
									"value": "@variables('EndTime')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set variable StartTime",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "StartTime",
							"value": {
								"value": "@{div(sub(ticks(pipeline().parameters.start_time), ticks('1970-01-01')),10000000)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable EndTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable StartTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "EndTime",
							"value": {
								"value": "@{div(sub(ticks(pipeline().parameters.end_time), ticks('1970-01-01')),10000000)}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"start_time": {
						"type": "string",
						"defaultValue": "2020-01-01 00:00:00"
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-05-11 00:00:00"
					}
				},
				"variables": {
					"StartTime": {
						"type": "String"
					},
					"EndTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Dev/Draft/CosmosDB/Full"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-23T08:12:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_LogAnalytics')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getBearerToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://login.microsoftonline.com/',pipeline().parameters.TenantID,'/oauth2/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat(\n'grant_type=client_credentials',\n'&client_id=',pipeline().parameters.ClientID,\n'&client_secret=',pipeline().parameters.ClientSecret,\n'&resource=',variables('Resource')\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Token Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "getBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "token",
							"value": {
								"value": "@activity('getBearerToken').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Token Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Table_Names",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Table Variable",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set End Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Table Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@formatDateTime(addHours(pipeline().parameters.end_time,-2),'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Post Function",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set End Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://blinkoo-data-factory-pipelines.azurewebsites.net/api/getLogAnalyticsData",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"token\":\"',variables('token'),'\",\"end_date\":\"',variables('end_date'),'\",\"table\":\"',variables('table'),'\"}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ClientSecret": {
						"type": "string",
						"defaultValue": "b0w7Q~IGjV3RcA~b3N2yXYWmVN.gTd1GUeA-."
					},
					"ClientID": {
						"type": "string",
						"defaultValue": "9dc3796a-275c-4753-aedd-1c61fb230b74"
					},
					"TenantID": {
						"type": "string",
						"defaultValue": "f8e56e96-2cd7-413d-9a4d-177bfd942437"
					},
					"WorkspaceID": {
						"type": "string",
						"defaultValue": "8f01acd1-5ade-4ad8-8c2c-5a3708be25e5"
					},
					"Table_Names": {
						"type": "array",
						"defaultValue": [
							"AppDependencies",
							"AppEvents",
							"AppExceptions",
							"AppMetrics",
							"AppPageViews",
							"AppPerformanceCounters",
							"AppRequests",
							"AppSystemEvents",
							"AppTraces",
							"Usage"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-07-04 11:00:00"
					}
				},
				"variables": {
					"Resource": {
						"type": "String",
						"defaultValue": "https://api.loganalytics.io"
					},
					"token": {
						"type": "String"
					},
					"table": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "LogAnalytics"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-04T10:39:37Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_LogAnalytics_AppDependencies_003105_0106')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getBearerToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://login.microsoftonline.com/',pipeline().parameters.TenantID,'/oauth2/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat(\n'grant_type=client_credentials',\n'&client_id=',pipeline().parameters.ClientID,\n'&client_secret=',pipeline().parameters.ClientSecret,\n'&resource=',variables('Resource')\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Token Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "getBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "token",
							"value": {
								"value": "@activity('getBearerToken').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Token Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Table_Names",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Table Variable",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set End Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Table Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.end_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Post Function",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set Start Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://blinkoo-data-factory-pipelines.azurewebsites.net/api/get_log_data",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"start_date\":\"',variables('start_date'),'\",\"token\":\"',variables('token'),'\",\"end_date\":\"',variables('end_date'),'\",\"table\":\"',variables('table'),'\"}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Set Start Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set End Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ClientSecret": {
						"type": "string",
						"defaultValue": "b0w7Q~IGjV3RcA~b3N2yXYWmVN.gTd1GUeA-."
					},
					"ClientID": {
						"type": "string",
						"defaultValue": "9dc3796a-275c-4753-aedd-1c61fb230b74"
					},
					"TenantID": {
						"type": "string",
						"defaultValue": "f8e56e96-2cd7-413d-9a4d-177bfd942437"
					},
					"WorkspaceID": {
						"type": "string",
						"defaultValue": "8f01acd1-5ade-4ad8-8c2c-5a3708be25e5"
					},
					"Table_Names": {
						"type": "array",
						"defaultValue": [
							"AppDependencies"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-06-01 00:00:00"
					},
					"start_time": {
						"type": "string",
						"defaultValue": "2022-05-31 00:00:00"
					}
				},
				"variables": {
					"Resource": {
						"type": "String",
						"defaultValue": "https://api.loganalytics.io"
					},
					"token": {
						"type": "String"
					},
					"table": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"start_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SOS"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-05T10:44:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_LogAnalytics_AppDependencies_0106_0206')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getBearerToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://login.microsoftonline.com/',pipeline().parameters.TenantID,'/oauth2/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat(\n'grant_type=client_credentials',\n'&client_id=',pipeline().parameters.ClientID,\n'&client_secret=',pipeline().parameters.ClientSecret,\n'&resource=',variables('Resource')\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Token Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "getBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "token",
							"value": {
								"value": "@activity('getBearerToken').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Token Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Table_Names",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Table Variable",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set End Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Table Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.end_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Post Function",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set Start Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://blinkoo-data-factory-pipelines.azurewebsites.net/api/get_log_data",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"start_date\":\"',variables('start_date'),'\",\"token\":\"',variables('token'),'\",\"end_date\":\"',variables('end_date'),'\",\"table\":\"',variables('table'),'\"}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Set Start Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set End Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ClientSecret": {
						"type": "string",
						"defaultValue": "b0w7Q~IGjV3RcA~b3N2yXYWmVN.gTd1GUeA-."
					},
					"ClientID": {
						"type": "string",
						"defaultValue": "9dc3796a-275c-4753-aedd-1c61fb230b74"
					},
					"TenantID": {
						"type": "string",
						"defaultValue": "f8e56e96-2cd7-413d-9a4d-177bfd942437"
					},
					"WorkspaceID": {
						"type": "string",
						"defaultValue": "8f01acd1-5ade-4ad8-8c2c-5a3708be25e5"
					},
					"Table_Names": {
						"type": "array",
						"defaultValue": [
							"AppDependencies"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-06-02 00:00:00"
					},
					"start_time": {
						"type": "string",
						"defaultValue": "2022-06-01 00:00:00"
					}
				},
				"variables": {
					"Resource": {
						"type": "String",
						"defaultValue": "https://api.loganalytics.io"
					},
					"token": {
						"type": "String"
					},
					"table": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"start_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SOS"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-05T10:44:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_LogAnalytics_AppDependencies_0107_0207')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getBearerToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://login.microsoftonline.com/',pipeline().parameters.TenantID,'/oauth2/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat(\n'grant_type=client_credentials',\n'&client_id=',pipeline().parameters.ClientID,\n'&client_secret=',pipeline().parameters.ClientSecret,\n'&resource=',variables('Resource')\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Token Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "getBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "token",
							"value": {
								"value": "@activity('getBearerToken').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Token Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Table_Names",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Table Variable",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set End Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Table Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.end_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Post Function",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set Start Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://blinkoo-data-factory-pipelines.azurewebsites.net/api/get_log_data",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"start_date\":\"',variables('start_date'),'\",\"token\":\"',variables('token'),'\",\"end_date\":\"',variables('end_date'),'\",\"table\":\"',variables('table'),'\"}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Set Start Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set End Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ClientSecret": {
						"type": "string",
						"defaultValue": "b0w7Q~IGjV3RcA~b3N2yXYWmVN.gTd1GUeA-."
					},
					"ClientID": {
						"type": "string",
						"defaultValue": "9dc3796a-275c-4753-aedd-1c61fb230b74"
					},
					"TenantID": {
						"type": "string",
						"defaultValue": "f8e56e96-2cd7-413d-9a4d-177bfd942437"
					},
					"WorkspaceID": {
						"type": "string",
						"defaultValue": "8f01acd1-5ade-4ad8-8c2c-5a3708be25e5"
					},
					"Table_Names": {
						"type": "array",
						"defaultValue": [
							"AppDependencies"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-07-02 00:00:00"
					},
					"start_time": {
						"type": "string",
						"defaultValue": "2022-07-01 00:00:00"
					}
				},
				"variables": {
					"Resource": {
						"type": "String",
						"defaultValue": "https://api.loganalytics.io"
					},
					"token": {
						"type": "String"
					},
					"table": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"start_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SOS"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-05T13:04:16Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_LogAnalytics_AppDependencies_0206_0306')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getBearerToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://login.microsoftonline.com/',pipeline().parameters.TenantID,'/oauth2/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat(\n'grant_type=client_credentials',\n'&client_id=',pipeline().parameters.ClientID,\n'&client_secret=',pipeline().parameters.ClientSecret,\n'&resource=',variables('Resource')\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Token Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "getBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "token",
							"value": {
								"value": "@activity('getBearerToken').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Token Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Table_Names",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Table Variable",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set End Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Table Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.end_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Post Function",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set Start Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://blinkoo-data-factory-pipelines.azurewebsites.net/api/get_log_data",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"start_date\":\"',variables('start_date'),'\",\"token\":\"',variables('token'),'\",\"end_date\":\"',variables('end_date'),'\",\"table\":\"',variables('table'),'\"}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Set Start Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set End Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ClientSecret": {
						"type": "string",
						"defaultValue": "b0w7Q~IGjV3RcA~b3N2yXYWmVN.gTd1GUeA-."
					},
					"ClientID": {
						"type": "string",
						"defaultValue": "9dc3796a-275c-4753-aedd-1c61fb230b74"
					},
					"TenantID": {
						"type": "string",
						"defaultValue": "f8e56e96-2cd7-413d-9a4d-177bfd942437"
					},
					"WorkspaceID": {
						"type": "string",
						"defaultValue": "8f01acd1-5ade-4ad8-8c2c-5a3708be25e5"
					},
					"Table_Names": {
						"type": "array",
						"defaultValue": [
							"AppDependencies"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-06-03 00:00:00"
					},
					"start_time": {
						"type": "string",
						"defaultValue": "2022-06-02 00:00:00"
					}
				},
				"variables": {
					"Resource": {
						"type": "String",
						"defaultValue": "https://api.loganalytics.io"
					},
					"token": {
						"type": "String"
					},
					"table": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"start_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SOS"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-05T10:44:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_LogAnalytics_AppDependencies_0207_0307')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getBearerToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://login.microsoftonline.com/',pipeline().parameters.TenantID,'/oauth2/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat(\n'grant_type=client_credentials',\n'&client_id=',pipeline().parameters.ClientID,\n'&client_secret=',pipeline().parameters.ClientSecret,\n'&resource=',variables('Resource')\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Token Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "getBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "token",
							"value": {
								"value": "@activity('getBearerToken').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Token Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Table_Names",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Table Variable",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set End Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Table Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.end_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Post Function",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set Start Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://blinkoo-data-factory-pipelines.azurewebsites.net/api/get_log_data",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"start_date\":\"',variables('start_date'),'\",\"token\":\"',variables('token'),'\",\"end_date\":\"',variables('end_date'),'\",\"table\":\"',variables('table'),'\"}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Set Start Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set End Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ClientSecret": {
						"type": "string",
						"defaultValue": "b0w7Q~IGjV3RcA~b3N2yXYWmVN.gTd1GUeA-."
					},
					"ClientID": {
						"type": "string",
						"defaultValue": "9dc3796a-275c-4753-aedd-1c61fb230b74"
					},
					"TenantID": {
						"type": "string",
						"defaultValue": "f8e56e96-2cd7-413d-9a4d-177bfd942437"
					},
					"WorkspaceID": {
						"type": "string",
						"defaultValue": "8f01acd1-5ade-4ad8-8c2c-5a3708be25e5"
					},
					"Table_Names": {
						"type": "array",
						"defaultValue": [
							"AppDependencies"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-07-03 00:00:00"
					},
					"start_time": {
						"type": "string",
						"defaultValue": "2022-07-02 00:00:00"
					}
				},
				"variables": {
					"Resource": {
						"type": "String",
						"defaultValue": "https://api.loganalytics.io"
					},
					"token": {
						"type": "String"
					},
					"table": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"start_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SOS"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-05T13:04:16Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_LogAnalytics_AppDependencies_0306_0406')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getBearerToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://login.microsoftonline.com/',pipeline().parameters.TenantID,'/oauth2/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat(\n'grant_type=client_credentials',\n'&client_id=',pipeline().parameters.ClientID,\n'&client_secret=',pipeline().parameters.ClientSecret,\n'&resource=',variables('Resource')\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Token Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "getBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "token",
							"value": {
								"value": "@activity('getBearerToken').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Token Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Table_Names",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Table Variable",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set End Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Table Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.end_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Post Function",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set Start Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://blinkoo-data-factory-pipelines.azurewebsites.net/api/get_log_data",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"start_date\":\"',variables('start_date'),'\",\"token\":\"',variables('token'),'\",\"end_date\":\"',variables('end_date'),'\",\"table\":\"',variables('table'),'\"}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Set Start Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set End Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ClientSecret": {
						"type": "string",
						"defaultValue": "b0w7Q~IGjV3RcA~b3N2yXYWmVN.gTd1GUeA-."
					},
					"ClientID": {
						"type": "string",
						"defaultValue": "9dc3796a-275c-4753-aedd-1c61fb230b74"
					},
					"TenantID": {
						"type": "string",
						"defaultValue": "f8e56e96-2cd7-413d-9a4d-177bfd942437"
					},
					"WorkspaceID": {
						"type": "string",
						"defaultValue": "8f01acd1-5ade-4ad8-8c2c-5a3708be25e5"
					},
					"Table_Names": {
						"type": "array",
						"defaultValue": [
							"AppDependencies"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-06-04 00:00:00"
					},
					"start_time": {
						"type": "string",
						"defaultValue": "2022-06-03 00:00:00"
					}
				},
				"variables": {
					"Resource": {
						"type": "String",
						"defaultValue": "https://api.loganalytics.io"
					},
					"token": {
						"type": "String"
					},
					"table": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"start_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SOS"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-05T10:44:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_LogAnalytics_AppDependencies_0307_0407')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getBearerToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://login.microsoftonline.com/',pipeline().parameters.TenantID,'/oauth2/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat(\n'grant_type=client_credentials',\n'&client_id=',pipeline().parameters.ClientID,\n'&client_secret=',pipeline().parameters.ClientSecret,\n'&resource=',variables('Resource')\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Token Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "getBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "token",
							"value": {
								"value": "@activity('getBearerToken').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Token Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Table_Names",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Table Variable",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set End Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Table Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.end_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Post Function",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set Start Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://blinkoo-data-factory-pipelines.azurewebsites.net/api/get_log_data",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"start_date\":\"',variables('start_date'),'\",\"token\":\"',variables('token'),'\",\"end_date\":\"',variables('end_date'),'\",\"table\":\"',variables('table'),'\"}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Set Start Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set End Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ClientSecret": {
						"type": "string",
						"defaultValue": "b0w7Q~IGjV3RcA~b3N2yXYWmVN.gTd1GUeA-."
					},
					"ClientID": {
						"type": "string",
						"defaultValue": "9dc3796a-275c-4753-aedd-1c61fb230b74"
					},
					"TenantID": {
						"type": "string",
						"defaultValue": "f8e56e96-2cd7-413d-9a4d-177bfd942437"
					},
					"WorkspaceID": {
						"type": "string",
						"defaultValue": "8f01acd1-5ade-4ad8-8c2c-5a3708be25e5"
					},
					"Table_Names": {
						"type": "array",
						"defaultValue": [
							"AppDependencies"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-07-04 00:00:00"
					},
					"start_time": {
						"type": "string",
						"defaultValue": "2022-07-03 00:00:00"
					}
				},
				"variables": {
					"Resource": {
						"type": "String",
						"defaultValue": "https://api.loganalytics.io"
					},
					"token": {
						"type": "String"
					},
					"table": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"start_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SOS"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-05T13:04:16Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_LogAnalytics_AppDependencies_0406_0506')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getBearerToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://login.microsoftonline.com/',pipeline().parameters.TenantID,'/oauth2/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat(\n'grant_type=client_credentials',\n'&client_id=',pipeline().parameters.ClientID,\n'&client_secret=',pipeline().parameters.ClientSecret,\n'&resource=',variables('Resource')\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Token Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "getBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "token",
							"value": {
								"value": "@activity('getBearerToken').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Token Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Table_Names",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Table Variable",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set End Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Table Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.end_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Post Function",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set Start Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://blinkoo-data-factory-pipelines.azurewebsites.net/api/get_log_data",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"start_date\":\"',variables('start_date'),'\",\"token\":\"',variables('token'),'\",\"end_date\":\"',variables('end_date'),'\",\"table\":\"',variables('table'),'\"}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Set Start Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set End Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ClientSecret": {
						"type": "string",
						"defaultValue": "b0w7Q~IGjV3RcA~b3N2yXYWmVN.gTd1GUeA-."
					},
					"ClientID": {
						"type": "string",
						"defaultValue": "9dc3796a-275c-4753-aedd-1c61fb230b74"
					},
					"TenantID": {
						"type": "string",
						"defaultValue": "f8e56e96-2cd7-413d-9a4d-177bfd942437"
					},
					"WorkspaceID": {
						"type": "string",
						"defaultValue": "8f01acd1-5ade-4ad8-8c2c-5a3708be25e5"
					},
					"Table_Names": {
						"type": "array",
						"defaultValue": [
							"AppDependencies"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-06-05 00:00:00"
					},
					"start_time": {
						"type": "string",
						"defaultValue": "2022-06-04 00:00:00"
					}
				},
				"variables": {
					"Resource": {
						"type": "String",
						"defaultValue": "https://api.loganalytics.io"
					},
					"token": {
						"type": "String"
					},
					"table": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"start_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SOS"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-05T10:44:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_LogAnalytics_AppDependencies_0506_0606')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getBearerToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://login.microsoftonline.com/',pipeline().parameters.TenantID,'/oauth2/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat(\n'grant_type=client_credentials',\n'&client_id=',pipeline().parameters.ClientID,\n'&client_secret=',pipeline().parameters.ClientSecret,\n'&resource=',variables('Resource')\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Token Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "getBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "token",
							"value": {
								"value": "@activity('getBearerToken').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Token Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Table_Names",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Table Variable",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set End Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Table Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.end_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Post Function",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set Start Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://blinkoo-data-factory-pipelines.azurewebsites.net/api/get_log_data",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"start_date\":\"',variables('start_date'),'\",\"token\":\"',variables('token'),'\",\"end_date\":\"',variables('end_date'),'\",\"table\":\"',variables('table'),'\"}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Set Start Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set End Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ClientSecret": {
						"type": "string",
						"defaultValue": "b0w7Q~IGjV3RcA~b3N2yXYWmVN.gTd1GUeA-."
					},
					"ClientID": {
						"type": "string",
						"defaultValue": "9dc3796a-275c-4753-aedd-1c61fb230b74"
					},
					"TenantID": {
						"type": "string",
						"defaultValue": "f8e56e96-2cd7-413d-9a4d-177bfd942437"
					},
					"WorkspaceID": {
						"type": "string",
						"defaultValue": "8f01acd1-5ade-4ad8-8c2c-5a3708be25e5"
					},
					"Table_Names": {
						"type": "array",
						"defaultValue": [
							"AppDependencies"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-06-06 00:00:00"
					},
					"start_time": {
						"type": "string",
						"defaultValue": "2022-06-05 00:00:00"
					}
				},
				"variables": {
					"Resource": {
						"type": "String",
						"defaultValue": "https://api.loganalytics.io"
					},
					"token": {
						"type": "String"
					},
					"table": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"start_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SOS"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-05T10:44:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_LogAnalytics_AppDependencies_0606_0706')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getBearerToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://login.microsoftonline.com/',pipeline().parameters.TenantID,'/oauth2/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat(\n'grant_type=client_credentials',\n'&client_id=',pipeline().parameters.ClientID,\n'&client_secret=',pipeline().parameters.ClientSecret,\n'&resource=',variables('Resource')\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Token Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "getBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "token",
							"value": {
								"value": "@activity('getBearerToken').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Token Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Table_Names",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Table Variable",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set End Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Table Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.end_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Post Function",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set Start Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://blinkoo-data-factory-pipelines.azurewebsites.net/api/get_log_data",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"start_date\":\"',variables('start_date'),'\",\"token\":\"',variables('token'),'\",\"end_date\":\"',variables('end_date'),'\",\"table\":\"',variables('table'),'\"}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Set Start Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set End Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ClientSecret": {
						"type": "string",
						"defaultValue": "b0w7Q~IGjV3RcA~b3N2yXYWmVN.gTd1GUeA-."
					},
					"ClientID": {
						"type": "string",
						"defaultValue": "9dc3796a-275c-4753-aedd-1c61fb230b74"
					},
					"TenantID": {
						"type": "string",
						"defaultValue": "f8e56e96-2cd7-413d-9a4d-177bfd942437"
					},
					"WorkspaceID": {
						"type": "string",
						"defaultValue": "8f01acd1-5ade-4ad8-8c2c-5a3708be25e5"
					},
					"Table_Names": {
						"type": "array",
						"defaultValue": [
							"AppDependencies"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-06-07 00:00:00"
					},
					"start_time": {
						"type": "string",
						"defaultValue": "2022-06-06 00:00:00"
					}
				},
				"variables": {
					"Resource": {
						"type": "String",
						"defaultValue": "https://api.loganalytics.io"
					},
					"token": {
						"type": "String"
					},
					"table": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"start_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SOS"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-05T10:44:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_LogAnalytics_AppDependencies_0706_0806')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getBearerToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://login.microsoftonline.com/',pipeline().parameters.TenantID,'/oauth2/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat(\n'grant_type=client_credentials',\n'&client_id=',pipeline().parameters.ClientID,\n'&client_secret=',pipeline().parameters.ClientSecret,\n'&resource=',variables('Resource')\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Token Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "getBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "token",
							"value": {
								"value": "@activity('getBearerToken').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Token Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Table_Names",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Table Variable",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set End Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Table Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.end_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Post Function",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set Start Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://blinkoo-data-factory-pipelines.azurewebsites.net/api/get_log_data",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"start_date\":\"',variables('start_date'),'\",\"token\":\"',variables('token'),'\",\"end_date\":\"',variables('end_date'),'\",\"table\":\"',variables('table'),'\"}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Set Start Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set End Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ClientSecret": {
						"type": "string",
						"defaultValue": "b0w7Q~IGjV3RcA~b3N2yXYWmVN.gTd1GUeA-."
					},
					"ClientID": {
						"type": "string",
						"defaultValue": "9dc3796a-275c-4753-aedd-1c61fb230b74"
					},
					"TenantID": {
						"type": "string",
						"defaultValue": "f8e56e96-2cd7-413d-9a4d-177bfd942437"
					},
					"WorkspaceID": {
						"type": "string",
						"defaultValue": "8f01acd1-5ade-4ad8-8c2c-5a3708be25e5"
					},
					"Table_Names": {
						"type": "array",
						"defaultValue": [
							"AppDependencies"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-06-08 00:00:00"
					},
					"start_time": {
						"type": "string",
						"defaultValue": "2022-06-07 00:00:00"
					}
				},
				"variables": {
					"Resource": {
						"type": "String",
						"defaultValue": "https://api.loganalytics.io"
					},
					"token": {
						"type": "String"
					},
					"table": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"start_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SOS"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-05T10:44:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_LogAnalytics_AppDependencies_0806_0906')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getBearerToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://login.microsoftonline.com/',pipeline().parameters.TenantID,'/oauth2/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat(\n'grant_type=client_credentials',\n'&client_id=',pipeline().parameters.ClientID,\n'&client_secret=',pipeline().parameters.ClientSecret,\n'&resource=',variables('Resource')\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Token Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "getBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "token",
							"value": {
								"value": "@activity('getBearerToken').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Token Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Table_Names",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Table Variable",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set End Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Table Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.end_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Post Function",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set Start Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://blinkoo-data-factory-pipelines.azurewebsites.net/api/get_log_data",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"start_date\":\"',variables('start_date'),'\",\"token\":\"',variables('token'),'\",\"end_date\":\"',variables('end_date'),'\",\"table\":\"',variables('table'),'\"}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Set Start Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set End Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ClientSecret": {
						"type": "string",
						"defaultValue": "b0w7Q~IGjV3RcA~b3N2yXYWmVN.gTd1GUeA-."
					},
					"ClientID": {
						"type": "string",
						"defaultValue": "9dc3796a-275c-4753-aedd-1c61fb230b74"
					},
					"TenantID": {
						"type": "string",
						"defaultValue": "f8e56e96-2cd7-413d-9a4d-177bfd942437"
					},
					"WorkspaceID": {
						"type": "string",
						"defaultValue": "8f01acd1-5ade-4ad8-8c2c-5a3708be25e5"
					},
					"Table_Names": {
						"type": "array",
						"defaultValue": [
							"AppDependencies"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-06-09 00:00:00"
					},
					"start_time": {
						"type": "string",
						"defaultValue": "2022-06-08 00:00:00"
					}
				},
				"variables": {
					"Resource": {
						"type": "String",
						"defaultValue": "https://api.loganalytics.io"
					},
					"token": {
						"type": "String"
					},
					"table": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"start_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SOS"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-05T10:44:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_LogAnalytics_AppDependencies_0906_1006')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getBearerToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://login.microsoftonline.com/',pipeline().parameters.TenantID,'/oauth2/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat(\n'grant_type=client_credentials',\n'&client_id=',pipeline().parameters.ClientID,\n'&client_secret=',pipeline().parameters.ClientSecret,\n'&resource=',variables('Resource')\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Token Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "getBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "token",
							"value": {
								"value": "@activity('getBearerToken').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Token Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Table_Names",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Table Variable",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set End Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Table Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.end_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Post Function",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set Start Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://blinkoo-data-factory-pipelines.azurewebsites.net/api/get_log_data",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"start_date\":\"',variables('start_date'),'\",\"token\":\"',variables('token'),'\",\"end_date\":\"',variables('end_date'),'\",\"table\":\"',variables('table'),'\"}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Set Start Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set End Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ClientSecret": {
						"type": "string",
						"defaultValue": "b0w7Q~IGjV3RcA~b3N2yXYWmVN.gTd1GUeA-."
					},
					"ClientID": {
						"type": "string",
						"defaultValue": "9dc3796a-275c-4753-aedd-1c61fb230b74"
					},
					"TenantID": {
						"type": "string",
						"defaultValue": "f8e56e96-2cd7-413d-9a4d-177bfd942437"
					},
					"WorkspaceID": {
						"type": "string",
						"defaultValue": "8f01acd1-5ade-4ad8-8c2c-5a3708be25e5"
					},
					"Table_Names": {
						"type": "array",
						"defaultValue": [
							"AppDependencies"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-06-10 00:00:00"
					},
					"start_time": {
						"type": "string",
						"defaultValue": "2022-06-09 00:00:00"
					}
				},
				"variables": {
					"Resource": {
						"type": "String",
						"defaultValue": "https://api.loganalytics.io"
					},
					"token": {
						"type": "String"
					},
					"table": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"start_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SOS"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-05T10:44:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_LogAnalytics_AppDependencies_1006_1106')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getBearerToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://login.microsoftonline.com/',pipeline().parameters.TenantID,'/oauth2/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat(\n'grant_type=client_credentials',\n'&client_id=',pipeline().parameters.ClientID,\n'&client_secret=',pipeline().parameters.ClientSecret,\n'&resource=',variables('Resource')\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Token Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "getBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "token",
							"value": {
								"value": "@activity('getBearerToken').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Token Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Table_Names",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Table Variable",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set End Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Table Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.end_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Post Function",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set Start Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://blinkoo-data-factory-pipelines.azurewebsites.net/api/get_log_data",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"start_date\":\"',variables('start_date'),'\",\"token\":\"',variables('token'),'\",\"end_date\":\"',variables('end_date'),'\",\"table\":\"',variables('table'),'\"}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Set Start Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set End Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ClientSecret": {
						"type": "string",
						"defaultValue": "b0w7Q~IGjV3RcA~b3N2yXYWmVN.gTd1GUeA-."
					},
					"ClientID": {
						"type": "string",
						"defaultValue": "9dc3796a-275c-4753-aedd-1c61fb230b74"
					},
					"TenantID": {
						"type": "string",
						"defaultValue": "f8e56e96-2cd7-413d-9a4d-177bfd942437"
					},
					"WorkspaceID": {
						"type": "string",
						"defaultValue": "8f01acd1-5ade-4ad8-8c2c-5a3708be25e5"
					},
					"Table_Names": {
						"type": "array",
						"defaultValue": [
							"AppDependencies"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-06-11 00:00:00"
					},
					"start_time": {
						"type": "string",
						"defaultValue": "2022-06-10 00:00:00"
					}
				},
				"variables": {
					"Resource": {
						"type": "String",
						"defaultValue": "https://api.loganalytics.io"
					},
					"token": {
						"type": "String"
					},
					"table": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"start_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SOS"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-05T10:50:35Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_LogAnalytics_AppDependencies_1106_1206')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getBearerToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://login.microsoftonline.com/',pipeline().parameters.TenantID,'/oauth2/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat(\n'grant_type=client_credentials',\n'&client_id=',pipeline().parameters.ClientID,\n'&client_secret=',pipeline().parameters.ClientSecret,\n'&resource=',variables('Resource')\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Token Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "getBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "token",
							"value": {
								"value": "@activity('getBearerToken').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Token Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Table_Names",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Table Variable",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set End Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Table Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.end_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Post Function",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set Start Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://blinkoo-data-factory-pipelines.azurewebsites.net/api/get_log_data",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"start_date\":\"',variables('start_date'),'\",\"token\":\"',variables('token'),'\",\"end_date\":\"',variables('end_date'),'\",\"table\":\"',variables('table'),'\"}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Set Start Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set End Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ClientSecret": {
						"type": "string",
						"defaultValue": "b0w7Q~IGjV3RcA~b3N2yXYWmVN.gTd1GUeA-."
					},
					"ClientID": {
						"type": "string",
						"defaultValue": "9dc3796a-275c-4753-aedd-1c61fb230b74"
					},
					"TenantID": {
						"type": "string",
						"defaultValue": "f8e56e96-2cd7-413d-9a4d-177bfd942437"
					},
					"WorkspaceID": {
						"type": "string",
						"defaultValue": "8f01acd1-5ade-4ad8-8c2c-5a3708be25e5"
					},
					"Table_Names": {
						"type": "array",
						"defaultValue": [
							"AppDependencies"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-06-12 00:00:00"
					},
					"start_time": {
						"type": "string",
						"defaultValue": "2022-06-11 00:00:00"
					}
				},
				"variables": {
					"Resource": {
						"type": "String",
						"defaultValue": "https://api.loganalytics.io"
					},
					"token": {
						"type": "String"
					},
					"table": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"start_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SOS"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-05T10:50:35Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_LogAnalytics_AppDependencies_1206_1306')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getBearerToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://login.microsoftonline.com/',pipeline().parameters.TenantID,'/oauth2/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat(\n'grant_type=client_credentials',\n'&client_id=',pipeline().parameters.ClientID,\n'&client_secret=',pipeline().parameters.ClientSecret,\n'&resource=',variables('Resource')\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Token Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "getBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "token",
							"value": {
								"value": "@activity('getBearerToken').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Token Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Table_Names",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Table Variable",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set End Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Table Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.end_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Post Function",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set Start Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://blinkoo-data-factory-pipelines.azurewebsites.net/api/get_log_data",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"start_date\":\"',variables('start_date'),'\",\"token\":\"',variables('token'),'\",\"end_date\":\"',variables('end_date'),'\",\"table\":\"',variables('table'),'\"}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Set Start Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set End Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ClientSecret": {
						"type": "string",
						"defaultValue": "b0w7Q~IGjV3RcA~b3N2yXYWmVN.gTd1GUeA-."
					},
					"ClientID": {
						"type": "string",
						"defaultValue": "9dc3796a-275c-4753-aedd-1c61fb230b74"
					},
					"TenantID": {
						"type": "string",
						"defaultValue": "f8e56e96-2cd7-413d-9a4d-177bfd942437"
					},
					"WorkspaceID": {
						"type": "string",
						"defaultValue": "8f01acd1-5ade-4ad8-8c2c-5a3708be25e5"
					},
					"Table_Names": {
						"type": "array",
						"defaultValue": [
							"AppDependencies"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-06-13 00:00:00"
					},
					"start_time": {
						"type": "string",
						"defaultValue": "2022-06-12 00:00:00"
					}
				},
				"variables": {
					"Resource": {
						"type": "String",
						"defaultValue": "https://api.loganalytics.io"
					},
					"token": {
						"type": "String"
					},
					"table": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"start_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SOS"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-05T10:50:35Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_LogAnalytics_AppDependencies_1306_1406')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getBearerToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://login.microsoftonline.com/',pipeline().parameters.TenantID,'/oauth2/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat(\n'grant_type=client_credentials',\n'&client_id=',pipeline().parameters.ClientID,\n'&client_secret=',pipeline().parameters.ClientSecret,\n'&resource=',variables('Resource')\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Token Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "getBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "token",
							"value": {
								"value": "@activity('getBearerToken').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Token Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Table_Names",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Table Variable",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set End Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Table Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.end_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Post Function",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set Start Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://blinkoo-data-factory-pipelines.azurewebsites.net/api/get_log_data",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"start_date\":\"',variables('start_date'),'\",\"token\":\"',variables('token'),'\",\"end_date\":\"',variables('end_date'),'\",\"table\":\"',variables('table'),'\"}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Set Start Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set End Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ClientSecret": {
						"type": "string",
						"defaultValue": "b0w7Q~IGjV3RcA~b3N2yXYWmVN.gTd1GUeA-."
					},
					"ClientID": {
						"type": "string",
						"defaultValue": "9dc3796a-275c-4753-aedd-1c61fb230b74"
					},
					"TenantID": {
						"type": "string",
						"defaultValue": "f8e56e96-2cd7-413d-9a4d-177bfd942437"
					},
					"WorkspaceID": {
						"type": "string",
						"defaultValue": "8f01acd1-5ade-4ad8-8c2c-5a3708be25e5"
					},
					"Table_Names": {
						"type": "array",
						"defaultValue": [
							"AppDependencies"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-06-14 00:00:00"
					},
					"start_time": {
						"type": "string",
						"defaultValue": "2022-06-13 00:00:00"
					}
				},
				"variables": {
					"Resource": {
						"type": "String",
						"defaultValue": "https://api.loganalytics.io"
					},
					"token": {
						"type": "String"
					},
					"table": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"start_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SOS"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-05T10:50:35Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_LogAnalytics_AppDependencies_1406_1506')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getBearerToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://login.microsoftonline.com/',pipeline().parameters.TenantID,'/oauth2/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat(\n'grant_type=client_credentials',\n'&client_id=',pipeline().parameters.ClientID,\n'&client_secret=',pipeline().parameters.ClientSecret,\n'&resource=',variables('Resource')\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Token Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "getBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "token",
							"value": {
								"value": "@activity('getBearerToken').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Token Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Table_Names",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Table Variable",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set End Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Table Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.end_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Post Function",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set Start Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://blinkoo-data-factory-pipelines.azurewebsites.net/api/get_log_data",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"start_date\":\"',variables('start_date'),'\",\"token\":\"',variables('token'),'\",\"end_date\":\"',variables('end_date'),'\",\"table\":\"',variables('table'),'\"}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Set Start Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set End Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ClientSecret": {
						"type": "string",
						"defaultValue": "b0w7Q~IGjV3RcA~b3N2yXYWmVN.gTd1GUeA-."
					},
					"ClientID": {
						"type": "string",
						"defaultValue": "9dc3796a-275c-4753-aedd-1c61fb230b74"
					},
					"TenantID": {
						"type": "string",
						"defaultValue": "f8e56e96-2cd7-413d-9a4d-177bfd942437"
					},
					"WorkspaceID": {
						"type": "string",
						"defaultValue": "8f01acd1-5ade-4ad8-8c2c-5a3708be25e5"
					},
					"Table_Names": {
						"type": "array",
						"defaultValue": [
							"AppDependencies"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-06-15 00:00:00"
					},
					"start_time": {
						"type": "string",
						"defaultValue": "2022-06-14 00:00:00"
					}
				},
				"variables": {
					"Resource": {
						"type": "String",
						"defaultValue": "https://api.loganalytics.io"
					},
					"token": {
						"type": "String"
					},
					"table": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"start_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SOS"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-05T10:50:35Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_LogAnalytics_AppDependencies_1506_1606')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getBearerToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://login.microsoftonline.com/',pipeline().parameters.TenantID,'/oauth2/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat(\n'grant_type=client_credentials',\n'&client_id=',pipeline().parameters.ClientID,\n'&client_secret=',pipeline().parameters.ClientSecret,\n'&resource=',variables('Resource')\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Token Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "getBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "token",
							"value": {
								"value": "@activity('getBearerToken').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Token Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Table_Names",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Table Variable",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set End Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Table Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.end_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Post Function",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set Start Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://blinkoo-data-factory-pipelines.azurewebsites.net/api/get_log_data",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"start_date\":\"',variables('start_date'),'\",\"token\":\"',variables('token'),'\",\"end_date\":\"',variables('end_date'),'\",\"table\":\"',variables('table'),'\"}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Set Start Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set End Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ClientSecret": {
						"type": "string",
						"defaultValue": "b0w7Q~IGjV3RcA~b3N2yXYWmVN.gTd1GUeA-."
					},
					"ClientID": {
						"type": "string",
						"defaultValue": "9dc3796a-275c-4753-aedd-1c61fb230b74"
					},
					"TenantID": {
						"type": "string",
						"defaultValue": "f8e56e96-2cd7-413d-9a4d-177bfd942437"
					},
					"WorkspaceID": {
						"type": "string",
						"defaultValue": "8f01acd1-5ade-4ad8-8c2c-5a3708be25e5"
					},
					"Table_Names": {
						"type": "array",
						"defaultValue": [
							"AppDependencies"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-06-16 00:00:00"
					},
					"start_time": {
						"type": "string",
						"defaultValue": "2022-06-15 00:00:00"
					}
				},
				"variables": {
					"Resource": {
						"type": "String",
						"defaultValue": "https://api.loganalytics.io"
					},
					"token": {
						"type": "String"
					},
					"table": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"start_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SOS"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-05T10:50:35Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_LogAnalytics_AppDependencies_1606_1706')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getBearerToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://login.microsoftonline.com/',pipeline().parameters.TenantID,'/oauth2/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat(\n'grant_type=client_credentials',\n'&client_id=',pipeline().parameters.ClientID,\n'&client_secret=',pipeline().parameters.ClientSecret,\n'&resource=',variables('Resource')\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Token Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "getBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "token",
							"value": {
								"value": "@activity('getBearerToken').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Token Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Table_Names",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Table Variable",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set End Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Table Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.end_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Post Function",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set Start Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://blinkoo-data-factory-pipelines.azurewebsites.net/api/get_log_data",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"start_date\":\"',variables('start_date'),'\",\"token\":\"',variables('token'),'\",\"end_date\":\"',variables('end_date'),'\",\"table\":\"',variables('table'),'\"}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Set Start Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set End Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ClientSecret": {
						"type": "string",
						"defaultValue": "b0w7Q~IGjV3RcA~b3N2yXYWmVN.gTd1GUeA-."
					},
					"ClientID": {
						"type": "string",
						"defaultValue": "9dc3796a-275c-4753-aedd-1c61fb230b74"
					},
					"TenantID": {
						"type": "string",
						"defaultValue": "f8e56e96-2cd7-413d-9a4d-177bfd942437"
					},
					"WorkspaceID": {
						"type": "string",
						"defaultValue": "8f01acd1-5ade-4ad8-8c2c-5a3708be25e5"
					},
					"Table_Names": {
						"type": "array",
						"defaultValue": [
							"AppDependencies"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-06-17 00:00:00"
					},
					"start_time": {
						"type": "string",
						"defaultValue": "2022-06-16 00:00:00"
					}
				},
				"variables": {
					"Resource": {
						"type": "String",
						"defaultValue": "https://api.loganalytics.io"
					},
					"token": {
						"type": "String"
					},
					"table": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"start_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SOS"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-05T10:50:35Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_LogAnalytics_AppDependencies_1706_1806')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getBearerToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://login.microsoftonline.com/',pipeline().parameters.TenantID,'/oauth2/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat(\n'grant_type=client_credentials',\n'&client_id=',pipeline().parameters.ClientID,\n'&client_secret=',pipeline().parameters.ClientSecret,\n'&resource=',variables('Resource')\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Token Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "getBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "token",
							"value": {
								"value": "@activity('getBearerToken').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Token Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Table_Names",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Table Variable",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set End Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Table Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.end_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Post Function",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set Start Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://blinkoo-data-factory-pipelines.azurewebsites.net/api/get_log_data",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"start_date\":\"',variables('start_date'),'\",\"token\":\"',variables('token'),'\",\"end_date\":\"',variables('end_date'),'\",\"table\":\"',variables('table'),'\"}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Set Start Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set End Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ClientSecret": {
						"type": "string",
						"defaultValue": "b0w7Q~IGjV3RcA~b3N2yXYWmVN.gTd1GUeA-."
					},
					"ClientID": {
						"type": "string",
						"defaultValue": "9dc3796a-275c-4753-aedd-1c61fb230b74"
					},
					"TenantID": {
						"type": "string",
						"defaultValue": "f8e56e96-2cd7-413d-9a4d-177bfd942437"
					},
					"WorkspaceID": {
						"type": "string",
						"defaultValue": "8f01acd1-5ade-4ad8-8c2c-5a3708be25e5"
					},
					"Table_Names": {
						"type": "array",
						"defaultValue": [
							"AppDependencies"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-06-18 00:00:00"
					},
					"start_time": {
						"type": "string",
						"defaultValue": "2022-06-17 00:00:00"
					}
				},
				"variables": {
					"Resource": {
						"type": "String",
						"defaultValue": "https://api.loganalytics.io"
					},
					"token": {
						"type": "String"
					},
					"table": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"start_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SOS"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-05T10:50:35Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_LogAnalytics_AppDependencies_1806_1906')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getBearerToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://login.microsoftonline.com/',pipeline().parameters.TenantID,'/oauth2/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat(\n'grant_type=client_credentials',\n'&client_id=',pipeline().parameters.ClientID,\n'&client_secret=',pipeline().parameters.ClientSecret,\n'&resource=',variables('Resource')\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Token Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "getBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "token",
							"value": {
								"value": "@activity('getBearerToken').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Token Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Table_Names",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Table Variable",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set End Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Table Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.end_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Post Function",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set Start Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://blinkoo-data-factory-pipelines.azurewebsites.net/api/get_log_data",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"start_date\":\"',variables('start_date'),'\",\"token\":\"',variables('token'),'\",\"end_date\":\"',variables('end_date'),'\",\"table\":\"',variables('table'),'\"}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Set Start Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set End Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ClientSecret": {
						"type": "string",
						"defaultValue": "b0w7Q~IGjV3RcA~b3N2yXYWmVN.gTd1GUeA-."
					},
					"ClientID": {
						"type": "string",
						"defaultValue": "9dc3796a-275c-4753-aedd-1c61fb230b74"
					},
					"TenantID": {
						"type": "string",
						"defaultValue": "f8e56e96-2cd7-413d-9a4d-177bfd942437"
					},
					"WorkspaceID": {
						"type": "string",
						"defaultValue": "8f01acd1-5ade-4ad8-8c2c-5a3708be25e5"
					},
					"Table_Names": {
						"type": "array",
						"defaultValue": [
							"AppDependencies"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-06-19 00:00:00"
					},
					"start_time": {
						"type": "string",
						"defaultValue": "2022-06-18 00:00:00"
					}
				},
				"variables": {
					"Resource": {
						"type": "String",
						"defaultValue": "https://api.loganalytics.io"
					},
					"token": {
						"type": "String"
					},
					"table": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"start_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SOS"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-05T10:50:35Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_LogAnalytics_AppDependencies_1906_2006')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getBearerToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://login.microsoftonline.com/',pipeline().parameters.TenantID,'/oauth2/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat(\n'grant_type=client_credentials',\n'&client_id=',pipeline().parameters.ClientID,\n'&client_secret=',pipeline().parameters.ClientSecret,\n'&resource=',variables('Resource')\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Token Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "getBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "token",
							"value": {
								"value": "@activity('getBearerToken').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Token Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Table_Names",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Table Variable",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set End Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Table Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.end_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Post Function",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set Start Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://blinkoo-data-factory-pipelines.azurewebsites.net/api/get_log_data",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"start_date\":\"',variables('start_date'),'\",\"token\":\"',variables('token'),'\",\"end_date\":\"',variables('end_date'),'\",\"table\":\"',variables('table'),'\"}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Set Start Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set End Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ClientSecret": {
						"type": "string",
						"defaultValue": "b0w7Q~IGjV3RcA~b3N2yXYWmVN.gTd1GUeA-."
					},
					"ClientID": {
						"type": "string",
						"defaultValue": "9dc3796a-275c-4753-aedd-1c61fb230b74"
					},
					"TenantID": {
						"type": "string",
						"defaultValue": "f8e56e96-2cd7-413d-9a4d-177bfd942437"
					},
					"WorkspaceID": {
						"type": "string",
						"defaultValue": "8f01acd1-5ade-4ad8-8c2c-5a3708be25e5"
					},
					"Table_Names": {
						"type": "array",
						"defaultValue": [
							"AppDependencies"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-06-20 00:00:00"
					},
					"start_time": {
						"type": "string",
						"defaultValue": "2022-06-19 00:00:00"
					}
				},
				"variables": {
					"Resource": {
						"type": "String",
						"defaultValue": "https://api.loganalytics.io"
					},
					"token": {
						"type": "String"
					},
					"table": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"start_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SOS"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-05T10:50:35Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_LogAnalytics_AppDependencies_2006_2106')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getBearerToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://login.microsoftonline.com/',pipeline().parameters.TenantID,'/oauth2/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat(\n'grant_type=client_credentials',\n'&client_id=',pipeline().parameters.ClientID,\n'&client_secret=',pipeline().parameters.ClientSecret,\n'&resource=',variables('Resource')\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Token Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "getBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "token",
							"value": {
								"value": "@activity('getBearerToken').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Token Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Table_Names",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Table Variable",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set End Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Table Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.end_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Post Function",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set Start Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://blinkoo-data-factory-pipelines.azurewebsites.net/api/get_log_data",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"start_date\":\"',variables('start_date'),'\",\"token\":\"',variables('token'),'\",\"end_date\":\"',variables('end_date'),'\",\"table\":\"',variables('table'),'\"}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Set Start Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set End Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ClientSecret": {
						"type": "string",
						"defaultValue": "b0w7Q~IGjV3RcA~b3N2yXYWmVN.gTd1GUeA-."
					},
					"ClientID": {
						"type": "string",
						"defaultValue": "9dc3796a-275c-4753-aedd-1c61fb230b74"
					},
					"TenantID": {
						"type": "string",
						"defaultValue": "f8e56e96-2cd7-413d-9a4d-177bfd942437"
					},
					"WorkspaceID": {
						"type": "string",
						"defaultValue": "8f01acd1-5ade-4ad8-8c2c-5a3708be25e5"
					},
					"Table_Names": {
						"type": "array",
						"defaultValue": [
							"AppDependencies"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-06-21 00:00:00"
					},
					"start_time": {
						"type": "string",
						"defaultValue": "2022-06-20 00:00:00"
					}
				},
				"variables": {
					"Resource": {
						"type": "String",
						"defaultValue": "https://api.loganalytics.io"
					},
					"token": {
						"type": "String"
					},
					"table": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"start_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SOS"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-05T10:50:35Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_LogAnalytics_AppDependencies_2106_2206')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getBearerToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://login.microsoftonline.com/',pipeline().parameters.TenantID,'/oauth2/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat(\n'grant_type=client_credentials',\n'&client_id=',pipeline().parameters.ClientID,\n'&client_secret=',pipeline().parameters.ClientSecret,\n'&resource=',variables('Resource')\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Token Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "getBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "token",
							"value": {
								"value": "@activity('getBearerToken').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Token Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Table_Names",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Table Variable",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set End Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Table Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.end_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Post Function",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set Start Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://blinkoo-data-factory-pipelines.azurewebsites.net/api/get_log_data",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"start_date\":\"',variables('start_date'),'\",\"token\":\"',variables('token'),'\",\"end_date\":\"',variables('end_date'),'\",\"table\":\"',variables('table'),'\"}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Set Start Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set End Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ClientSecret": {
						"type": "string",
						"defaultValue": "b0w7Q~IGjV3RcA~b3N2yXYWmVN.gTd1GUeA-."
					},
					"ClientID": {
						"type": "string",
						"defaultValue": "9dc3796a-275c-4753-aedd-1c61fb230b74"
					},
					"TenantID": {
						"type": "string",
						"defaultValue": "f8e56e96-2cd7-413d-9a4d-177bfd942437"
					},
					"WorkspaceID": {
						"type": "string",
						"defaultValue": "8f01acd1-5ade-4ad8-8c2c-5a3708be25e5"
					},
					"Table_Names": {
						"type": "array",
						"defaultValue": [
							"AppDependencies"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-06-22 00:00:00"
					},
					"start_time": {
						"type": "string",
						"defaultValue": "2022-06-21 00:00:00"
					}
				},
				"variables": {
					"Resource": {
						"type": "String",
						"defaultValue": "https://api.loganalytics.io"
					},
					"token": {
						"type": "String"
					},
					"table": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"start_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SOS"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-05T10:50:35Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_LogAnalytics_AppDependencies_2206_2306')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getBearerToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://login.microsoftonline.com/',pipeline().parameters.TenantID,'/oauth2/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat(\n'grant_type=client_credentials',\n'&client_id=',pipeline().parameters.ClientID,\n'&client_secret=',pipeline().parameters.ClientSecret,\n'&resource=',variables('Resource')\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Token Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "getBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "token",
							"value": {
								"value": "@activity('getBearerToken').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Token Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Table_Names",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Table Variable",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set End Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Table Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.end_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Post Function",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set Start Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://blinkoo-data-factory-pipelines.azurewebsites.net/api/get_log_data",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"start_date\":\"',variables('start_date'),'\",\"token\":\"',variables('token'),'\",\"end_date\":\"',variables('end_date'),'\",\"table\":\"',variables('table'),'\"}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Set Start Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set End Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ClientSecret": {
						"type": "string",
						"defaultValue": "b0w7Q~IGjV3RcA~b3N2yXYWmVN.gTd1GUeA-."
					},
					"ClientID": {
						"type": "string",
						"defaultValue": "9dc3796a-275c-4753-aedd-1c61fb230b74"
					},
					"TenantID": {
						"type": "string",
						"defaultValue": "f8e56e96-2cd7-413d-9a4d-177bfd942437"
					},
					"WorkspaceID": {
						"type": "string",
						"defaultValue": "8f01acd1-5ade-4ad8-8c2c-5a3708be25e5"
					},
					"Table_Names": {
						"type": "array",
						"defaultValue": [
							"AppDependencies"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-06-23 00:00:00"
					},
					"start_time": {
						"type": "string",
						"defaultValue": "2022-06-22 00:00:00"
					}
				},
				"variables": {
					"Resource": {
						"type": "String",
						"defaultValue": "https://api.loganalytics.io"
					},
					"token": {
						"type": "String"
					},
					"table": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"start_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SOS"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-05T10:50:35Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_LogAnalytics_AppDependencies_2306_2406')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getBearerToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://login.microsoftonline.com/',pipeline().parameters.TenantID,'/oauth2/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat(\n'grant_type=client_credentials',\n'&client_id=',pipeline().parameters.ClientID,\n'&client_secret=',pipeline().parameters.ClientSecret,\n'&resource=',variables('Resource')\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Token Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "getBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "token",
							"value": {
								"value": "@activity('getBearerToken').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Token Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Table_Names",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Table Variable",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set End Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Table Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.end_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Post Function",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set Start Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://blinkoo-data-factory-pipelines.azurewebsites.net/api/get_log_data",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"start_date\":\"',variables('start_date'),'\",\"token\":\"',variables('token'),'\",\"end_date\":\"',variables('end_date'),'\",\"table\":\"',variables('table'),'\"}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Set Start Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set End Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ClientSecret": {
						"type": "string",
						"defaultValue": "b0w7Q~IGjV3RcA~b3N2yXYWmVN.gTd1GUeA-."
					},
					"ClientID": {
						"type": "string",
						"defaultValue": "9dc3796a-275c-4753-aedd-1c61fb230b74"
					},
					"TenantID": {
						"type": "string",
						"defaultValue": "f8e56e96-2cd7-413d-9a4d-177bfd942437"
					},
					"WorkspaceID": {
						"type": "string",
						"defaultValue": "8f01acd1-5ade-4ad8-8c2c-5a3708be25e5"
					},
					"Table_Names": {
						"type": "array",
						"defaultValue": [
							"AppDependencies"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-06-24 00:00:00"
					},
					"start_time": {
						"type": "string",
						"defaultValue": "2022-06-23 00:00:00"
					}
				},
				"variables": {
					"Resource": {
						"type": "String",
						"defaultValue": "https://api.loganalytics.io"
					},
					"token": {
						"type": "String"
					},
					"table": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"start_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SOS"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-05T10:50:35Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_LogAnalytics_AppDependencies_2406_2506')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getBearerToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://login.microsoftonline.com/',pipeline().parameters.TenantID,'/oauth2/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat(\n'grant_type=client_credentials',\n'&client_id=',pipeline().parameters.ClientID,\n'&client_secret=',pipeline().parameters.ClientSecret,\n'&resource=',variables('Resource')\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Token Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "getBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "token",
							"value": {
								"value": "@activity('getBearerToken').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Token Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Table_Names",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Table Variable",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set End Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Table Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.end_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Post Function",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set Start Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://blinkoo-data-factory-pipelines.azurewebsites.net/api/get_log_data",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"start_date\":\"',variables('start_date'),'\",\"token\":\"',variables('token'),'\",\"end_date\":\"',variables('end_date'),'\",\"table\":\"',variables('table'),'\"}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Set Start Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set End Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ClientSecret": {
						"type": "string",
						"defaultValue": "b0w7Q~IGjV3RcA~b3N2yXYWmVN.gTd1GUeA-."
					},
					"ClientID": {
						"type": "string",
						"defaultValue": "9dc3796a-275c-4753-aedd-1c61fb230b74"
					},
					"TenantID": {
						"type": "string",
						"defaultValue": "f8e56e96-2cd7-413d-9a4d-177bfd942437"
					},
					"WorkspaceID": {
						"type": "string",
						"defaultValue": "8f01acd1-5ade-4ad8-8c2c-5a3708be25e5"
					},
					"Table_Names": {
						"type": "array",
						"defaultValue": [
							"AppDependencies"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-06-25 00:00:00"
					},
					"start_time": {
						"type": "string",
						"defaultValue": "2022-06-24 00:00:00"
					}
				},
				"variables": {
					"Resource": {
						"type": "String",
						"defaultValue": "https://api.loganalytics.io"
					},
					"token": {
						"type": "String"
					},
					"table": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"start_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SOS"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-05T10:50:35Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_LogAnalytics_AppDependencies_2506_2606')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getBearerToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://login.microsoftonline.com/',pipeline().parameters.TenantID,'/oauth2/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat(\n'grant_type=client_credentials',\n'&client_id=',pipeline().parameters.ClientID,\n'&client_secret=',pipeline().parameters.ClientSecret,\n'&resource=',variables('Resource')\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Token Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "getBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "token",
							"value": {
								"value": "@activity('getBearerToken').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Token Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Table_Names",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Table Variable",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set End Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Table Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.end_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Post Function",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set Start Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://blinkoo-data-factory-pipelines.azurewebsites.net/api/get_log_data",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"start_date\":\"',variables('start_date'),'\",\"token\":\"',variables('token'),'\",\"end_date\":\"',variables('end_date'),'\",\"table\":\"',variables('table'),'\"}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Set Start Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set End Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ClientSecret": {
						"type": "string",
						"defaultValue": "b0w7Q~IGjV3RcA~b3N2yXYWmVN.gTd1GUeA-."
					},
					"ClientID": {
						"type": "string",
						"defaultValue": "9dc3796a-275c-4753-aedd-1c61fb230b74"
					},
					"TenantID": {
						"type": "string",
						"defaultValue": "f8e56e96-2cd7-413d-9a4d-177bfd942437"
					},
					"WorkspaceID": {
						"type": "string",
						"defaultValue": "8f01acd1-5ade-4ad8-8c2c-5a3708be25e5"
					},
					"Table_Names": {
						"type": "array",
						"defaultValue": [
							"AppDependencies"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-06-26 00:00:00"
					},
					"start_time": {
						"type": "string",
						"defaultValue": "2022-06-25 00:00:00"
					}
				},
				"variables": {
					"Resource": {
						"type": "String",
						"defaultValue": "https://api.loganalytics.io"
					},
					"token": {
						"type": "String"
					},
					"table": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"start_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SOS"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-05T10:50:35Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_LogAnalytics_AppDependencies_2606_2706')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getBearerToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://login.microsoftonline.com/',pipeline().parameters.TenantID,'/oauth2/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat(\n'grant_type=client_credentials',\n'&client_id=',pipeline().parameters.ClientID,\n'&client_secret=',pipeline().parameters.ClientSecret,\n'&resource=',variables('Resource')\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Token Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "getBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "token",
							"value": {
								"value": "@activity('getBearerToken').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Token Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Table_Names",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Table Variable",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set End Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Table Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.end_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Post Function",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set Start Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://blinkoo-data-factory-pipelines.azurewebsites.net/api/get_log_data",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"start_date\":\"',variables('start_date'),'\",\"token\":\"',variables('token'),'\",\"end_date\":\"',variables('end_date'),'\",\"table\":\"',variables('table'),'\"}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Set Start Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set End Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ClientSecret": {
						"type": "string",
						"defaultValue": "b0w7Q~IGjV3RcA~b3N2yXYWmVN.gTd1GUeA-."
					},
					"ClientID": {
						"type": "string",
						"defaultValue": "9dc3796a-275c-4753-aedd-1c61fb230b74"
					},
					"TenantID": {
						"type": "string",
						"defaultValue": "f8e56e96-2cd7-413d-9a4d-177bfd942437"
					},
					"WorkspaceID": {
						"type": "string",
						"defaultValue": "8f01acd1-5ade-4ad8-8c2c-5a3708be25e5"
					},
					"Table_Names": {
						"type": "array",
						"defaultValue": [
							"AppDependencies"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-06-27 00:00:00"
					},
					"start_time": {
						"type": "string",
						"defaultValue": "2022-06-26 00:00:00"
					}
				},
				"variables": {
					"Resource": {
						"type": "String",
						"defaultValue": "https://api.loganalytics.io"
					},
					"token": {
						"type": "String"
					},
					"table": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"start_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SOS"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-05T10:50:35Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_LogAnalytics_AppDependencies_2706_2806')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getBearerToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://login.microsoftonline.com/',pipeline().parameters.TenantID,'/oauth2/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat(\n'grant_type=client_credentials',\n'&client_id=',pipeline().parameters.ClientID,\n'&client_secret=',pipeline().parameters.ClientSecret,\n'&resource=',variables('Resource')\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Token Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "getBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "token",
							"value": {
								"value": "@activity('getBearerToken').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Token Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Table_Names",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Table Variable",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set End Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Table Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.end_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Post Function",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set Start Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://blinkoo-data-factory-pipelines.azurewebsites.net/api/get_log_data",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"start_date\":\"',variables('start_date'),'\",\"token\":\"',variables('token'),'\",\"end_date\":\"',variables('end_date'),'\",\"table\":\"',variables('table'),'\"}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Set Start Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set End Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ClientSecret": {
						"type": "string",
						"defaultValue": "b0w7Q~IGjV3RcA~b3N2yXYWmVN.gTd1GUeA-."
					},
					"ClientID": {
						"type": "string",
						"defaultValue": "9dc3796a-275c-4753-aedd-1c61fb230b74"
					},
					"TenantID": {
						"type": "string",
						"defaultValue": "f8e56e96-2cd7-413d-9a4d-177bfd942437"
					},
					"WorkspaceID": {
						"type": "string",
						"defaultValue": "8f01acd1-5ade-4ad8-8c2c-5a3708be25e5"
					},
					"Table_Names": {
						"type": "array",
						"defaultValue": [
							"AppDependencies"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-06-28 00:00:00"
					},
					"start_time": {
						"type": "string",
						"defaultValue": "2022-06-27 00:00:00"
					}
				},
				"variables": {
					"Resource": {
						"type": "String",
						"defaultValue": "https://api.loganalytics.io"
					},
					"token": {
						"type": "String"
					},
					"table": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"start_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SOS"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-05T10:50:35Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_LogAnalytics_AppDependencies_2806_2906')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getBearerToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://login.microsoftonline.com/',pipeline().parameters.TenantID,'/oauth2/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat(\n'grant_type=client_credentials',\n'&client_id=',pipeline().parameters.ClientID,\n'&client_secret=',pipeline().parameters.ClientSecret,\n'&resource=',variables('Resource')\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Token Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "getBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "token",
							"value": {
								"value": "@activity('getBearerToken').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Token Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Table_Names",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Table Variable",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set End Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Table Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.end_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Post Function",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set Start Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://blinkoo-data-factory-pipelines.azurewebsites.net/api/get_log_data",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"start_date\":\"',variables('start_date'),'\",\"token\":\"',variables('token'),'\",\"end_date\":\"',variables('end_date'),'\",\"table\":\"',variables('table'),'\"}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Set Start Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set End Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ClientSecret": {
						"type": "string",
						"defaultValue": "b0w7Q~IGjV3RcA~b3N2yXYWmVN.gTd1GUeA-."
					},
					"ClientID": {
						"type": "string",
						"defaultValue": "9dc3796a-275c-4753-aedd-1c61fb230b74"
					},
					"TenantID": {
						"type": "string",
						"defaultValue": "f8e56e96-2cd7-413d-9a4d-177bfd942437"
					},
					"WorkspaceID": {
						"type": "string",
						"defaultValue": "8f01acd1-5ade-4ad8-8c2c-5a3708be25e5"
					},
					"Table_Names": {
						"type": "array",
						"defaultValue": [
							"AppDependencies"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-06-29 00:00:00"
					},
					"start_time": {
						"type": "string",
						"defaultValue": "2022-06-28 00:00:00"
					}
				},
				"variables": {
					"Resource": {
						"type": "String",
						"defaultValue": "https://api.loganalytics.io"
					},
					"token": {
						"type": "String"
					},
					"table": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"start_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SOS"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-05T10:50:35Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_LogAnalytics_AppDependencies_2906_3006')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getBearerToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://login.microsoftonline.com/',pipeline().parameters.TenantID,'/oauth2/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat(\n'grant_type=client_credentials',\n'&client_id=',pipeline().parameters.ClientID,\n'&client_secret=',pipeline().parameters.ClientSecret,\n'&resource=',variables('Resource')\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Token Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "getBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "token",
							"value": {
								"value": "@activity('getBearerToken').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Token Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Table_Names",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Table Variable",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set End Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Table Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.end_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Post Function",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set Start Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://blinkoo-data-factory-pipelines.azurewebsites.net/api/get_log_data",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"start_date\":\"',variables('start_date'),'\",\"token\":\"',variables('token'),'\",\"end_date\":\"',variables('end_date'),'\",\"table\":\"',variables('table'),'\"}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Set Start Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set End Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ClientSecret": {
						"type": "string",
						"defaultValue": "b0w7Q~IGjV3RcA~b3N2yXYWmVN.gTd1GUeA-."
					},
					"ClientID": {
						"type": "string",
						"defaultValue": "9dc3796a-275c-4753-aedd-1c61fb230b74"
					},
					"TenantID": {
						"type": "string",
						"defaultValue": "f8e56e96-2cd7-413d-9a4d-177bfd942437"
					},
					"WorkspaceID": {
						"type": "string",
						"defaultValue": "8f01acd1-5ade-4ad8-8c2c-5a3708be25e5"
					},
					"Table_Names": {
						"type": "array",
						"defaultValue": [
							"AppDependencies"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-06-30 00:00:00"
					},
					"start_time": {
						"type": "string",
						"defaultValue": "2022-06-29 00:00:00"
					}
				},
				"variables": {
					"Resource": {
						"type": "String",
						"defaultValue": "https://api.loganalytics.io"
					},
					"token": {
						"type": "String"
					},
					"table": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"start_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SOS"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-05T10:50:35Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_LogAnalytics_AppDependencies_3006_0107')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getBearerToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://login.microsoftonline.com/',pipeline().parameters.TenantID,'/oauth2/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat(\n'grant_type=client_credentials',\n'&client_id=',pipeline().parameters.ClientID,\n'&client_secret=',pipeline().parameters.ClientSecret,\n'&resource=',variables('Resource')\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Token Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "getBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "token",
							"value": {
								"value": "@activity('getBearerToken').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Token Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Table_Names",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Table Variable",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set End Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Table Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.end_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Post Function",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set Start Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://blinkoo-data-factory-pipelines.azurewebsites.net/api/get_log_data",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"start_date\":\"',variables('start_date'),'\",\"token\":\"',variables('token'),'\",\"end_date\":\"',variables('end_date'),'\",\"table\":\"',variables('table'),'\"}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Set Start Date Variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set End Date Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@formatDateTime(pipeline().parameters.start_time,'yyyy-MM-dd, HH:00:00')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ClientSecret": {
						"type": "string",
						"defaultValue": "b0w7Q~IGjV3RcA~b3N2yXYWmVN.gTd1GUeA-."
					},
					"ClientID": {
						"type": "string",
						"defaultValue": "9dc3796a-275c-4753-aedd-1c61fb230b74"
					},
					"TenantID": {
						"type": "string",
						"defaultValue": "f8e56e96-2cd7-413d-9a4d-177bfd942437"
					},
					"WorkspaceID": {
						"type": "string",
						"defaultValue": "8f01acd1-5ade-4ad8-8c2c-5a3708be25e5"
					},
					"Table_Names": {
						"type": "array",
						"defaultValue": [
							"AppDependencies"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-07-01 00:00:00"
					},
					"start_time": {
						"type": "string",
						"defaultValue": "2022-06-30 00:00:00"
					}
				},
				"variables": {
					"Resource": {
						"type": "String",
						"defaultValue": "https://api.loganalytics.io"
					},
					"token": {
						"type": "String"
					},
					"table": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"start_date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SOS"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-05T13:04:16Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Daily_Bronze_SqlServer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Tables",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Bronze ETL",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Set end_time in timestamp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/riccardo.perelli@blinkoo.com/Pipelines/Bronze/SqlBronze",
										"baseParameters": {
											"Table": {
												"value": "@item()",
												"type": "Expression"
											},
											"EndDate": {
												"value": "@variables('EndTime')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set end_time in timestamp",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "EndTime",
										"value": {
											"value": "@{div(sub(ticks(addHours(pipeline().parameters.end_time,-3)), ticks('1970-01-01')),10000000)}\n",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Execute Silver Update Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Daily_Silver_SqlServer",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Tables": {
									"value": "@pipeline().parameters.Tables",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Tables": {
						"type": "array",
						"defaultValue": [
							"place_tip"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-06-24 04:00:00"
					}
				},
				"variables": {
					"EndTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Cosmos DB/Daily"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-24T05:03:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Daily_Silver_SqlServer')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Daily_Bronze_Update_CosmosDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Tables",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Bronze ETL",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Set end_time in timestamp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/elnur.garashov@porini.it/elnur.garashov/CosmosDB Update/0 Bronze",
										"baseParameters": {
											"Table": {
												"value": "@item()",
												"type": "Expression"
											},
											"EndDate": {
												"value": "@variables('EndTime')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set end_time in timestamp",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "EndTime",
										"value": {
											"value": "@{div(sub(ticks(addHours(pipeline().parameters.end_time,-3)), ticks('1970-01-01')),10000000)}\n",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Execute Silver Update Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Daily_Silver_Update_CosmosDB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Tables": {
									"value": "@pipeline().parameters.Tables",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Tables": {
						"type": "array",
						"defaultValue": [
							"FeedList",
							"PostStat",
							"UserInfo",
							"Feed"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-06-24 04:00:00"
					}
				},
				"variables": {
					"EndTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Cosmos DB/Daily"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-24T05:03:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Daily_Silver_Update_CosmosDB')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Daily_Silver_SqlServer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach Table",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Tables",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Silver Update ETL",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/riccardo.perelli@blinkoo.com/Pipelines/Silver/SqlBronzeToSilver",
										"baseParameters": {
											"Table": {
												"value": "@item()",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Tables": {
						"type": "array",
						"defaultValue": [
							"place_tip"
						]
					}
				},
				"folder": {
					"name": "Cosmos DB/Daily"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-24T04:58:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Daily_Silver_Update_CosmosDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach Table",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Tables",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Silver Update ETL",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/elnur.garashov@porini.it/elnur.garashov/CosmosDB Update/1 Silver",
										"baseParameters": {
											"Table": {
												"value": "@item()",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Tables": {
						"type": "array",
						"defaultValue": [
							"FeedList",
							"PostStat",
							"UserInfo",
							"Feed"
						]
					}
				},
				"folder": {
					"name": "Cosmos DB/Daily"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-24T04:58:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/KPIs_prototype')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "KPIs_prototype",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/enrico.sartor@blinkoo.com/KPIs_prototype",
							"baseParameters": {
								"startDate": {
									"value": "@pipeline().parameters.startDate",
									"type": "Expression"
								},
								"endDate": {
									"value": "@pipeline().parameters.endDate",
									"type": "Expression"
								},
								"interval": {
									"value": "@pipeline().parameters.interval",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"startDate": {
						"type": "string",
						"defaultValue": "last"
					},
					"endDate": {
						"type": "string"
					},
					"interval": {
						"type": "string",
						"defaultValue": "7"
					}
				},
				"folder": {
					"name": "KPIs"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-06T10:51:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Silver_Delta_CosmosDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Tables",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set variable Table",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable EndTime",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set variable Table",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "EndTime",
										"value": {
											"value": "@{div(sub(ticks(addHours(pipeline().parameters.end_time,-3)), ticks('1970-01-01')),10000000)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Notebook1",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Set variable EndTime",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/elnur.garashov@porini.it/elnur.garashov/CosmosDB/Silver/Silver Delta",
										"baseParameters": {
											"Table": {
												"value": "@variables('Table')",
												"type": "Expression"
											},
											"EndDate": {
												"value": "@variables('EndTime')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"end_time": {
						"type": "string",
						"defaultValue": "2022-05-12 03:00:00"
					},
					"Tables": {
						"type": "array",
						"defaultValue": [
							"Post",
							"Geometry",
							"PostStat",
							"UserInfo",
							"Categories",
							"Places",
							"Feed",
							"GeoLocation"
						]
					}
				},
				"variables": {
					"EndTime": {
						"type": "String"
					},
					"Table": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Dev/Draft/CosmosDB/Delta"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-23T08:12:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Silver_Full')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.tables",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set variable StartTime",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "StartTime",
										"value": {
											"value": "@{div(sub(ticks(pipeline().parameters.start_time), ticks('1970-01-01')),10000000)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable EndTime",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set variable StartTime",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "EndTime",
										"value": {
											"value": "@{div(sub(ticks(pipeline().parameters.end_time), ticks('1970-01-01')),10000000)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Silver Full ETL",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Set variable EndTime",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/elnur.garashov@porini.it/elnur.garashov/CosmosDB Update/Silver Full",
										"baseParameters": {
											"StartDate": {
												"value": "@variables('StartTime')",
												"type": "Expression"
											},
											"EndDate": {
												"value": "@variables('EndTime')",
												"type": "Expression"
											},
											"Table": {
												"value": "@item()",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"start_time": {
						"type": "string",
						"defaultValue": "2000-01-01 00:00:00"
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-05-30 00:00:00"
					},
					"tables": {
						"type": "array",
						"defaultValue": [
							"FeedList",
							"Post",
							"Geometry",
							"PostStat",
							"UserInfo",
							"Categories",
							"Places",
							"Feed",
							"GeoLocation"
						]
					}
				},
				"variables": {
					"StartTime": {
						"type": "String"
					},
					"EndTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Cosmos DB"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-01T10:29:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Silver_Full_CosmosDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Set variable EndTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/elnur.garashov@porini.it/elnur.garashov/CosmosDB/Silver/Silver Full",
							"baseParameters": {
								"StartDate": {
									"value": "@variables('StartTime')",
									"type": "Expression"
								},
								"EndDate": {
									"value": "@variables('EndTime')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set variable StartTime",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "StartTime",
							"value": {
								"value": "@{div(sub(ticks(pipeline().parameters.start_time), ticks('1970-01-01')),10000000)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable EndTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable StartTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "EndTime",
							"value": {
								"value": "@{div(sub(ticks(pipeline().parameters.end_time), ticks('1970-01-01')),10000000)}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"start_time": {
						"type": "string",
						"defaultValue": "2000-01-01 00:00:00"
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-05-11 00:00:00"
					}
				},
				"variables": {
					"StartTime": {
						"type": "String"
					},
					"EndTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Dev/Draft/CosmosDB/Full"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-23T08:12:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Silver_Full_LogAnalytics')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.TableNames",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Variable Table",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Notebook1",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Set Variable Table",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/elnur.garashov@porini.it/elnur.garashov/LogAnalytics/Full",
										"baseParameters": {
											"Table": {
												"value": "@variables('Table')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"TableNames": {
						"type": "array",
						"defaultValue": [
							"AppDependencies",
							"AppEvents",
							"AppExceptions",
							"AppMetrics",
							"AppPageViews",
							"AppPerformanceCounters",
							"AppRequests",
							"AppSystemEvents",
							"AppTraces",
							"Usage"
						]
					}
				},
				"variables": {
					"EndTime": {
						"type": "String"
					},
					"Table": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Dev/Draft/Log Analytics"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-24T06:02:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Silver_LogAnalytics')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.TableNames",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Variable Table",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set Variable End Date",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Variable Table",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "EndTime",
										"value": {
											"value": "@formatDateTime(addHours(pipeline().parameters.start_time,-3),'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "BronzeToSilver_por_version",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Set Variable End Date",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 1,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/elnur.garashov@porini.it/elnur.garashov/LogAnalytics/Delta",
										"baseParameters": {
											"Table": {
												"value": "@variables('Table')",
												"type": "Expression"
											},
											"EndDate": {
												"value": "@variables('EndTime')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"TableNames": {
						"type": "array",
						"defaultValue": [
							"AppDependencies",
							"AppEvents",
							"AppExceptions",
							"AppMetrics",
							"AppPageViews",
							"AppPerformanceCounters",
							"AppRequests",
							"AppSystemEvents",
							"AppTraces",
							"Usage"
						]
					},
					"start_time": {
						"type": "string",
						"defaultValue": "2022-07-01 03:00:00"
					}
				},
				"variables": {
					"EndTime": {
						"type": "String"
					},
					"Table": {
						"type": "String"
					}
				},
				"folder": {
					"name": "LogAnalytics"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-06T21:34:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Weekly_Bronze_SqlServer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Tables",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Bronze ETL",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Set end_time in timestamp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/riccardo.perelli@blinkoo.com/Pipelines/Bronze/SqlBronze",
										"baseParameters": {
											"Table": {
												"value": "@item()",
												"type": "Expression"
											},
											"EndDate": {
												"value": "@variables('EndTime')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set end_time in timestamp",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "EndTime",
										"value": {
											"value": "@{div(sub(ticks(addHours(pipeline().parameters.end_time,-3)), ticks('1970-01-01')),10000000)}\n",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Execute Silver Update Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Weekly_Silver_SqlServer",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"Tables": {
									"value": "@pipeline().parameters.Tables",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Tables": {
						"type": "array",
						"defaultValue": [
							"categories",
							"geo_location",
							"places"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-06-24 04:00:00"
					}
				},
				"variables": {
					"EndTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Cosmos DB/Weekly"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-24T05:07:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Weekly_Silver_SqlServer')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Weekly_Bronze_Update_CosmosDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Tables",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Bronze ETL",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Set end_time in timestamp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/elnur.garashov@porini.it/elnur.garashov/CosmosDB Update/0 Bronze",
										"baseParameters": {
											"Table": {
												"value": "@item()",
												"type": "Expression"
											},
											"EndDate": {
												"value": "@variables('EndTime')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set end_time in timestamp",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "EndTime",
										"value": {
											"value": "@{div(sub(ticks(addHours(pipeline().parameters.end_time,-3)), ticks('1970-01-01')),10000000)}\n",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Execute Silver Update Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Weekly_Silver_Update_CosmosDB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"Tables": {
									"value": "@pipeline().parameters.Tables",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Tables": {
						"type": "array",
						"defaultValue": [
							"Categories",
							"GeoLocation",
							"Places"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-06-24 04:00:00"
					}
				},
				"variables": {
					"EndTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Cosmos DB/Weekly"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-24T05:07:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Weekly_Silver_Update_CosmosDB')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Weekly_KPI_Standard')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "KPI_Standard",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/riccardo.perelli@blinkoo.com/KPI/KPI_standard",
							"baseParameters": {
								"endDate": {
									"value": "@formatDateTime(pipeline().triggerTime, 'yyyy-MM-dd')",
									"type": "Expression"
								},
								"startDate": {
									"value": "@formatDateTime(addDays(pipeline().triggerTime,-7),'yyyy-MM-dd')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks2",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"triggerTime": {
						"type": "string",
						"defaultValue": "@trigger().startTime"
					}
				},
				"folder": {
					"name": "KPIs"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Weekly_Playlist_Usage')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Playlist_Usage",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/riccardo.perelli@blinkoo.com/KPI/Playlist_Usage",
							"baseParameters": {
								"endDate": {
									"value": "@formatDateTime(addDays(addHours(pipeline().triggerTime,-12), -7), 'yyyy-MM-dd HH:mm:ss')",
									"type": "Expression"
								},
								"startDate": {
									"value": "@formatDateTime(addHours(pipeline().triggerTime,-12),'yyyy-MM-dd HH:mm:ss')",
									"type": "Expression"
								},
								"interval": "7"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks2",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"triggerTime": {
						"type": "string",
						"defaultValue": "@trigger().startTime"
					}
				},
				"folder": {
					"name": "KPIs"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Weekly_Silver_SqlServer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach Table",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Tables",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Silver Update ETL",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/riccardo.perelli@blinkoo.com/Pipelines/Silver/SqlBronzeToSilver",
										"baseParameters": {
											"Table": {
												"value": "@item()",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Tables": {
						"type": "array",
						"defaultValue": [
							"categories",
							"geo_location",
							"places"
						]
					}
				},
				"folder": {
					"name": "Cosmos DB/Weekly"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-24T04:59:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Weekly_Silver_Update_CosmosDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach Table",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Tables",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Silver Update ETL",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/elnur.garashov@porini.it/elnur.garashov/CosmosDB Update/1 Silver",
										"baseParameters": {
											"Table": {
												"value": "@item()",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Tables": {
						"type": "array",
						"defaultValue": [
							"Categories",
							"GeoLocation",
							"Places"
						]
					}
				},
				"folder": {
					"name": "Cosmos DB/Weekly"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-24T04:59:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/get_log_analytics_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getBearerToken",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "getClientSecret",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://login.microsoftonline.com/',pipeline().parameters.TenantID,'/oauth2/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat(\n'grant_type=client_credentials',\n'&client_id=',pipeline().parameters.ClientID,\n'&client_secret=',activity('getClientSecret').output.value,\n'&resource=',variables('Resource')\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "getClientSecret",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat(pipeline().parameters.KeyVaultClientSecretURI,'?api-version=7.0')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "ManagedVirtualNetworkIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "copyData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "getBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "POST",
								"requestBody": "{\"query\": \"AppRequests | where TimeGenerated > ago(12h) | summarize avgRequestDuration=avg(DurationMs) by bin(TimeGenerated, 10m), _ResourceId\"}",
								"additionalHeaders": {
									"Content-Type": "application/json;charset=utf-8",
									"Authorization": {
										"value": "@concat('Bearer ',activity('getBearerToken').output.access_token)",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "log_analytics_dataset",
								"type": "DatasetReference",
								"parameters": {
									"WorkspaceID": {
										"value": "@pipeline().parameters.WorkspaceID",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "adls_bronze",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"KeyVaultClientSecretURI": {
						"type": "string",
						"defaultValue": "https://kv-adf-dslab.vault.azure.net/secrets/LogAnaliticsClient-Secret/9ceb4860df994011ad92632b4b950477"
					},
					"ClientID": {
						"type": "string",
						"defaultValue": "75437993-3cde-47a2-9665-e5116db47c25"
					},
					"TenantID": {
						"type": "string",
						"defaultValue": "f98a3e64-1a37-4d3c-a324-f75eb3b0b7e4"
					},
					"WorkspaceID": {
						"type": "string",
						"defaultValue": "3a8b702f-dc94-4327-bf49-d7bd58804a90"
					}
				},
				"variables": {
					"Resource": {
						"type": "String",
						"defaultValue": "https://api.loganalytics.io"
					}
				},
				"folder": {
					"name": "Dev/Draft"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-31T20:08:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/ManagedVirtualNetworkIntegrationRuntime')]",
				"[concat(variables('factoryId'), '/datasets/log_analytics_dataset')]",
				"[concat(variables('factoryId'), '/datasets/adls_bronze')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/test_badge_coin_calculation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Badge_lite",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/enrico.sartor@blinkoo.com/badges_lite",
							"baseParameters": {
								"endDate": {
									"value": "@formatDateTime(pipeline().triggerTime, 'yyyy-MM-dd HH:mm:ss')",
									"type": "Expression"
								},
								"startDate": {
									"value": "@formatDateTime(addDays(pipeline().triggerTime, -7), 'yyyy-MM-dd HH:mm:ss')",
									"type": "Expression"
								},
								"interval": "7",
								"timeback": "30",
								"isTest": {
									"value": "True",
									"type": "Expression"
								},
								"postTableName": {
									"value": "by_post",
									"type": "Expression"
								},
								"userTableName": {
									"value": "by_user",
									"type": "Expression"
								},
								"testNumber": "25"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"triggerTime": {
						"type": "string",
						"defaultValue": "@trigger().startTime"
					}
				},
				"folder": {
					"name": "Dev/Draft"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/test_deep_session')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Deep session",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Pre-deep session pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/riccardo.perelli@blinkoo.com/DeepSession/DeepSession - Test",
							"baseParameters": {
								"startDate": {
									"value": "@formatDateTime(addDays(pipeline().triggerTime, -7), 'yyyy-MM-dd HH:mm:ss')",
									"type": "Expression"
								},
								"endDate": {
									"value": "@formatDateTime(pipeline().triggerTime, 'yyyy-MM-dd HH:mm:ss')",
									"type": "Expression"
								},
								"interval": "7",
								"isTest": "True",
								"testNumber": {
									"value": "@pipeline().parameters.testNumber",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Pre-deep session pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "test_pre-deep_session",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "badge and coin pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Deep session",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "test_badge_coin_calculation",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "KPI_Feature_usage",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Deep session",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "test_kpi_feature_usage",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "KPI_Userinfo",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Deep session",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "test_kpi_user_info",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "KPI_Userperforming",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Deep session",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "test_kpi_user_performing",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"triggerTime": {
						"type": "string",
						"defaultValue": "@trigger().startTime"
					},
					"testNumber": {
						"type": "string",
						"defaultValue": "@trigger().testNumber"
					}
				},
				"folder": {
					"name": "Dev/Draft"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]",
				"[concat(variables('factoryId'), '/pipelines/test_pre-deep_session')]",
				"[concat(variables('factoryId'), '/pipelines/test_badge_coin_calculation')]",
				"[concat(variables('factoryId'), '/pipelines/test_kpi_feature_usage')]",
				"[concat(variables('factoryId'), '/pipelines/test_kpi_user_info')]",
				"[concat(variables('factoryId'), '/pipelines/test_kpi_user_performing')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/test_pre-deep_session')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PreDeepSession",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/riccardo.perelli@blinkoo.com/DeepSession/Pre - DeepSession - Test",
							"baseParameters": {
								"startDate": {
									"value": "@formatDateTime(addDays(pipeline().triggerTime, -7), 'yyyy-MM-dd HH:mm:ss')",
									"type": "Expression"
								},
								"endDate": {
									"value": "@formatDateTime(pipeline().triggerTime, 'yyyy-MM-dd HH:mm:ss')",
									"type": "Expression"
								},
								"testNumber": {
									"value": "@pipeline().parameters.testNumber",
									"type": "Expression"
								},
								"isTest": "True"
							},
							"libraries": [
								{
									"pypi": {
										"package": "pandas==1.4.0"
									}
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"triggerTime": {
						"type": "string",
						"defaultValue": "@trigger().startTime"
					},
					"testNumber": {
						"type": "string",
						"defaultValue": "@trigger().testNumber"
					}
				},
				"folder": {
					"name": "Dev/Draft"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blinkoorepo",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"entityname": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {},
				"typeProperties": {
					"collectionName": {
						"value": "@dataset().entityname",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blinkoorepo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataLake')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDev",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					},
					"foldername": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().foldername",
							"type": "Expression"
						},
						"fileSystem": "bronze"
					},
					"compressionCodec": "gzip"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_efo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Draft"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "users",
						"fileSystem": "users"
					},
					"compressionCodec": "gzip"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_Categories')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CosmosDB"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Categories",
						"folderPath": "Categories",
						"fileSystem": "bronze"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_Feed')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CosmosDB"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Feed_delta",
						"folderPath": "Feed",
						"fileSystem": "bronze"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_GeoLocation')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CosmosDB"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "GeoLocation",
						"folderPath": "GeoLocation",
						"fileSystem": "bronze"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_Geometry')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CosmosDB"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Geometry",
						"folderPath": "Geometry",
						"fileSystem": "bronze"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_Media')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CosmosDB"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Media",
						"folderPath": "Media",
						"fileSystem": "bronze"
					},
					"compressionCodec": "gzip"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_Places')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CosmosDB"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Places",
						"folderPath": "Places",
						"fileSystem": "bronze"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_Post')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CosmosDB"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Post",
						"folderPath": "Post",
						"fileSystem": "bronze"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_PostStat')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CosmosDB"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "PostStat",
						"folderPath": "PostStat",
						"fileSystem": "bronze"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "id",
						"type": "UTF8"
					},
					{
						"name": "type",
						"type": "UTF8"
					},
					{
						"name": "geometry_type",
						"type": "UTF8"
					},
					{
						"name": "geometry_coordinates",
						"type": "UTF8"
					},
					{
						"name": "key",
						"type": "UTF8"
					},
					{
						"name": "name",
						"type": "UTF8"
					},
					{
						"name": "level_name",
						"type": "UTF8"
					},
					{
						"name": "level_key",
						"type": "UTF8"
					},
					{
						"name": "level",
						"type": "INT64"
					},
					{
						"name": "properties_sub_areas",
						"type": "UTF8"
					},
					{
						"name": "area",
						"type": "UTF8"
					},
					{
						"name": "area_name",
						"type": "UTF8"
					},
					{
						"name": "_rid",
						"type": "UTF8"
					},
					{
						"name": "_self",
						"type": "UTF8"
					},
					{
						"name": "_etag",
						"type": "UTF8"
					},
					{
						"name": "_attachments",
						"type": "UTF8"
					},
					{
						"name": "_ts",
						"type": "INT64"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_UserInfo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CosmosDB"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "UserInfo",
						"folderPath": "UserInfo",
						"fileSystem": "bronze"
					},
					"compressionCodec": "gzip"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_efo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blinkoorepo",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Draft"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {
					"type": "object",
					"properties": {
						"discriminator": {
							"type": "string"
						},
						"userId": {
							"type": "string"
						},
						"givenName": {
							"type": "string"
						},
						"surname": {
							"type": "string"
						},
						"displayName": {
							"type": "string"
						},
						"profileDescription": {
							"type": "string"
						},
						"avatarKey": {
							"type": "string"
						},
						"profileSlug": {
							"type": "string"
						},
						"isVerified": {
							"type": "boolean"
						},
						"isCertified": {
							"type": "boolean"
						},
						"isBackofficeMade": {
							"type": "boolean"
						},
						"receivedLikesCount": {
							"type": "integer"
						},
						"followingCount": {
							"type": "integer"
						},
						"followerCount": {
							"type": "integer"
						},
						"hasSelectedInterests": {
							"type": "boolean"
						},
						"selectedInterests": {
							"type": "array"
						},
						"relatedThemes": {
							"type": "array"
						},
						"likedPosts": {
							"type": "array"
						},
						"bookmarkedPosts": {
							"type": "array"
						},
						"posts": {
							"type": "array"
						},
						"excludedPosts": {
							"type": "array"
						},
						"termsAndConditions": {
							"type": "null"
						},
						"thirdPartyMarketing": {
							"type": "null"
						},
						"userProfiling": {
							"type": "null"
						},
						"createdAt": {
							"type": "string"
						},
						"deletedAt": {
							"type": "null"
						},
						"userDevices": {
							"type": "array"
						}
					}
				},
				"typeProperties": {
					"collectionName": "UserInfo"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blinkoorepo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_Categories')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blinkoorepo",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CosmosDB"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {
					"type": "object",
					"properties": {
						"Id": {
							"type": "string"
						},
						"Discriminator": {
							"type": "string"
						},
						"CategoryId": {
							"type": "string"
						},
						"Name": {
							"type": "string"
						},
						"EngName": {
							"type": "null"
						},
						"Label": {
							"type": "string"
						},
						"Level": {
							"type": "integer"
						},
						"ParentCategories": {
							"type": "array"
						},
						"ChildCategories": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"ChildCategoryId": {
										"type": "string"
									},
									"Label": {
										"type": "string"
									}
								}
							}
						}
					}
				},
				"typeProperties": {
					"collectionName": "Categories"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blinkoorepo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_Feed')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blinkoorepo",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CosmosDB"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {
					"type": "object",
					"properties": {
						"postType": {
							"type": "string"
						},
						"primaryTip": {
							"type": "object",
							"properties": {
								"tipId": {
									"type": "string"
								},
								"activities": {
									"type": "array",
									"items": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"categoryId": {
													"type": "string"
												},
												"engName": {
													"type": "null"
												},
												"label": {
													"type": "string"
												},
												"level": {
													"type": "integer"
												},
												"name": {
													"type": "string"
												}
											}
										}
									}
								},
								"tags": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"name": {
												"type": "string"
											}
										}
									}
								},
								"content": {
									"type": "object",
									"properties": {
										"placeId": {
											"type": "string"
										},
										"geoLocation": {
											"type": "object",
											"properties": {
												"Type": {
													"type": "string"
												},
												"Coordinates": {
													"type": "object",
													"properties": {
														"Lat": {
															"type": "number"
														},
														"Lon": {
															"type": "number"
														}
													}
												}
											}
										},
										"mapUrl": {
											"type": "string"
										},
										"address": {
											"type": "string"
										},
										"title": {
											"type": "string"
										},
										"categories": {
											"type": "array",
											"items": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"categoryId": {
															"type": "string"
														},
														"engName": {
															"type": "null"
														},
														"label": {
															"type": "string"
														},
														"level": {
															"type": "integer"
														},
														"name": {
															"type": "string"
														}
													}
												}
											}
										},
										"description": {
											"type": "null"
										},
										"images": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"associatedTo": {
														"type": "string"
													},
													"imageKey": {
														"type": "string"
													}
												}
											}
										},
										"geoHierarchy": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"key": {
														"type": "string"
													},
													"name": {
														"type": "string"
													},
													"levelName": {
														"type": "string"
													},
													"levelKey": {
														"type": "string"
													},
													"level": {
														"type": "integer"
													}
												}
											}
										},
										"officialWebsite": {
											"type": "null"
										},
										"wikipediaLink": {
											"type": "null"
										},
										"phoneNumber": {
											"type": "null"
										},
										"affiliation": {
											"type": "object",
											"properties": {
												"bookable": {
													"type": "boolean"
												},
												"affiliationLinks": {
													"type": "array"
												}
											}
										},
										"placeType": {
											"type": "string"
										},
										"isHidden": {
											"type": "boolean"
										}
									}
								},
								"suggestedMonths": {
									"type": "object",
									"properties": {
										"January": {
											"type": "boolean"
										},
										"February": {
											"type": "boolean"
										},
										"March": {
											"type": "boolean"
										},
										"April": {
											"type": "boolean"
										},
										"May": {
											"type": "boolean"
										},
										"June": {
											"type": "boolean"
										},
										"July": {
											"type": "boolean"
										},
										"August": {
											"type": "boolean"
										},
										"September": {
											"type": "boolean"
										},
										"October": {
											"type": "boolean"
										},
										"November": {
											"type": "boolean"
										},
										"December": {
											"type": "boolean"
										}
									}
								},
								"videoShootingMonths": {
									"type": "object",
									"properties": {
										"January": {
											"type": "boolean"
										},
										"February": {
											"type": "boolean"
										},
										"March": {
											"type": "boolean"
										},
										"April": {
											"type": "boolean"
										},
										"May": {
											"type": "boolean"
										},
										"June": {
											"type": "boolean"
										},
										"July": {
											"type": "boolean"
										},
										"August": {
											"type": "boolean"
										},
										"September": {
											"type": "boolean"
										},
										"October": {
											"type": "boolean"
										},
										"November": {
											"type": "boolean"
										},
										"December": {
											"type": "boolean"
										}
									}
								},
								"suggestedMonthsList": {
									"type": "array"
								},
								"videoShootingMonthsList": {
									"type": "array"
								}
							}
						},
						"secondaryTips": {
							"type": "array"
						},
						"postId": {
							"type": "string"
						},
						"draftId": {
							"type": "string"
						},
						"keyId": {
							"type": "string"
						},
						"userId": {
							"type": "string"
						},
						"discriminator": {
							"type": "string"
						},
						"caption": {
							"type": "string"
						},
						"creator": {
							"type": "object",
							"properties": {
								"avatarKey": {
									"type": "string"
								},
								"givenName": {
									"type": "string"
								},
								"surname": {
									"type": "string"
								},
								"displayName": {
									"type": "string"
								},
								"profileSlug": {
									"type": "string"
								},
								"isVerified": {
									"type": "boolean"
								},
								"isCertified": {
									"type": "boolean"
								}
							}
						},
						"originalLanguage": {
							"type": "object",
							"properties": {
								"languageId": {
									"type": "string"
								},
								"languageTag": {
									"type": "string"
								},
								"familyName": {
									"type": "string"
								}
							}
						},
						"video": {
							"type": "object",
							"properties": {
								"videoId": {
									"type": "string"
								},
								"eclexiaVideoId": {
									"type": "integer"
								},
								"videoGuid": {
									"type": "string"
								},
								"lengthInSeconds": {
									"type": "integer"
								},
								"selectedThumbnailUrl": {
									"type": "string"
								},
								"coverImageUrl": {
									"type": "string"
								},
								"shareImageUrl": {
									"type": "string"
								},
								"formats": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"Url": {
												"type": "string"
											},
											"VideoBitrateMax": {
												"type": "integer"
											},
											"AudioBitrate": {
												"type": "integer"
											},
											"WidthMax": {
												"type": "integer"
											},
											"HeightMax": {
												"type": "integer"
											},
											"Language": {
												"type": "string"
											}
										}
									}
								},
								"formatsMP4": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"Url": {
												"type": "string"
											},
											"VideoBitrateMax": {
												"type": "integer"
											},
											"AudioBitrate": {
												"type": "integer"
											},
											"WidthMax": {
												"type": "integer"
											},
											"HeightMax": {
												"type": "integer"
											},
											"Language": {
												"type": "string"
											}
										}
									}
								}
							}
						},
						"status": {
							"type": "object",
							"properties": {
								"isPrivate": {
									"type": "boolean"
								},
								"isDeleted": {
									"type": "boolean"
								},
								"isBanned": {
									"type": "boolean"
								},
								"bannedFor": {
									"type": "null"
								}
							}
						},
						"images": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"ImageKey": {
										"type": "string"
									}
								}
							}
						},
						"styles": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"styleId": {
										"type": "string"
									},
									"name": {
										"type": "string"
									}
								}
							}
						},
						"tags": {
							"type": "array"
						},
						"feedListIds": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"listNameId": {
										"type": "string"
									}
								}
							}
						},
						"ctCode": {
							"type": "string"
						},
						"publicationDate": {
							"type": "string"
						},
						"lastUpdate": {
							"type": "string"
						},
						"numberOfViews": {
							"type": "integer"
						},
						"numberOfLikes": {
							"type": "integer"
						},
						"numberOfBookmarks": {
							"type": "integer"
						},
						"numberOfShares": {
							"type": "integer"
						},
						"ranking": {
							"type": "number"
						}
					}
				},
				"typeProperties": {
					"collectionName": "Feed"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blinkoorepo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_GeoLocation')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blinkoorepo",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CosmosDB"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {
					"type": "object",
					"properties": {
						"geoId": {
							"type": "string"
						},
						"country": {
							"type": "string"
						},
						"discriminator": {
							"type": "string"
						},
						"level": {
							"type": "integer"
						},
						"itaName": {
							"type": "string"
						},
						"geometryKey": {
							"type": "string"
						},
						"geonameKey": {
							"type": "string"
						},
						"name": {
							"type": "string"
						},
						"asciiName": {
							"type": "string"
						},
						"latitude": {
							"type": "number"
						},
						"longitude": {
							"type": "number"
						},
						"geometry": {
							"type": "object",
							"properties": {
								"type": {
									"type": "string"
								},
								"coordinates": {
									"type": "array",
									"items": {
										"type": "number"
									}
								}
							}
						},
						"featureClass": {
							"type": "string"
						},
						"featureCode": {
							"type": "string"
						},
						"cc2": {
							"type": "string"
						},
						"admin1": {
							"type": "string"
						},
						"admin2": {
							"type": "string"
						},
						"admin3": {
							"type": "string"
						},
						"admin4": {
							"type": "string"
						},
						"population": {
							"type": "integer"
						},
						"elevation": {
							"type": "integer"
						},
						"dem": {
							"type": "integer"
						},
						"timezone": {
							"type": "string"
						},
						"lastEdit": {
							"type": "string"
						},
						"srcCounter": {
							"type": "integer"
						},
						"alternateNames": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"translations": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"alternateNameId": {
										"type": "string"
									},
									"isoLanguage": {
										"type": "string"
									},
									"alternate": {
										"type": "string"
									},
									"isPreferred": {
										"type": "boolean"
									},
									"isShortName": {
										"type": "boolean"
									},
									"isColloquial": {
										"type": "boolean"
									},
									"isHistoric": {
										"type": "boolean"
									}
								}
							}
						}
					}
				},
				"typeProperties": {
					"collectionName": "GeoLocation"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blinkoorepo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_Geometry')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blinkoorepo",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CosmosDB"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {
					"type": "object",
					"properties": {
						"type": {
							"type": "string"
						},
						"geometry": {
							"type": "object",
							"properties": {
								"type": {
									"type": "string"
								},
								"coordinates": {
									"type": "array",
									"items": {
										"type": "array",
										"items": {
											"type": "array",
											"items": {
												"type": "number"
											}
										}
									}
								}
							}
						},
						"properties": {
							"type": "object",
							"properties": {
								"key": {
									"type": "string"
								},
								"name": {
									"type": "string"
								},
								"level_name": {
									"type": "string"
								},
								"level_key": {
									"type": "string"
								},
								"sub_areas": {
									"type": "array"
								},
								"level": {
									"type": "integer"
								}
							}
						},
						"area": {
							"type": "string"
						},
						"area_name": {
							"type": "string"
						}
					}
				},
				"typeProperties": {
					"collectionName": "Geometry"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blinkoorepo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_Media')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blinkoorepo",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CosmosDB"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {},
				"typeProperties": {
					"collectionName": "Media"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blinkoorepo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_Post')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blinkoorepo",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CosmosDB"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {
					"type": "object",
					"properties": {
						"Id": {
							"type": "string"
						},
						"Discriminator": {
							"type": "string"
						},
						"PlaceId": {
							"type": "string"
						},
						"DraftId": {
							"type": "null"
						},
						"Activities": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"Id": {
										"type": "string"
									},
									"EngName": {
										"type": "null"
									},
									"Label": {
										"type": "string"
									},
									"Level": {
										"type": "integer"
									},
									"Name": {
										"type": "string"
									}
								}
							}
						},
						"SuggestedMonths": {
							"type": "object",
							"properties": {
								"April": {
									"type": "boolean"
								},
								"August": {
									"type": "boolean"
								},
								"December": {
									"type": "boolean"
								},
								"Discriminator": {
									"type": "string"
								},
								"February": {
									"type": "boolean"
								},
								"January": {
									"type": "boolean"
								},
								"July": {
									"type": "boolean"
								},
								"June": {
									"type": "boolean"
								},
								"March": {
									"type": "boolean"
								},
								"May": {
									"type": "boolean"
								},
								"November": {
									"type": "boolean"
								},
								"October": {
									"type": "boolean"
								},
								"September": {
									"type": "boolean"
								}
							}
						},
						"Tags": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"Tag": {
										"type": "string"
									}
								}
							}
						},
						"VideoShootingMonths": {
							"type": "object",
							"properties": {
								"April": {
									"type": "boolean"
								},
								"August": {
									"type": "boolean"
								},
								"December": {
									"type": "boolean"
								},
								"February": {
									"type": "boolean"
								},
								"January": {
									"type": "boolean"
								},
								"July": {
									"type": "boolean"
								},
								"June": {
									"type": "boolean"
								},
								"March": {
									"type": "boolean"
								},
								"May": {
									"type": "boolean"
								},
								"November": {
									"type": "boolean"
								},
								"October": {
									"type": "boolean"
								},
								"September": {
									"type": "boolean"
								}
							}
						}
					}
				},
				"typeProperties": {
					"collectionName": "Post"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blinkoorepo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_PostStat')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blinkoorepo",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CosmosDB"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {
					"type": "object",
					"properties": {
						"likeId": {
							"type": "string"
						},
						"discriminator": {
							"type": "string"
						},
						"likeOwnerId": {
							"type": "string"
						},
						"userId": {
							"type": "string"
						},
						"postId": {
							"type": "string"
						},
						"isDeleted": {
							"type": "boolean"
						},
						"createdAt": {
							"type": "string"
						},
						"updatedAt": {
							"type": "string"
						},
						"deletedAt": {
							"type": "string"
						},
						"numberOfViews": {
							"type": "integer"
						},
						"numberOfLikes": {
							"type": "integer"
						},
						"numberOfBookmarks": {
							"type": "integer"
						},
						"numberOfShares": {
							"type": "integer"
						},
						"bookmarkAlbums": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"bookmarkedPosts": {
										"type": "array"
									},
									"bookmarkAlbumId": {
										"type": "string"
									},
									"label": {
										"type": "string"
									},
									"createdAt": {
										"type": "string"
									}
								}
							}
						}
					}
				},
				"typeProperties": {
					"collectionName": "PostStat"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blinkoorepo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_UserInfo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blinkoorepo",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CosmosDB"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {
					"type": "object",
					"properties": {
						"discriminator": {
							"type": "string"
						},
						"userId": {
							"type": "string"
						},
						"givenName": {
							"type": "string"
						},
						"surname": {
							"type": "string"
						},
						"displayName": {
							"type": "string"
						},
						"profileDescription": {
							"type": "string"
						},
						"avatarKey": {
							"type": "string"
						},
						"profileSlug": {
							"type": "string"
						},
						"isVerified": {
							"type": "boolean"
						},
						"isCertified": {
							"type": "boolean"
						},
						"isBackofficeMade": {
							"type": "boolean"
						},
						"receivedLikesCount": {
							"type": "integer"
						},
						"followingCount": {
							"type": "integer"
						},
						"followerCount": {
							"type": "integer"
						},
						"hasSelectedInterests": {
							"type": "boolean"
						},
						"selectedInterests": {
							"type": "array"
						},
						"relatedThemes": {
							"type": "array"
						},
						"likedPosts": {
							"type": "array"
						},
						"bookmarkedPosts": {
							"type": "array"
						},
						"posts": {
							"type": "array"
						},
						"excludedPosts": {
							"type": "array"
						},
						"termsAndConditions": {
							"type": "null"
						},
						"thirdPartyMarketing": {
							"type": "null"
						},
						"userProfiling": {
							"type": "null"
						},
						"createdAt": {
							"type": "string"
						},
						"deletedAt": {
							"type": "null"
						},
						"userDevices": {
							"type": "array"
						}
					}
				},
				"typeProperties": {
					"collectionName": "UserInfo"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blinkoorepo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adls_bronze')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "LogAnalytics"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "test",
						"fileSystem": "loganalytics"
					},
					"compressionCodec": "gzip"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bronze_container')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDev",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "bronze"
					},
					"compressionCodec": "gzip"
				},
				"schema": [
					{
						"name": "id",
						"type": "UTF8"
					},
					{
						"name": "type",
						"type": "UTF8"
					},
					{
						"name": "geometry_type",
						"type": "UTF8"
					},
					{
						"name": "geometry_coordinates",
						"type": "UTF8"
					},
					{
						"name": "key",
						"type": "UTF8"
					},
					{
						"name": "name",
						"type": "UTF8"
					},
					{
						"name": "level_name",
						"type": "UTF8"
					},
					{
						"name": "level_key",
						"type": "UTF8"
					},
					{
						"name": "level",
						"type": "INT64"
					},
					{
						"name": "properties_sub_areas",
						"type": "UTF8"
					},
					{
						"name": "area",
						"type": "UTF8"
					},
					{
						"name": "area_name",
						"type": "UTF8"
					},
					{
						"name": "_rid",
						"type": "UTF8"
					},
					{
						"name": "_self",
						"type": "UTF8"
					},
					{
						"name": "_etag",
						"type": "UTF8"
					},
					{
						"name": "_attachments",
						"type": "UTF8"
					},
					{
						"name": "_ts",
						"type": "INT64"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bronze_feed')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDev",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Feed",
						"fileSystem": "bronze"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "id",
						"type": "UTF8"
					},
					{
						"name": "type",
						"type": "UTF8"
					},
					{
						"name": "geometry_type",
						"type": "UTF8"
					},
					{
						"name": "geometry_coordinates",
						"type": "UTF8"
					},
					{
						"name": "key",
						"type": "UTF8"
					},
					{
						"name": "name",
						"type": "UTF8"
					},
					{
						"name": "level_name",
						"type": "UTF8"
					},
					{
						"name": "level_key",
						"type": "UTF8"
					},
					{
						"name": "level",
						"type": "INT64"
					},
					{
						"name": "properties_sub_areas",
						"type": "UTF8"
					},
					{
						"name": "area",
						"type": "UTF8"
					},
					{
						"name": "area_name",
						"type": "UTF8"
					},
					{
						"name": "_rid",
						"type": "UTF8"
					},
					{
						"name": "_self",
						"type": "UTF8"
					},
					{
						"name": "_etag",
						"type": "UTF8"
					},
					{
						"name": "_attachments",
						"type": "UTF8"
					},
					{
						"name": "_ts",
						"type": "INT64"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/log_analytics_dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Rest_loganalytics",
					"type": "LinkedServiceReference",
					"parameters": {
						"WorkSpaceID": "@dataset().WorkspaceID"
					}
				},
				"parameters": {
					"WorkspaceID": {
						"type": "string",
						"defaultValue": "8f01acd1-5ade-4ad8-8c2c-5a3708be25e5"
					}
				},
				"folder": {
					"name": "LogAnalytics"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": "query"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Rest_loganalytics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorageDev')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorageDev_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorageDev_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-673365400340149.9.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks1_accessToken')]"
					},
					"existingClusterId": "[parameters('AzureDatabricks1_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-673365400340149.9.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks2_accessToken')]"
					},
					"existingClusterId": "[parameters('AzureDatabricks2_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Rest_loganalytics')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"WorkSpaceID": {
						"type": "string",
						"defaultValue": "8f01acd1-5ade-4ad8-8c2c-5a3708be25e5"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('Rest_loganalytics_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/blinkoorepo')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('blinkoorepo_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DailyCosmosDB')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Daily_Bronze_Update_CosmosDB",
							"type": "PipelineReference"
						},
						"parameters": {
							"Tables": "[parameters('DailyCosmosDB_properties_Daily_Bronze_Update_CosmosDB_parameters_Tables')]",
							"end_time": "[parameters('DailyCosmosDB_properties_Daily_Bronze_Update_CosmosDB_parameters_end_time')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "Daily_Bronze_SqlServer",
							"type": "PipelineReference"
						},
						"parameters": {
							"Tables": "[parameters('DailyCosmosDB_properties_Daily_Bronze_SqlServer_parameters_Tables')]",
							"end_time": "[parameters('DailyCosmosDB_properties_Daily_Bronze_SqlServer_parameters_end_time')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-06-02T03:00:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Daily_Bronze_Update_CosmosDB')]",
				"[concat(variables('factoryId'), '/pipelines/Daily_Bronze_SqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HourlyBronzeLogAnalytics')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Bronze_LogAnalytics",
							"type": "PipelineReference"
						},
						"parameters": {
							"ClientSecret": "[parameters('HourlyBronzeLogAnalytics_properties_Bronze_LogAnalytics_parameters_ClientSecret')]",
							"ClientID": "[parameters('HourlyBronzeLogAnalytics_properties_Bronze_LogAnalytics_parameters_ClientID')]",
							"TenantID": "[parameters('HourlyBronzeLogAnalytics_properties_Bronze_LogAnalytics_parameters_TenantID')]",
							"WorkspaceID": "[parameters('HourlyBronzeLogAnalytics_properties_Bronze_LogAnalytics_parameters_WorkspaceID')]",
							"Table_Names": "[parameters('HourlyBronzeLogAnalytics_properties_Bronze_LogAnalytics_parameters_Table_Names')]",
							"end_time": "[parameters('HourlyBronzeLogAnalytics_properties_Bronze_LogAnalytics_parameters_end_time')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 1,
						"startTime": "2022-05-13T18:00:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Bronze_LogAnalytics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WeeklyCosmosDB')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Weekly_Bronze_SqlServer",
							"type": "PipelineReference"
						},
						"parameters": {
							"Tables": "[parameters('WeeklyCosmosDB_properties_Weekly_Bronze_SqlServer_parameters_Tables')]",
							"end_time": "[parameters('WeeklyCosmosDB_properties_Weekly_Bronze_SqlServer_parameters_end_time')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2022-07-07T03:00:00Z",
						"timeZone": "UTC",
						"schedule": {
							"weekDays": [
								"Wednesday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Weekly_Bronze_SqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WeeklySilverLogAnalytics')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Silver_LogAnalytics",
							"type": "PipelineReference"
						},
						"parameters": {
							"TableNames": "[parameters('WeeklySilverLogAnalytics_properties_Silver_LogAnalytics_parameters_TableNames')]",
							"start_time": "[parameters('WeeklySilverLogAnalytics_properties_Silver_LogAnalytics_parameters_start_time')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2022-07-13T03:00:00Z",
						"timeZone": "UTC",
						"schedule": {
							"weekDays": [
								"Wednesday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Silver_LogAnalytics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Weekly_Playlist_Usage')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Weekly_Playlist_Usage",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2022-08-01T14:23:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								9
							],
							"weekDays": [
								"Wednesday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Weekly_Playlist_Usage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ManagedVirtualNetworkIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "West Europe",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/test_kpi_feature_usage')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Feature Usage",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/riccardo.perelli@blinkoo.com/KPI/FeatureUsage_+_UserInfo_+_Performing",
							"baseParameters": {
								"endDate": {
									"value": "@formatDateTime(addDays(pipeline().triggerTime, -7), 'yyyy-MM-dd HH:mm:ss')",
									"type": "Expression"
								},
								"startDate": {
									"value": "@formatDateTime(pipeline().triggerTime, 'yyyy-MM-dd HH:mm:ss')",
									"type": "Expression"
								},
								"interval": "7",
								"extractionName": "kpi_feature_usage",
								"isTest": "True",
								"testNumber": {
									"value": "@pipeline().parameters.testNumber",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"triggerTime": {
						"type": "string",
						"defaultValue": "@trigger().startTime"
					},
					"testNumber": {
						"type": "string",
						"defaultValue": "@trigger().testNumber"
					}
				},
				"folder": {
					"name": "Dev/Draft/KPIs"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/test_kpi_user_info')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "User info",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/riccardo.perelli@blinkoo.com/KPI/FeatureUsage_+_UserInfo_+_Performing",
							"baseParameters": {
								"endDate": {
									"value": "@formatDateTime(addDays(pipeline().triggerTime, -7), 'yyyy-MM-dd HH:mm:ss')",
									"type": "Expression"
								},
								"startDate": {
									"value": "@formatDateTime(pipeline().triggerTime, 'yyyy-MM-dd HH:mm:ss')",
									"type": "Expression"
								},
								"interval": "7",
								"extractionName": "kpi_userinfo",
								"isTest": "True",
								"testNumber": {
									"value": "@pipeline().parameters.testNumber",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"triggerTime": {
						"type": "string",
						"defaultValue": "@trigger().startTime"
					},
					"testNumber": {
						"type": "string",
						"defaultValue": "@trigger().testNumber"
					}
				},
				"folder": {
					"name": "Dev/Draft/KPIs"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/test_kpi_user_performing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Feature Usage",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/riccardo.perelli@blinkoo.com/KPI/FeatureUsage_+_UserInfo_+_Performing",
							"baseParameters": {
								"endDate": {
									"value": "@formatDateTime(addDays(pipeline().triggerTime, -7), 'yyyy-MM-dd HH:mm:ss')",
									"type": "Expression"
								},
								"startDate": {
									"value": "@formatDateTime(pipeline().triggerTime, 'yyyy-MM-dd HH:mm:ss')",
									"type": "Expression"
								},
								"interval": "7",
								"extractionName": "kpi_userperforming",
								"isTest": "True",
								"testNumber": {
									"value": "@pipeline().parameters.testNumber",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"triggerTime": {
						"type": "string",
						"defaultValue": "@trigger().startTime"
					},
					"testNumber": {
						"type": "string",
						"defaultValue": "@trigger.testNumber"
					}
				},
				"folder": {
					"name": "Dev/Draft/KPIs"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Testing_Trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "test_deep_session",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2022-09-28T11:33:00",
						"timeZone": "W. Europe Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/test_deep_session')]"
			]
		}
	]
}