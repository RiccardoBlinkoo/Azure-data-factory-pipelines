{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "blinkoo-data-factory"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Silver_Full_LogAnalytics')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.TableNames",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Variable Table",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "Table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Notebook1",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Set Variable Table",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/elnur.garashov@porini.it/elnur.garashov/LogAnalytics/Full",
										"baseParameters": {
											"Table": {
												"value": "@variables('Table')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"TableNames": {
						"type": "array",
						"defaultValue": [
							"AppDependencies",
							"AppEvents",
							"AppExceptions",
							"AppMetrics",
							"AppPageViews",
							"AppPerformanceCounters",
							"AppRequests",
							"AppSystemEvents",
							"AppTraces",
							"Usage"
						]
					}
				},
				"variables": {
					"EndTime": {
						"type": "String"
					},
					"Table": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Dev/Draft/Log Analytics"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-24T06:02:38Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/User_feed_list')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "User FeedList Prod",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/daniele.sarnari@blinkoo.com/User FeedList/FeedList",
							"baseParameters": {
								"OperationType": {
									"value": "@pipeline().parameters.OperationType",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "To Service Bus Queue Prod",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "User FeedList Prod",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/daniele.sarnari@blinkoo.com/User FeedList/ToServiceBusQueue"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"OperationType": {
						"type": "string",
						"defaultValue": "daily"
					}
				},
				"variables": {
					"start_time": {
						"type": "String"
					},
					"end_time": {
						"type": "String"
					}
				},
				"folder": {
					"name": "KPIs"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/User_info_ext')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "user_info_ext_notebook",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/riccardo.perelli@blinkoo.com/Silver/Weekly_user_accesses"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"triggerTime": {
						"type": "string",
						"defaultValue": "@trigger().startTime"
					}
				},
				"variables": {
					"startDate": {
						"type": "String"
					},
					"endDate": {
						"type": "String"
					}
				},
				"folder": {
					"name": "KPIs"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/User_info_ext_pre_processing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Time spent in app",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Set End time",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/riccardo.perelli@blinkoo.com/Silver/In_app_time_spent_v1",
							"baseParameters": {
								"startDate": {
									"value": "@variables('start_time')",
									"type": "Expression"
								},
								"endDate": {
									"value": "@variables('end_time')",
									"type": "Expression"
								},
								"isTest": "False"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set Start Time",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "start_time",
							"value": {
								"value": "@concat(formatDateTime(pipeline().parameters.endTime,'yyyy-MM-dd'), ' ', '00:00:00')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set End time",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Start Time",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "end_time",
							"value": {
								"value": "@formatDateTime(pipeline().parameters.endTime)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"triggerTime": {
						"type": "string",
						"defaultValue": "2023-12-07 03:00:00"
					},
					"endTime": {
						"type": "string"
					}
				},
				"variables": {
					"start_time": {
						"type": "String"
					},
					"end_time": {
						"type": "String"
					}
				},
				"folder": {
					"name": "KPIs"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/User_preferences')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "User Preferences Prod",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Set End time",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/daniele.sarnari@blinkoo.com/User Preferences/Preferences",
							"baseParameters": {
								"StartAt": {
									"value": "@concat(formatDateTime(variables('start_time'),'yyyy-MM-dd'), ' ', '00:00:00')",
									"type": "Expression"
								},
								"EndAt": {
									"value": "@concat(formatDateTime(variables('end_time'),'yyyy-MM-dd'), ' ', '23:59:59')",
									"type": "Expression"
								},
								"OperationType": {
									"value": "@pipeline().parameters.operationType",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "To SQL Server Prod",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "User Preferences Prod",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/daniele.sarnari@blinkoo.com/User Preferences/ToSQLServer"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set Start Time",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "start_time",
							"value": {
								"value": "@if(equals(pipeline().parameters.operationType, 'weekly'), addDays(pipeline().parameters.triggerTime, -7), startOfMonth(pipeline().parameters.triggerTime))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set End time",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Start Time",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "end_time",
							"value": {
								"value": "@if(equals(pipeline().parameters.operationType, 'weekly'), addDays(pipeline().parameters.triggerTime, -1), pipeline().parameters.triggerTime)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"operationType": {
						"type": "string",
						"defaultValue": "weekly"
					},
					"triggerTime": {
						"type": "string",
						"defaultValue": "2023-07-09 23:59:00"
					}
				},
				"variables": {
					"start_time": {
						"type": "String"
					},
					"end_time": {
						"type": "String"
					}
				},
				"folder": {
					"name": "KPIs"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Weekly_Silver_SqlServer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach Table",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Tables",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Silver Update ETL",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/riccardo.perelli@blinkoo.com/Pipelines/Silver/SqlBronzeToSilver",
										"baseParameters": {
											"Table": {
												"value": "@item()",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Tables": {
						"type": "array",
						"defaultValue": [
							"categories",
							"geo_location",
							"places"
						]
					}
				},
				"folder": {
					"name": "Cosmos DB/Weekly"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-24T04:59:38Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Weekly_Silver_Update_CosmosDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach Table",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Tables",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Silver Update ETL",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/elnur.garashov@porini.it/elnur.garashov/0 CosmosDB Update/1 Silver",
										"baseParameters": {
											"Table": {
												"value": "@item()",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Tables": {
						"type": "array",
						"defaultValue": [
							"Categories"
						]
					}
				},
				"folder": {
					"name": "Cosmos DB/Weekly"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-24T04:59:38Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/full_KPI_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PreDeepSession",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Set End time",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/riccardo.perelli@blinkoo.com/DeepSession/Pre - DeepSession - Test",
							"baseParameters": {
								"startDate": {
									"value": "@variables('start_time')",
									"type": "Expression"
								},
								"endDate": {
									"value": "@variables('end_time')",
									"type": "Expression"
								},
								"testNumber": {
									"value": "@pipeline().parameters.testNumber",
									"type": "Expression"
								},
								"isTest": {
									"value": "@pipeline().parameters.isTest",
									"type": "Expression"
								}
							},
							"libraries": [
								{
									"pypi": {
										"package": "pandas==1.4.0"
									}
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Deep session",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "PreDeepSession",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/riccardo.perelli@blinkoo.com/DeepSession/DeepSession - Test",
							"baseParameters": {
								"startDate": {
									"value": "@variables('start_time')",
									"type": "Expression"
								},
								"endDate": {
									"value": "@variables('end_time')",
									"type": "Expression"
								},
								"interval": "7",
								"isTest": {
									"value": "@pipeline().parameters.isTest",
									"type": "Expression"
								},
								"testNumber": {
									"value": "@pipeline().parameters.testNumber",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "KPI Standard",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Deep session",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/riccardo.perelli@blinkoo.com/KPI/KPI_standard",
							"baseParameters": {
								"startDate": {
									"value": "@variables('start_time')",
									"type": "Expression"
								},
								"endDate": {
									"value": "@variables('end_time')",
									"type": "Expression"
								},
								"isTest": {
									"value": "@pipeline().parameters.isTest",
									"type": "Expression"
								},
								"testNumber": {
									"value": "@pipeline().parameters.testNumber",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "KPI Search Usage",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "KPI Standard",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/riccardo.perelli@blinkoo.com/KPI/Search",
							"baseParameters": {
								"startDate": {
									"value": "@variables('start_time')",
									"type": "Expression"
								},
								"endDate": {
									"value": "@variables('end_time')",
									"type": "Expression"
								},
								"isTest": {
									"value": "@pipeline().parameters.isTest",
									"type": "Expression"
								},
								"testNumber": {
									"value": "@pipeline().parameters.testNumber",
									"type": "Expression"
								},
								"interval": "7",
								"searchedWords": "False"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "KPI Feature Usage",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "KPI User info",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/riccardo.perelli@blinkoo.com/KPI/FeatureUsage_+_UserInfo_+_Performing",
							"baseParameters": {
								"startDate": {
									"value": "@variables('start_time')",
									"type": "Expression"
								},
								"endDate": {
									"value": "@variables('end_time')",
									"type": "Expression"
								},
								"interval": "7",
								"extractionName": "kpi_featureusage",
								"isTest": {
									"value": "@pipeline().parameters.isTest",
									"type": "Expression"
								},
								"testNumber": {
									"value": "@pipeline().parameters.testNumber",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "KPI User info",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "KPI Search Usage",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/riccardo.perelli@blinkoo.com/KPI/FeatureUsage_+_UserInfo_+_Performing",
							"baseParameters": {
								"startDate": {
									"value": "@variables('start_time')",
									"type": "Expression"
								},
								"endDate": {
									"value": "@variables('end_time')",
									"type": "Expression"
								},
								"interval": "7",
								"extractionName": "kpi_userinfo",
								"isTest": {
									"value": "@pipeline().parameters.isTest",
									"type": "Expression"
								},
								"testNumber": {
									"value": "@pipeline().parameters.testNumber",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "KPI User Performing",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "KPI Feature Usage",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/riccardo.perelli@blinkoo.com/KPI/FeatureUsage_+_UserInfo_+_Performing",
							"baseParameters": {
								"startDate": {
									"value": "@variables('start_time')",
									"type": "Expression"
								},
								"endDate": {
									"value": "@variables('end_time')",
									"type": "Expression"
								},
								"interval": "7",
								"extractionName": "kpi_userperforming",
								"isTest": {
									"value": "@pipeline().parameters.isTest",
									"type": "Expression"
								},
								"testNumber": {
									"value": "@pipeline().parameters.testNumber",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "KPI Playlist Usage",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "KPI User Performing",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							},
							{
								"activity": "KPI Standard",
								"dependencyConditions": [
									"Failed"
								]
							},
							{
								"activity": "Deep session",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/riccardo.perelli@blinkoo.com/KPI/Playlist_Usage",
							"baseParameters": {
								"startDate": {
									"value": "@variables('start_time')",
									"type": "Expression"
								},
								"endDate": {
									"value": "@variables('end_time')",
									"type": "Expression"
								},
								"interval": "7"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set Start Time",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "start_time",
							"value": {
								"value": "@formatDateTime(addDays(addHours(pipeline().parameters.triggerTime,-6), -7),'yyyy-MM-dd HH:mm:ss')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set End time",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Start Time",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "end_time",
							"value": {
								"value": "@formatDateTime(addHours(pipeline().parameters.triggerTime,-6),'yyyy-MM-dd HH:mm:ss')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"triggerTime": {
						"type": "string",
						"defaultValue": "@trigger().startTime"
					},
					"testNumber": {
						"type": "string",
						"defaultValue": "@trigger().parameters.testNumber"
					},
					"isTest": {
						"type": "string",
						"defaultValue": "@trigger().parameters.isTest"
					},
					"receiver": {
						"type": "string",
						"defaultValue": "riccardo.perelli@blinkoo.com"
					}
				},
				"variables": {
					"start_time": {
						"type": "String"
					},
					"end_time": {
						"type": "String"
					}
				},
				"folder": {
					"name": "KPIs"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blinkoorepo",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"entityname": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {},
				"typeProperties": {
					"collectionName": {
						"value": "@dataset().entityname",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataLake')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDev",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					},
					"foldername": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().foldername",
							"type": "Expression"
						},
						"fileSystem": "bronze"
					},
					"compressionCodec": "gzip"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_efo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Draft"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "users",
						"fileSystem": "users"
					},
					"compressionCodec": "gzip"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_Categories')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CosmosDB"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Categories",
						"folderPath": "Categories",
						"fileSystem": "bronze"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_Feed')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CosmosDB"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Feed_delta",
						"folderPath": "Feed",
						"fileSystem": "bronze"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_GeoLocation')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CosmosDB"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "GeoLocation",
						"folderPath": "GeoLocation",
						"fileSystem": "bronze"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_Geometry')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CosmosDB"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Geometry",
						"folderPath": "Geometry",
						"fileSystem": "bronze"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_Media')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CosmosDB"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Media",
						"folderPath": "Media",
						"fileSystem": "bronze"
					},
					"compressionCodec": "gzip"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_Places')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CosmosDB"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Places",
						"folderPath": "Places",
						"fileSystem": "bronze"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_Post')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CosmosDB"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Post",
						"folderPath": "Post",
						"fileSystem": "bronze"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_PostStat')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CosmosDB"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "PostStat",
						"folderPath": "PostStat",
						"fileSystem": "bronze"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "id",
						"type": "UTF8"
					},
					{
						"name": "type",
						"type": "UTF8"
					},
					{
						"name": "geometry_type",
						"type": "UTF8"
					},
					{
						"name": "geometry_coordinates",
						"type": "UTF8"
					},
					{
						"name": "key",
						"type": "UTF8"
					},
					{
						"name": "name",
						"type": "UTF8"
					},
					{
						"name": "level_name",
						"type": "UTF8"
					},
					{
						"name": "level_key",
						"type": "UTF8"
					},
					{
						"name": "level",
						"type": "INT64"
					},
					{
						"name": "properties_sub_areas",
						"type": "UTF8"
					},
					{
						"name": "area",
						"type": "UTF8"
					},
					{
						"name": "area_name",
						"type": "UTF8"
					},
					{
						"name": "_rid",
						"type": "UTF8"
					},
					{
						"name": "_self",
						"type": "UTF8"
					},
					{
						"name": "_etag",
						"type": "UTF8"
					},
					{
						"name": "_attachments",
						"type": "UTF8"
					},
					{
						"name": "_ts",
						"type": "INT64"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_UserInfo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CosmosDB"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "UserInfo",
						"folderPath": "UserInfo",
						"fileSystem": "bronze"
					},
					"compressionCodec": "gzip"
				},
				"schema": []
			},
			"dependsOn": []
		}
	]
}