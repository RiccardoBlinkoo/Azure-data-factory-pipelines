{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "blinkoo-data-factory"
		},
		"Blinkoin_assignment_properties_Blinkoin_assignment_parameters_triggerTime": {
			"type": "string",
			"defaultValue": "@trigger().startTime"
		},
		"HourlyBronzeLogAnalytics_properties_Bronze_LogAnalytics_parameters_ClientSecret": {
			"type": "string",
			"defaultValue": "glI8Q~fY~zGHvyTue4j826wiL9x.hVADCqkPUbJH"
		},
		"HourlyBronzeLogAnalytics_properties_Bronze_LogAnalytics_parameters_ClientID": {
			"type": "string",
			"defaultValue": "e2c3de32-f621-4fa2-9bf7-344551917b7b"
		},
		"HourlyBronzeLogAnalytics_properties_Bronze_LogAnalytics_parameters_Table_Names": {
			"type": "array",
			"defaultValue": [
				"AppDependencies",
				"AppEvents",
				"AppExceptions",
				"AppMetrics",
				"AppPageViews",
				"AppPerformanceCounters",
				"AppRequests",
				"AppSystemEvents",
				"AppTraces",
				"Usage"
			]
		},
		"HourlyBronzeLogAnalytics_properties_Bronze_LogAnalytics_parameters_end_time": {
			"type": "string",
			"defaultValue": "@trigger().startTime"
		},
		"HourlyBronzeLogAnalytics_properties_Bronze_LogAnalytics_parameters_TenantID": {
			"type": "string",
			"defaultValue": "f8e56e96-2cd7-413d-9a4d-177bfd942437"
		},
		"Kpis_trigger_properties_full_KPI_pipeline_parameters_triggerTime": {
			"type": "string",
			"defaultValue": "@trigger().startTime"
		},
		"Kpis_trigger_properties_full_KPI_pipeline_parameters_isTest": {
			"type": "string",
			"defaultValue": "False"
		},
		"Testing_Trigger_properties_full_KPI_pipeline_parameters_triggerTime": {
			"type": "string",
			"defaultValue": "@trigger().startTime"
		},
		"Testing_Trigger_properties_full_KPI_pipeline_parameters_testNumber": {
			"type": "string",
			"defaultValue": "31"
		},
		"Testing_Trigger_properties_full_KPI_pipeline_parameters_isTest": {
			"type": "string",
			"defaultValue": "True"
		},
		"UserFeedList_Daily_properties_User_feed_list_parameters_OperationType": {
			"type": "string",
			"defaultValue": "daily"
		},
		"UserFeedList_Monday_properties_User_feed_list_parameters_OperationType": {
			"type": "string",
			"defaultValue": "weekly"
		},
		"user_info_ext_trigger_properties_User_info_ext_parameters_triggerTime": {
			"type": "string",
			"defaultValue": "@trigger().startTime"
		},
		"UserPreferences_Weekly_properties_User_preferences_parameters_operationType": {
			"type": "string",
			"defaultValue": "weekly"
		},
		"UserPreferences_Weekly_properties_User_preferences_parameters_triggerTime": {
			"type": "string",
			"defaultValue": "@trigger().startTime"
		},
		"DailyCosmosDB_properties_Daily_Bronze_Update_CosmosDB_parameters_Tables": {
			"type": "array",
			"defaultValue": [
				"Feed",
				"FeedList",
				"PostStat",
				"UserInfo"
			]
		},
		"DailyCosmosDB_properties_Daily_Bronze_Update_CosmosDB_parameters_end_time": {
			"type": "string",
			"defaultValue": "@trigger().startTime"
		},
		"DailyCosmosDB_properties_Daily_Bronze_SqlServer_parameters_Tables": {
			"type": "array",
			"defaultValue": [
				"place_tip",
				"categories",
				"geo_location",
				"places"
			]
		},
		"DailyCosmosDB_properties_Daily_Bronze_SqlServer_parameters_end_time": {
			"type": "string",
			"defaultValue": "@trigger().startTime"
		},
		"DailyCosmosDB_properties_Daily_Bronze_SqlServer_dev_parameters_Tables": {
			"type": "array",
			"defaultValue": [
				"place_tip",
				"categories",
				"geo_location",
				"places"
			]
		},
		"DailyCosmosDB_properties_Daily_Bronze_SqlServer_dev_parameters_end_time": {
			"type": "string",
			"defaultValue": "@trigger().startTime"
		},
		"DailyCosmosDB_properties_Daily_Bronze_Update_CosmosDB_dev_parameters_Tables": {
			"type": "array",
			"defaultValue": [
				"Feed",
				"FeedList",
				"PostStat",
				"UserInfo"
			]
		},
		"DailyCosmosDB_properties_Daily_Bronze_Update_CosmosDB_dev_parameters_end_time": {
			"type": "string",
			"defaultValue": "@trigger().startTime"
		},
		"DailyCosmosDB_properties_Daily_Bronze_SqlServerTripAssistant_parameters_Tables": {
			"type": "array",
			"defaultValue": [
				"search_results",
				"itineraries"
			]
		},
		"DailyCosmosDB_properties_Daily_Bronze_SqlServerTripAssistant_dev_parameters_Tables": {
			"type": "array",
			"defaultValue": [
				"search_results",
				"itineraries"
			]
		},
		"DailySilverLogAnalytics_properties_Silver_LogAnalytics_parameters_TableNames": {
			"type": "array",
			"defaultValue": [
				"AppDependencies",
				"AppEvents",
				"AppExceptions",
				"AppMetrics",
				"AppPageViews",
				"AppPerformanceCounters",
				"AppRequests",
				"AppSystemEvents",
				"AppTraces",
				"Usage"
			]
		},
		"DailySilverLogAnalytics_properties_Silver_LogAnalytics_parameters_start_time": {
			"type": "string",
			"defaultValue": "@trigger().startTime"
		},
		"DailySilverLogAnalytics_properties_Silver_LogAnalytics_parameters_triggerTime": {
			"type": "string",
			"defaultValue": "@trigger().startTime"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Daily_Bronze_Update_CosmosDB_dev')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Tables",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Bronze ETL",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Set end_time in timestamp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/elnur.garashov@porini.it/elnur.garashov/0 CosmosDB Update/0 Bronze_dev",
										"baseParameters": {
											"Table": {
												"value": "@item()",
												"type": "Expression"
											},
											"EndDate": {
												"value": "@variables('EndTime')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set end_time in timestamp",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "EndTime",
										"value": {
											"value": "@{div(sub(ticks(addHours(pipeline().parameters.end_time,-3)), ticks('1970-01-01')),10000000)}\n",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Execute Silver Update Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Daily_Silver_Update_CosmosDB_dev",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Tables": {
									"value": "@pipeline().parameters.Tables",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Tables": {
						"type": "array",
						"defaultValue": [
							"FeedList",
							"PostStat",
							"UserInfo",
							"Feed"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-06-24 04:00:00"
					}
				},
				"variables": {
					"EndTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Cosmos DB/Daily"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-24T05:03:08Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Silver_LogAnalytics')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.TableNames",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Variable Table",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "Table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set Variable End Date",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Variable Table",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "EndTime",
										"value": {
											"value": "@concat(formatDateTime(addHours(pipeline().parameters.start_time,-5),'yyyy-MM-dd'), ' ', '23:59:59')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "BronzeToSilver_por_version",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Set Variable End Date",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 1,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/elnur.garashov@porini.it/elnur.garashov/1 LogAnalytics/Delta",
										"baseParameters": {
											"Table": {
												"value": "@variables('Table')",
												"type": "Expression"
											},
											"EndDate": {
												"value": "@variables('EndTime')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Post_interactions",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set Variable End Time",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Post_interactions",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"triggerTime": {
									"value": "@formatDateTime(pipeline().parameters.triggerTime,'yyyy-MM-dd HH:mm:ss')",
									"type": "Expression"
								},
								"endTime": {
									"value": "@variables('EndTime')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "User_info_ext_pre_processing",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set Variable End Time",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "User_info_ext_pre_processing",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"triggerTime": {
									"value": "@formatDateTime(pipeline().parameters.triggerTime,'yyyy-MM-dd HH:mm:ss')",
									"type": "Expression"
								},
								"endTime": {
									"value": "@variables('EndTime')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Set Variable End Time",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "For Each Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "EndTime",
							"value": {
								"value": "@concat(formatDateTime(addHours(pipeline().parameters.triggerTime,-5),'yyyy-MM-dd'), ' ', '23:59:59')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Search_Analysis",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set Variable End Time",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Search_Analysis",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"triggerTime": {
									"value": "@formatDateTime(pipeline().parameters.triggerTime,'yyyy-MM-dd HH:mm:ss')",
									"type": "Expression"
								},
								"endTime": {
									"value": "@variables('EndTime')",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"TableNames": {
						"type": "array",
						"defaultValue": [
							"AppDependencies",
							"AppEvents",
							"AppExceptions",
							"AppMetrics",
							"AppPageViews",
							"AppPerformanceCounters",
							"AppRequests",
							"AppSystemEvents",
							"AppTraces",
							"Usage"
						]
					},
					"start_time": {
						"type": "string",
						"defaultValue": "2023-12-07 03:00:00"
					},
					"triggerTime": {
						"type": "string",
						"defaultValue": "@trigger().startTime"
					}
				},
				"variables": {
					"EndTime": {
						"type": "String"
					},
					"Table": {
						"type": "String"
					},
					"StartTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "LogAnalytics"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-06T21:34:31Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Weekly_Bronze_SqlServer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Tables",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Bronze ETL",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Set end_time in timestamp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/riccardo.perelli@blinkoo.com/Pipelines/Bronze/SqlBronze",
										"baseParameters": {
											"Table": {
												"value": "@item()",
												"type": "Expression"
											},
											"EndDate": {
												"value": "@variables('EndTime')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set end_time in timestamp",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "EndTime",
										"value": {
											"value": "@{div(sub(ticks(addHours(pipeline().parameters.end_time,-3)), ticks('1970-01-01')),10000000)}\n",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Execute Silver Update Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Weekly_Silver_SqlServer",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"Tables": {
									"value": "@pipeline().parameters.Tables",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Tables": {
						"type": "array",
						"defaultValue": [
							"categories",
							"geo_location",
							"places"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-06-24 04:00:00"
					}
				},
				"variables": {
					"EndTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Cosmos DB/Weekly"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-24T05:07:38Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Weekly_Bronze_Update_CosmosDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Tables",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Bronze ETL",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Set end_time in timestamp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/elnur.garashov@porini.it/elnur.garashov/0 CosmosDB Update/0 Bronze",
										"baseParameters": {
											"Table": {
												"value": "@item()",
												"type": "Expression"
											},
											"EndDate": {
												"value": "@variables('EndTime')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set end_time in timestamp",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "EndTime",
										"value": {
											"value": "@{div(sub(ticks(addHours(pipeline().parameters.end_time,-3)), ticks('1970-01-01')),10000000)}\n",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Execute Silver Update Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Weekly_Silver_Update_CosmosDB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"Tables": {
									"value": "@pipeline().parameters.Tables",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Tables": {
						"type": "array",
						"defaultValue": [
							"Categories"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-06-24 04:00:00"
					}
				},
				"variables": {
					"EndTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Cosmos DB/Weekly"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-24T05:07:38Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/get_log_analytics_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getBearerToken",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "getClientSecret",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://login.microsoftonline.com/',pipeline().parameters.TenantID,'/oauth2/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat(\n'grant_type=client_credentials',\n'&client_id=',pipeline().parameters.ClientID,\n'&client_secret=',activity('getClientSecret').output.value,\n'&resource=',variables('Resource')\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "getClientSecret",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat(pipeline().parameters.KeyVaultClientSecretURI,'?api-version=7.0')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "ManagedVirtualNetworkIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "copyData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "getBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "POST",
								"requestBody": "{\"query\": \"AppRequests | where TimeGenerated > ago(12h) | summarize avgRequestDuration=avg(DurationMs) by bin(TimeGenerated, 10m), _ResourceId\"}",
								"additionalHeaders": {
									"Content-Type": "application/json;charset=utf-8",
									"Authorization": {
										"value": "@concat('Bearer ',activity('getBearerToken').output.access_token)",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "log_analytics_dataset",
								"type": "DatasetReference",
								"parameters": {
									"WorkspaceID": {
										"value": "@pipeline().parameters.WorkspaceID",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "adls_bronze",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"KeyVaultClientSecretURI": {
						"type": "string",
						"defaultValue": "https://kv-adf-dslab.vault.azure.net/secrets/LogAnaliticsClient-Secret/9ceb4860df994011ad92632b4b950477"
					},
					"ClientID": {
						"type": "string",
						"defaultValue": "75437993-3cde-47a2-9665-e5116db47c25"
					},
					"TenantID": {
						"type": "string",
						"defaultValue": "f98a3e64-1a37-4d3c-a324-f75eb3b0b7e4"
					},
					"WorkspaceID": {
						"type": "string",
						"defaultValue": "3a8b702f-dc94-4327-bf49-d7bd58804a90"
					}
				},
				"variables": {
					"Resource": {
						"type": "String",
						"defaultValue": "https://api.loganalytics.io"
					}
				},
				"folder": {
					"name": "Dev/Draft"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-31T20:08:58Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blinkoin_assignment')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Blinkoin_assignment",
							"type": "PipelineReference"
						},
						"parameters": {
							"triggerTime": "[parameters('Blinkoin_assignment_properties_Blinkoin_assignment_parameters_triggerTime')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2023-03-21T11:00:00Z",
						"timeZone": "UTC",
						"schedule": {
							"hours": [
								6
							],
							"weekDays": [
								"Monday"
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HourlyBronzeLogAnalytics')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Bronze_LogAnalytics",
							"type": "PipelineReference"
						},
						"parameters": {
							"ClientSecret": "[parameters('HourlyBronzeLogAnalytics_properties_Bronze_LogAnalytics_parameters_ClientSecret')]",
							"ClientID": "[parameters('HourlyBronzeLogAnalytics_properties_Bronze_LogAnalytics_parameters_ClientID')]",
							"Table_Names": "[parameters('HourlyBronzeLogAnalytics_properties_Bronze_LogAnalytics_parameters_Table_Names')]",
							"end_time": "[parameters('HourlyBronzeLogAnalytics_properties_Bronze_LogAnalytics_parameters_end_time')]",
							"TenantID": "[parameters('HourlyBronzeLogAnalytics_properties_Bronze_LogAnalytics_parameters_TenantID')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 1,
						"startTime": "2022-05-13T06:00:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Kpis_trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "full_KPI_pipeline",
							"type": "PipelineReference"
						},
						"parameters": {
							"triggerTime": "[parameters('Kpis_trigger_properties_full_KPI_pipeline_parameters_triggerTime')]",
							"isTest": "[parameters('Kpis_trigger_properties_full_KPI_pipeline_parameters_isTest')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2022-10-25T06:59:59Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								6
							],
							"weekDays": [
								"Wednesday"
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Testing_Trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "full_KPI_pipeline",
							"type": "PipelineReference"
						},
						"parameters": {
							"triggerTime": "[parameters('Testing_Trigger_properties_full_KPI_pipeline_parameters_triggerTime')]",
							"testNumber": "[parameters('Testing_Trigger_properties_full_KPI_pipeline_parameters_testNumber')]",
							"isTest": "[parameters('Testing_Trigger_properties_full_KPI_pipeline_parameters_isTest')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2022-09-28T11:33:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UserFeedList_Daily')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "User_feed_list",
							"type": "PipelineReference"
						},
						"parameters": {
							"OperationType": "[parameters('UserFeedList_Daily_properties_User_feed_list_parameters_OperationType')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2023-02-10T16:52:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								6
							],
							"weekDays": [
								"Sunday",
								"Tuesday",
								"Wednesday",
								"Thursday",
								"Saturday",
								"Friday"
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UserFeedList_Monday')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "User_feed_list",
							"type": "PipelineReference"
						},
						"parameters": {
							"OperationType": "[parameters('UserFeedList_Monday_properties_User_feed_list_parameters_OperationType')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2023-02-13T10:55:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								6
							],
							"weekDays": [
								"Monday"
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/user_info_ext_trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "User_info_ext",
							"type": "PipelineReference"
						},
						"parameters": {
							"triggerTime": "[parameters('user_info_ext_trigger_properties_User_info_ext_parameters_triggerTime')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2023-03-20T10:00:00Z",
						"timeZone": "UTC",
						"schedule": {
							"hours": [
								8
							],
							"weekDays": [
								"Monday"
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UserPreferences_Weekly')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "User_preferences",
							"type": "PipelineReference"
						},
						"parameters": {
							"operationType": "[parameters('UserPreferences_Weekly_properties_User_preferences_parameters_operationType')]",
							"triggerTime": "[parameters('UserPreferences_Weekly_properties_User_preferences_parameters_triggerTime')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2023-07-16T01:00:00",
						"timeZone": "W. Europe Standard Time",
						"schedule": {
							"weekDays": [
								"Monday"
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DailyCosmosDB')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Daily_Bronze_Update_CosmosDB",
							"type": "PipelineReference"
						},
						"parameters": {
							"Tables": "[parameters('DailyCosmosDB_properties_Daily_Bronze_Update_CosmosDB_parameters_Tables')]",
							"end_time": "[parameters('DailyCosmosDB_properties_Daily_Bronze_Update_CosmosDB_parameters_end_time')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "Daily_Bronze_SqlServer",
							"type": "PipelineReference"
						},
						"parameters": {
							"Tables": "[parameters('DailyCosmosDB_properties_Daily_Bronze_SqlServer_parameters_Tables')]",
							"end_time": "[parameters('DailyCosmosDB_properties_Daily_Bronze_SqlServer_parameters_end_time')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "Daily_Bronze_SqlServer_dev",
							"type": "PipelineReference"
						},
						"parameters": {
							"Tables": "[parameters('DailyCosmosDB_properties_Daily_Bronze_SqlServer_dev_parameters_Tables')]",
							"end_time": "[parameters('DailyCosmosDB_properties_Daily_Bronze_SqlServer_dev_parameters_end_time')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "Daily_Bronze_Update_CosmosDB_dev",
							"type": "PipelineReference"
						},
						"parameters": {
							"Tables": "[parameters('DailyCosmosDB_properties_Daily_Bronze_Update_CosmosDB_dev_parameters_Tables')]",
							"end_time": "[parameters('DailyCosmosDB_properties_Daily_Bronze_Update_CosmosDB_dev_parameters_end_time')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "Daily_Bronze_SqlServerTripAssistant",
							"type": "PipelineReference"
						},
						"parameters": {
							"Tables": "[parameters('DailyCosmosDB_properties_Daily_Bronze_SqlServerTripAssistant_parameters_Tables')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "Daily_Bronze_SqlServerTripAssistant_dev",
							"type": "PipelineReference"
						},
						"parameters": {
							"Tables": "[parameters('DailyCosmosDB_properties_Daily_Bronze_SqlServerTripAssistant_dev_parameters_Tables')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-06-02T03:00:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								3
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Daily_Bronze_Update_CosmosDB_dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DailySilverLogAnalytics')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Silver_LogAnalytics",
							"type": "PipelineReference"
						},
						"parameters": {
							"TableNames": "[parameters('DailySilverLogAnalytics_properties_Silver_LogAnalytics_parameters_TableNames')]",
							"start_time": "[parameters('DailySilverLogAnalytics_properties_Silver_LogAnalytics_parameters_start_time')]",
							"triggerTime": "[parameters('DailySilverLogAnalytics_properties_Silver_LogAnalytics_parameters_triggerTime')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-07-13T03:00:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								2
							],
							"hours": [
								3
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Silver_LogAnalytics')]"
			]
		}
	]
}