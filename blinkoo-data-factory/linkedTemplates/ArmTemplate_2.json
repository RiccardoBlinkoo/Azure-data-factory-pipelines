{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "blinkoo-data-factory"
		},
		"blinkoorepo_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'blinkoorepo'"
		},
		"test_blinkoo_gold_connection_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'test_blinkoo_gold_connection'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/blinkoorepo')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('blinkoorepo_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/test_blinkoo_gold_connection')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "First test connection between azure data factory and the blinkoo's gold layer.",
				"annotations": [],
				"type": "AzureDatabricksDeltaLake",
				"typeProperties": {
					"domain": "https://adb-673365400340149.9.azuredatabricks.net",
					"clusterId": "0304-092528-p5078pvj",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('test_blinkoo_gold_connection_accessToken')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ManagedVirtualNetworkIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "West Europe",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_Full_CosmosDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Set variable EndTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/elnur.garashov@porini.it/elnur.garashov/CosmosDB/Bronze/Bronze Full",
							"baseParameters": {
								"StartDate": {
									"value": "@variables('StartTime')",
									"type": "Expression"
								},
								"EndDate": {
									"value": "@variables('EndTime')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set variable StartTime",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "StartTime",
							"value": {
								"value": "@{div(sub(ticks(pipeline().parameters.start_time), ticks('1970-01-01')),10000000)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable EndTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable StartTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "EndTime",
							"value": {
								"value": "@{div(sub(ticks(pipeline().parameters.end_time), ticks('1970-01-01')),10000000)}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"start_time": {
						"type": "string",
						"defaultValue": "2020-01-01 00:00:00"
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-05-11 00:00:00"
					}
				},
				"variables": {
					"StartTime": {
						"type": "String"
					},
					"EndTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Dev/Draft/CosmosDB/Full"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-23T08:12:38Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Daily_Silver_SqlServer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach Table",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Tables",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Silver Update ETL",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/riccardo.perelli@blinkoo.com/Pipelines/Silver/SqlBronzeToSilver",
										"baseParameters": {
											"Table": {
												"value": "@item()",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Tables": {
						"type": "array",
						"defaultValue": [
							"place_tip"
						]
					}
				},
				"folder": {
					"name": "Cosmos DB/Daily"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-24T04:58:17Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Daily_Silver_Update_CosmosDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach Table",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Tables",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Silver Update ETL",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/elnur.garashov@porini.it/elnur.garashov/CosmosDB Update/1 Silver",
										"baseParameters": {
											"Table": {
												"value": "@item()",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Tables": {
						"type": "array",
						"defaultValue": [
							"FeedList",
							"PostStat",
							"UserInfo",
							"Feed"
						]
					}
				},
				"folder": {
					"name": "Cosmos DB/Daily"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-24T04:58:17Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NewExtractionsLoop')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.startDate",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Notebook1",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Set Variable End Date",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/riccardo.perelli@blinkoo.com/Silver/posts_publication",
										"baseParameters": {
											"startDate": {
												"value": "@variables('startDate')",
												"type": "Expression"
											},
											"endDate": {
												"value": "@variables('endDate')",
												"type": "Expression"
											},
											"isTest": "False"
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set Variable Start Date",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "startDate",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set Variable End Date",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Variable Start Date",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "endDate",
										"value": {
											"value": "@formatDateTime(addDays(variables('startDate'),7), 'yyyy-MM-dd HH:mm:ss')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"startDate": {
						"type": "array",
						"defaultValue": [
							"2022-02-22 23:59:59",
							"2022-03-01 23:59:59",
							"2022-03-08 23:59:59",
							"2022-03-15 23:59:59",
							"2022-03-22 23:59:59",
							"2022-03-29 23:59:59",
							"2022-04-05 23:59:59",
							"2022-04-12 23:59:59",
							"2022-04-19 23:59:59",
							"2022-04-26 23:59:59",
							"2022-05-03 23:59:59",
							"2022-05-10 23:59:59",
							"2022-05-17 23:59:59",
							"2022-05-24 23:59:59",
							"2022-05-31 23:59:59",
							"2022-06-07 23:59:59",
							"2022-06-14 23:59:59",
							"2022-06-21 23:59:59",
							"2022-06-28 23:59:59",
							"2022-07-05 23:59:59",
							"2022-07-12 23:59:59",
							"2022-07-19 23:59:59",
							"2022-07-26 23:59:59",
							"2022-08-02 23:59:59",
							"2022-08-09 23:59:59",
							"2022-08-16 23:59:59",
							"2022-08-23 23:59:59",
							"2022-08-30 23:59:59",
							"2022-09-06 23:59:59",
							"2022-09-13 23:59:59",
							"2022-09-20 23:59:59",
							"2022-09-27 23:59:59",
							"2022-10-04 23:59:59",
							"2022-10-11 23:59:59",
							"2022-10-18 23:59:59",
							"2022-10-25 23:59:59",
							"2022-11-01 23:59:59",
							"2022-11-08 23:59:59",
							"2022-11-15 23:59:59",
							"2022-11-22 23:59:59",
							"2022-11-29 23:59:59",
							"2022-12-06 23:59:59",
							"2022-12-13 23:59:59"
						]
					}
				},
				"variables": {
					"startDate": {
						"type": "String"
					},
					"endDate": {
						"type": "String"
					}
				},
				"folder": {
					"name": "KPIs"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Silver_Delta_CosmosDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Tables",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set variable Table",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable EndTime",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set variable Table",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "EndTime",
										"value": {
											"value": "@{div(sub(ticks(addHours(pipeline().parameters.end_time,-3)), ticks('1970-01-01')),10000000)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Notebook1",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Set variable EndTime",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/elnur.garashov@porini.it/elnur.garashov/CosmosDB/Silver/Silver Delta",
										"baseParameters": {
											"Table": {
												"value": "@variables('Table')",
												"type": "Expression"
											},
											"EndDate": {
												"value": "@variables('EndTime')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"end_time": {
						"type": "string",
						"defaultValue": "2022-05-12 03:00:00"
					},
					"Tables": {
						"type": "array",
						"defaultValue": [
							"Post",
							"Geometry",
							"PostStat",
							"UserInfo",
							"Categories",
							"Places",
							"Feed",
							"GeoLocation"
						]
					}
				},
				"variables": {
					"EndTime": {
						"type": "String"
					},
					"Table": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Dev/Draft/CosmosDB/Delta"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-23T08:12:38Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Silver_Full')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.tables",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set variable StartTime",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "StartTime",
										"value": {
											"value": "@{div(sub(ticks(pipeline().parameters.start_time), ticks('1970-01-01')),10000000)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable EndTime",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set variable StartTime",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "EndTime",
										"value": {
											"value": "@{div(sub(ticks(pipeline().parameters.end_time), ticks('1970-01-01')),10000000)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Silver Full ETL",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Set variable EndTime",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/elnur.garashov@porini.it/elnur.garashov/CosmosDB Update/Silver Full",
										"baseParameters": {
											"StartDate": {
												"value": "@variables('StartTime')",
												"type": "Expression"
											},
											"EndDate": {
												"value": "@variables('EndTime')",
												"type": "Expression"
											},
											"Table": {
												"value": "@item()",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"start_time": {
						"type": "string",
						"defaultValue": "2000-01-01 00:00:00"
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-05-30 00:00:00"
					},
					"tables": {
						"type": "array",
						"defaultValue": [
							"FeedList",
							"Post",
							"Geometry",
							"PostStat",
							"UserInfo",
							"Categories",
							"Places",
							"Feed",
							"GeoLocation"
						]
					}
				},
				"variables": {
					"StartTime": {
						"type": "String"
					},
					"EndTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Cosmos DB"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-01T10:29:08Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Silver_Full_CosmosDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Set variable EndTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/elnur.garashov@porini.it/elnur.garashov/CosmosDB/Silver/Silver Full",
							"baseParameters": {
								"StartDate": {
									"value": "@variables('StartTime')",
									"type": "Expression"
								},
								"EndDate": {
									"value": "@variables('EndTime')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set variable StartTime",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "StartTime",
							"value": {
								"value": "@{div(sub(ticks(pipeline().parameters.start_time), ticks('1970-01-01')),10000000)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable EndTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable StartTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "EndTime",
							"value": {
								"value": "@{div(sub(ticks(pipeline().parameters.end_time), ticks('1970-01-01')),10000000)}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"start_time": {
						"type": "string",
						"defaultValue": "2000-01-01 00:00:00"
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-05-11 00:00:00"
					}
				},
				"variables": {
					"StartTime": {
						"type": "String"
					},
					"EndTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Dev/Draft/CosmosDB/Full"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-23T08:12:38Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Silver_Full_LogAnalytics')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.TableNames",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Variable Table",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Notebook1",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Set Variable Table",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/elnur.garashov@porini.it/elnur.garashov/LogAnalytics/Full",
										"baseParameters": {
											"Table": {
												"value": "@variables('Table')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"TableNames": {
						"type": "array",
						"defaultValue": [
							"AppDependencies",
							"AppEvents",
							"AppExceptions",
							"AppMetrics",
							"AppPageViews",
							"AppPerformanceCounters",
							"AppRequests",
							"AppSystemEvents",
							"AppTraces",
							"Usage"
						]
					}
				},
				"variables": {
					"EndTime": {
						"type": "String"
					},
					"Table": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Dev/Draft/Log Analytics"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-24T06:02:38Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Silver_LogAnalytics')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.TableNames",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Variable Table",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set Variable End Date",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Variable Table",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "EndTime",
										"value": {
											"value": "@formatDateTime(addHours(pipeline().parameters.start_time,-3),'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "BronzeToSilver_por_version",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Set Variable End Date",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 1,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/elnur.garashov@porini.it/elnur.garashov/1 LogAnalytics/Delta",
										"baseParameters": {
											"Table": {
												"value": "@variables('Table')",
												"type": "Expression"
											},
											"EndDate": {
												"value": "@variables('EndTime')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"TableNames": {
						"type": "array",
						"defaultValue": [
							"AppDependencies",
							"AppEvents",
							"AppExceptions",
							"AppMetrics",
							"AppPageViews",
							"AppPerformanceCounters",
							"AppRequests",
							"AppSystemEvents",
							"AppTraces",
							"Usage"
						]
					},
					"start_time": {
						"type": "string",
						"defaultValue": "2023-12-07 03:00:00"
					}
				},
				"variables": {
					"EndTime": {
						"type": "String"
					},
					"Table": {
						"type": "String"
					}
				},
				"folder": {
					"name": "LogAnalytics"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-06T21:34:31Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestTime')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "start_time",
							"value": {
								"value": "@formatDateTime(addHours(pipeline().parameters.triggerTime,-3),'yyyy-MM-dd HH:mm:ss')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/riccardo.perelli@blinkoo.com/dev/testTime",
							"baseParameters": {
								"testTime": {
									"value": "@variables('start_time')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"triggerTime": {
						"type": "string",
						"defaultValue": "@trigger().startTime"
					}
				},
				"variables": {
					"start_time": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Dev"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Weekly_Silver_SqlServer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach Table",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Tables",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Silver Update ETL",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/riccardo.perelli@blinkoo.com/Pipelines/Silver/SqlBronzeToSilver",
										"baseParameters": {
											"Table": {
												"value": "@item()",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Tables": {
						"type": "array",
						"defaultValue": [
							"categories",
							"geo_location",
							"places"
						]
					}
				},
				"folder": {
					"name": "Cosmos DB/Weekly"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-24T04:59:38Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Weekly_Silver_Update_CosmosDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach Table",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Tables",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Silver Update ETL",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/elnur.garashov@porini.it/elnur.garashov/CosmosDB Update/1 Silver",
										"baseParameters": {
											"Table": {
												"value": "@item()",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Tables": {
						"type": "array",
						"defaultValue": [
							"Categories",
							"GeoLocation",
							"Places"
						]
					}
				},
				"folder": {
					"name": "Cosmos DB/Weekly"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-24T04:59:38Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/full_KPI_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PreDeepSession",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Set End time",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/riccardo.perelli@blinkoo.com/DeepSession/Pre - DeepSession - Test",
							"baseParameters": {
								"startDate": {
									"value": "@variables('start_time')",
									"type": "Expression"
								},
								"endDate": {
									"value": "@variables('end_time')",
									"type": "Expression"
								},
								"testNumber": {
									"value": "@pipeline().parameters.testNumber",
									"type": "Expression"
								},
								"isTest": {
									"value": "@pipeline().parameters.isTest",
									"type": "Expression"
								}
							},
							"libraries": [
								{
									"pypi": {
										"package": "pandas==1.4.0"
									}
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Deep session",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "PreDeepSession",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/riccardo.perelli@blinkoo.com/DeepSession/DeepSession - Test",
							"baseParameters": {
								"startDate": {
									"value": "@variables('start_time')",
									"type": "Expression"
								},
								"endDate": {
									"value": "@variables('end_time')",
									"type": "Expression"
								},
								"interval": "7",
								"isTest": {
									"value": "@pipeline().parameters.isTest",
									"type": "Expression"
								},
								"testNumber": {
									"value": "@pipeline().parameters.testNumber",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Coin Monthly",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Deep session",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/enrico.sartor@blinkoo.com/badges_lite",
							"baseParameters": {
								"endDate": {
									"value": "@variables('end_time')",
									"type": "Expression"
								},
								"startDate": {
									"value": "@variables('start_time')",
									"type": "Expression"
								},
								"interval": "7",
								"timeback": "30",
								"isTest": {
									"value": "@pipeline().parameters.isTest",
									"type": "Expression"
								},
								"postTableName": {
									"value": "by_post_",
									"type": "Expression"
								},
								"userTableName": {
									"value": "by_user_",
									"type": "Expression"
								},
								"testNumber": {
									"value": "@pipeline().parameters.testNumber",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "KPI Standard",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Coin Weekly",
								"dependencyConditions": [
									"Failed",
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/riccardo.perelli@blinkoo.com/KPI/KPI_standard",
							"baseParameters": {
								"startDate": {
									"value": "@variables('start_time')",
									"type": "Expression"
								},
								"endDate": {
									"value": "@variables('end_time')",
									"type": "Expression"
								},
								"isTest": {
									"value": "@pipeline().parameters.isTest",
									"type": "Expression"
								},
								"testNumber": {
									"value": "@pipeline().parameters.testNumber",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "KPI Search Usage",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "KPI Standard",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/riccardo.perelli@blinkoo.com/KPI/Search",
							"baseParameters": {
								"startDate": {
									"value": "@variables('start_time')",
									"type": "Expression"
								},
								"endDate": {
									"value": "@variables('end_time')",
									"type": "Expression"
								},
								"isTest": {
									"value": "@pipeline().parameters.isTest",
									"type": "Expression"
								},
								"testNumber": {
									"value": "@pipeline().parameters.testNumber",
									"type": "Expression"
								},
								"interval": "7",
								"searchedWords": "False"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "KPI Feature Usage",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "KPI User info",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/riccardo.perelli@blinkoo.com/KPI/FeatureUsage_+_UserInfo_+_Performing",
							"baseParameters": {
								"startDate": {
									"value": "@variables('start_time')",
									"type": "Expression"
								},
								"endDate": {
									"value": "@variables('end_time')",
									"type": "Expression"
								},
								"interval": "7",
								"extractionName": "kpi_featureusage",
								"isTest": {
									"value": "@pipeline().parameters.isTest",
									"type": "Expression"
								},
								"testNumber": {
									"value": "@pipeline().parameters.testNumber",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "KPI User info",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "KPI Search Usage",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/riccardo.perelli@blinkoo.com/KPI/FeatureUsage_+_UserInfo_+_Performing",
							"baseParameters": {
								"startDate": {
									"value": "@variables('start_time')",
									"type": "Expression"
								},
								"endDate": {
									"value": "@variables('end_time')",
									"type": "Expression"
								},
								"interval": "7",
								"extractionName": "kpi_userinfo",
								"isTest": {
									"value": "@pipeline().parameters.isTest",
									"type": "Expression"
								},
								"testNumber": {
									"value": "@pipeline().parameters.testNumber",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "KPI User Performing",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "KPI Feature Usage",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/riccardo.perelli@blinkoo.com/KPI/FeatureUsage_+_UserInfo_+_Performing",
							"baseParameters": {
								"startDate": {
									"value": "@variables('start_time')",
									"type": "Expression"
								},
								"endDate": {
									"value": "@variables('end_time')",
									"type": "Expression"
								},
								"interval": "7",
								"extractionName": "kpi_userperforming",
								"isTest": {
									"value": "@pipeline().parameters.isTest",
									"type": "Expression"
								},
								"testNumber": {
									"value": "@pipeline().parameters.testNumber",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Coin Bi-Weekly",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Coin Monthly",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/enrico.sartor@blinkoo.com/badges_lite",
							"baseParameters": {
								"endDate": {
									"value": "@variables('end_time')",
									"type": "Expression"
								},
								"startDate": {
									"value": "@variables('start_time')",
									"type": "Expression"
								},
								"interval": "7",
								"timeback": "14",
								"isTest": {
									"value": "@pipeline().parameters.isTest",
									"type": "Expression"
								},
								"postTableName": {
									"value": "by_post_bi_weekly_",
									"type": "Expression"
								},
								"userTableName": {
									"value": "by_user_bi_weekly_",
									"type": "Expression"
								},
								"testNumber": {
									"value": "@pipeline().parameters.testNumber",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Coin Weekly",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Coin Bi-Weekly",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/enrico.sartor@blinkoo.com/badges_lite",
							"baseParameters": {
								"endDate": {
									"value": "@variables('end_time')",
									"type": "Expression"
								},
								"startDate": {
									"value": "@variables('start_time')",
									"type": "Expression"
								},
								"interval": "7",
								"timeback": "7",
								"isTest": {
									"value": "@pipeline().parameters.isTest",
									"type": "Expression"
								},
								"postTableName": {
									"value": "by_post_weekly_",
									"type": "Expression"
								},
								"userTableName": {
									"value": "by_user_weekly_",
									"type": "Expression"
								},
								"testNumber": {
									"value": "@pipeline().parameters.testNumber",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "KPI Playlist Usage",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "KPI User Performing",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/riccardo.perelli@blinkoo.com/KPI/Playlist_Usage",
							"baseParameters": {
								"startDate": {
									"value": "@variables('start_time')",
									"type": "Expression"
								},
								"endDate": {
									"value": "@variables('end_time')",
									"type": "Expression"
								},
								"interval": "7"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set Start Time",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "start_time",
							"value": {
								"value": "@formatDateTime(addDays(addHours(pipeline().parameters.triggerTime,-6), -7),'yyyy-MM-dd HH:mm:ss')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set End time",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Start Time",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "end_time",
							"value": {
								"value": "@formatDateTime(addHours(pipeline().parameters.triggerTime,-6),'yyyy-MM-dd HH:mm:ss')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "In app Times",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "KPI Playlist Usage",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/riccardo.perelli@blinkoo.com/Silver/In_app_time_spent",
							"baseParameters": {
								"startDate": {
									"value": "@variables('start_time')",
									"type": "Expression"
								},
								"endDate": {
									"value": "@variables('end_time')",
									"type": "Expression"
								},
								"isTest": {
									"value": "@pipeline().parameters.isTest",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Post publication",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "In app Times",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/riccardo.perelli@blinkoo.com/Silver/posts_publication",
							"baseParameters": {
								"startDate": {
									"value": "@variables('start_time')",
									"type": "Expression"
								},
								"endDate": {
									"value": "@variables('end_time')",
									"type": "Expression"
								},
								"isTest": {
									"value": "@pipeline().parameters.isTest",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"triggerTime": {
						"type": "string",
						"defaultValue": "@trigger().startTime"
					},
					"testNumber": {
						"type": "string",
						"defaultValue": "@trigger().parameters.testNumber"
					},
					"isTest": {
						"type": "string",
						"defaultValue": "@trigger().parameters.isTest"
					},
					"receiver": {
						"type": "string",
						"defaultValue": "riccardo.perelli@blinkoo.com"
					}
				},
				"variables": {
					"start_time": {
						"type": "String"
					},
					"end_time": {
						"type": "String"
					}
				},
				"folder": {
					"name": "KPIs"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blinkoorepo",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"entityname": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {},
				"typeProperties": {
					"collectionName": {
						"value": "@dataset().entityname",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blinkoorepo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataLake')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDev",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					},
					"foldername": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().foldername",
							"type": "Expression"
						},
						"fileSystem": "bronze"
					},
					"compressionCodec": "gzip"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_efo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Draft"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "users",
						"fileSystem": "users"
					},
					"compressionCodec": "gzip"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_Categories')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CosmosDB"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Categories",
						"folderPath": "Categories",
						"fileSystem": "bronze"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		}
	]
}