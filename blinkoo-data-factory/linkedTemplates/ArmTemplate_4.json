{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "blinkoo-data-factory"
		},
		"HourlyBronzeLogAnalytics_properties_Bronze_LogAnalytics_parameters_ClientSecret": {
			"type": "string",
			"defaultValue": "glI8Q~fY~zGHvyTue4j826wiL9x.hVADCqkPUbJH"
		},
		"HourlyBronzeLogAnalytics_properties_Bronze_LogAnalytics_parameters_ClientID": {
			"type": "string",
			"defaultValue": "e2c3de32-f621-4fa2-9bf7-344551917b7b"
		},
		"HourlyBronzeLogAnalytics_properties_Bronze_LogAnalytics_parameters_Table_Names": {
			"type": "array",
			"defaultValue": [
				"AppDependencies",
				"AppEvents",
				"AppExceptions",
				"AppMetrics",
				"AppPageViews",
				"AppPerformanceCounters",
				"AppRequests",
				"AppSystemEvents",
				"AppTraces",
				"Usage"
			]
		},
		"HourlyBronzeLogAnalytics_properties_Bronze_LogAnalytics_parameters_end_time": {
			"type": "string",
			"defaultValue": "@trigger().startTime"
		},
		"HourlyBronzeLogAnalytics_properties_Bronze_LogAnalytics_parameters_TenantID": {
			"type": "string",
			"defaultValue": "f8e56e96-2cd7-413d-9a4d-177bfd942437"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Source_GeoLocation')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blinkoorepo",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CosmosDB"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {
					"type": "object",
					"properties": {
						"geoId": {
							"type": "string"
						},
						"country": {
							"type": "string"
						},
						"discriminator": {
							"type": "string"
						},
						"level": {
							"type": "integer"
						},
						"itaName": {
							"type": "string"
						},
						"geometryKey": {
							"type": "string"
						},
						"geonameKey": {
							"type": "string"
						},
						"name": {
							"type": "string"
						},
						"asciiName": {
							"type": "string"
						},
						"latitude": {
							"type": "number"
						},
						"longitude": {
							"type": "number"
						},
						"geometry": {
							"type": "object",
							"properties": {
								"type": {
									"type": "string"
								},
								"coordinates": {
									"type": "array",
									"items": {
										"type": "number"
									}
								}
							}
						},
						"featureClass": {
							"type": "string"
						},
						"featureCode": {
							"type": "string"
						},
						"cc2": {
							"type": "string"
						},
						"admin1": {
							"type": "string"
						},
						"admin2": {
							"type": "string"
						},
						"admin3": {
							"type": "string"
						},
						"admin4": {
							"type": "string"
						},
						"population": {
							"type": "integer"
						},
						"elevation": {
							"type": "integer"
						},
						"dem": {
							"type": "integer"
						},
						"timezone": {
							"type": "string"
						},
						"lastEdit": {
							"type": "string"
						},
						"srcCounter": {
							"type": "integer"
						},
						"alternateNames": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"translations": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"alternateNameId": {
										"type": "string"
									},
									"isoLanguage": {
										"type": "string"
									},
									"alternate": {
										"type": "string"
									},
									"isPreferred": {
										"type": "boolean"
									},
									"isShortName": {
										"type": "boolean"
									},
									"isColloquial": {
										"type": "boolean"
									},
									"isHistoric": {
										"type": "boolean"
									}
								}
							}
						}
					}
				},
				"typeProperties": {
					"collectionName": "GeoLocation"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_Geometry')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blinkoorepo",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CosmosDB"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {
					"type": "object",
					"properties": {
						"type": {
							"type": "string"
						},
						"geometry": {
							"type": "object",
							"properties": {
								"type": {
									"type": "string"
								},
								"coordinates": {
									"type": "array",
									"items": {
										"type": "array",
										"items": {
											"type": "array",
											"items": {
												"type": "number"
											}
										}
									}
								}
							}
						},
						"properties": {
							"type": "object",
							"properties": {
								"key": {
									"type": "string"
								},
								"name": {
									"type": "string"
								},
								"level_name": {
									"type": "string"
								},
								"level_key": {
									"type": "string"
								},
								"sub_areas": {
									"type": "array"
								},
								"level": {
									"type": "integer"
								}
							}
						},
						"area": {
							"type": "string"
						},
						"area_name": {
							"type": "string"
						}
					}
				},
				"typeProperties": {
					"collectionName": "Geometry"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_Media')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blinkoorepo",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CosmosDB"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {},
				"typeProperties": {
					"collectionName": "Media"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_Post')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blinkoorepo",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CosmosDB"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {
					"type": "object",
					"properties": {
						"Id": {
							"type": "string"
						},
						"Discriminator": {
							"type": "string"
						},
						"PlaceId": {
							"type": "string"
						},
						"DraftId": {
							"type": "null"
						},
						"Activities": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"Id": {
										"type": "string"
									},
									"EngName": {
										"type": "null"
									},
									"Label": {
										"type": "string"
									},
									"Level": {
										"type": "integer"
									},
									"Name": {
										"type": "string"
									}
								}
							}
						},
						"SuggestedMonths": {
							"type": "object",
							"properties": {
								"April": {
									"type": "boolean"
								},
								"August": {
									"type": "boolean"
								},
								"December": {
									"type": "boolean"
								},
								"Discriminator": {
									"type": "string"
								},
								"February": {
									"type": "boolean"
								},
								"January": {
									"type": "boolean"
								},
								"July": {
									"type": "boolean"
								},
								"June": {
									"type": "boolean"
								},
								"March": {
									"type": "boolean"
								},
								"May": {
									"type": "boolean"
								},
								"November": {
									"type": "boolean"
								},
								"October": {
									"type": "boolean"
								},
								"September": {
									"type": "boolean"
								}
							}
						},
						"Tags": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"Tag": {
										"type": "string"
									}
								}
							}
						},
						"VideoShootingMonths": {
							"type": "object",
							"properties": {
								"April": {
									"type": "boolean"
								},
								"August": {
									"type": "boolean"
								},
								"December": {
									"type": "boolean"
								},
								"February": {
									"type": "boolean"
								},
								"January": {
									"type": "boolean"
								},
								"July": {
									"type": "boolean"
								},
								"June": {
									"type": "boolean"
								},
								"March": {
									"type": "boolean"
								},
								"May": {
									"type": "boolean"
								},
								"November": {
									"type": "boolean"
								},
								"October": {
									"type": "boolean"
								},
								"September": {
									"type": "boolean"
								}
							}
						}
					}
				},
				"typeProperties": {
					"collectionName": "Post"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_PostStat')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blinkoorepo",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CosmosDB"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {
					"type": "object",
					"properties": {
						"likeId": {
							"type": "string"
						},
						"discriminator": {
							"type": "string"
						},
						"likeOwnerId": {
							"type": "string"
						},
						"userId": {
							"type": "string"
						},
						"postId": {
							"type": "string"
						},
						"isDeleted": {
							"type": "boolean"
						},
						"createdAt": {
							"type": "string"
						},
						"updatedAt": {
							"type": "string"
						},
						"deletedAt": {
							"type": "string"
						},
						"numberOfViews": {
							"type": "integer"
						},
						"numberOfLikes": {
							"type": "integer"
						},
						"numberOfBookmarks": {
							"type": "integer"
						},
						"numberOfShares": {
							"type": "integer"
						},
						"bookmarkAlbums": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"bookmarkedPosts": {
										"type": "array"
									},
									"bookmarkAlbumId": {
										"type": "string"
									},
									"label": {
										"type": "string"
									},
									"createdAt": {
										"type": "string"
									}
								}
							}
						}
					}
				},
				"typeProperties": {
					"collectionName": "PostStat"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_UserInfo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blinkoorepo",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CosmosDB"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {
					"type": "object",
					"properties": {
						"discriminator": {
							"type": "string"
						},
						"userId": {
							"type": "string"
						},
						"givenName": {
							"type": "string"
						},
						"surname": {
							"type": "string"
						},
						"displayName": {
							"type": "string"
						},
						"profileDescription": {
							"type": "string"
						},
						"avatarKey": {
							"type": "string"
						},
						"profileSlug": {
							"type": "string"
						},
						"isVerified": {
							"type": "boolean"
						},
						"isCertified": {
							"type": "boolean"
						},
						"isBackofficeMade": {
							"type": "boolean"
						},
						"receivedLikesCount": {
							"type": "integer"
						},
						"followingCount": {
							"type": "integer"
						},
						"followerCount": {
							"type": "integer"
						},
						"hasSelectedInterests": {
							"type": "boolean"
						},
						"selectedInterests": {
							"type": "array"
						},
						"relatedThemes": {
							"type": "array"
						},
						"likedPosts": {
							"type": "array"
						},
						"bookmarkedPosts": {
							"type": "array"
						},
						"posts": {
							"type": "array"
						},
						"excludedPosts": {
							"type": "array"
						},
						"termsAndConditions": {
							"type": "null"
						},
						"thirdPartyMarketing": {
							"type": "null"
						},
						"userProfiling": {
							"type": "null"
						},
						"createdAt": {
							"type": "string"
						},
						"deletedAt": {
							"type": "null"
						},
						"userDevices": {
							"type": "array"
						}
					}
				},
				"typeProperties": {
					"collectionName": "UserInfo"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adls_bronze')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "LogAnalytics"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "test",
						"fileSystem": "loganalytics"
					},
					"compressionCodec": "gzip"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/bronze_container')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDev",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "bronze"
					},
					"compressionCodec": "gzip"
				},
				"schema": [
					{
						"name": "id",
						"type": "UTF8"
					},
					{
						"name": "type",
						"type": "UTF8"
					},
					{
						"name": "geometry_type",
						"type": "UTF8"
					},
					{
						"name": "geometry_coordinates",
						"type": "UTF8"
					},
					{
						"name": "key",
						"type": "UTF8"
					},
					{
						"name": "name",
						"type": "UTF8"
					},
					{
						"name": "level_name",
						"type": "UTF8"
					},
					{
						"name": "level_key",
						"type": "UTF8"
					},
					{
						"name": "level",
						"type": "INT64"
					},
					{
						"name": "properties_sub_areas",
						"type": "UTF8"
					},
					{
						"name": "area",
						"type": "UTF8"
					},
					{
						"name": "area_name",
						"type": "UTF8"
					},
					{
						"name": "_rid",
						"type": "UTF8"
					},
					{
						"name": "_self",
						"type": "UTF8"
					},
					{
						"name": "_etag",
						"type": "UTF8"
					},
					{
						"name": "_attachments",
						"type": "UTF8"
					},
					{
						"name": "_ts",
						"type": "INT64"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/bronze_feed')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDev",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Feed",
						"fileSystem": "bronze"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "id",
						"type": "UTF8"
					},
					{
						"name": "type",
						"type": "UTF8"
					},
					{
						"name": "geometry_type",
						"type": "UTF8"
					},
					{
						"name": "geometry_coordinates",
						"type": "UTF8"
					},
					{
						"name": "key",
						"type": "UTF8"
					},
					{
						"name": "name",
						"type": "UTF8"
					},
					{
						"name": "level_name",
						"type": "UTF8"
					},
					{
						"name": "level_key",
						"type": "UTF8"
					},
					{
						"name": "level",
						"type": "INT64"
					},
					{
						"name": "properties_sub_areas",
						"type": "UTF8"
					},
					{
						"name": "area",
						"type": "UTF8"
					},
					{
						"name": "area_name",
						"type": "UTF8"
					},
					{
						"name": "_rid",
						"type": "UTF8"
					},
					{
						"name": "_self",
						"type": "UTF8"
					},
					{
						"name": "_etag",
						"type": "UTF8"
					},
					{
						"name": "_attachments",
						"type": "UTF8"
					},
					{
						"name": "_ts",
						"type": "INT64"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/log_analytics_dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Rest_loganalytics",
					"type": "LinkedServiceReference",
					"parameters": {
						"WorkSpaceID": "@dataset().WorkspaceID"
					}
				},
				"parameters": {
					"WorkspaceID": {
						"type": "string",
						"defaultValue": "8f01acd1-5ade-4ad8-8c2c-5a3708be25e5"
					}
				},
				"folder": {
					"name": "LogAnalytics"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": "query"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/test_blinkoo_gold_delta_dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "test_blinkoo_gold_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureDatabricksDeltaLakeDataset",
				"typeProperties": {
					"database": "blinkoo_gold",
					"table": "kpi_featureusage"
				},
				"schema": [
					{
						"name": "metricName",
						"type": "string"
					},
					{
						"name": "nUsers",
						"type": "double"
					},
					{
						"name": "nOfSessionsWeek",
						"type": "double"
					},
					{
						"name": "totalSessionTimeInSecondsWeek",
						"type": "double"
					},
					{
						"name": "longestSessionInSecondsWeek",
						"type": "double"
					},
					{
						"name": "meanSessionInSecondsWeek",
						"type": "double"
					},
					{
						"name": "medianSessionInSecondsWeek",
						"type": "double"
					},
					{
						"name": "totalSessionOnFeedInSecondsWeek",
						"type": "double"
					},
					{
						"name": "totalSessionOnNewFeedInSecondsWeek",
						"type": "double"
					},
					{
						"name": "totalSessionOnSearchInSecondsWeek",
						"type": "double"
					},
					{
						"name": "totalSessionOnPostDetailInSecondsWeek",
						"type": "double"
					},
					{
						"name": "totalSessionOnPlaylistInSecondsWeek",
						"type": "double"
					},
					{
						"name": "totalSessionOnCreatorProfileInSecondsWeek",
						"type": "double"
					},
					{
						"name": "medianNOfVideoPerSessionWeek",
						"type": "double"
					},
					{
						"name": "nLikeWeek",
						"type": "double"
					},
					{
						"name": "nBookmarkWeek",
						"type": "double"
					},
					{
						"name": "nUnbookmarkWeek",
						"type": "double"
					},
					{
						"name": "nBookWeek",
						"type": "double"
					},
					{
						"name": "nSharesWeek",
						"type": "double"
					},
					{
						"name": "nDetailOpeningsWeek",
						"type": "double"
					},
					{
						"name": "nContributorProfileOpeningsWeek",
						"type": "double"
					},
					{
						"name": "nMapOpeningsWeek",
						"type": "double"
					},
					{
						"name": "nPlaylistOpeningsWeek",
						"type": "double"
					},
					{
						"name": "nTagClickAndFeedScrollWeek",
						"type": "double"
					},
					{
						"name": "nViewsWeek",
						"type": "double"
					},
					{
						"name": "nSkipsWeek",
						"type": "double"
					},
					{
						"name": "nWordsSearchedWeek",
						"type": "double"
					},
					{
						"name": "updatedAt",
						"type": "timestamp"
					},
					{
						"name": "from",
						"type": "timestamp"
					},
					{
						"name": "to",
						"type": "timestamp"
					},
					{
						"name": "dayOfWeek",
						"type": "integer"
					},
					{
						"name": "weekOfYear",
						"type": "integer"
					},
					{
						"name": "Year",
						"type": "integer"
					},
					{
						"name": "Month",
						"type": "integer"
					},
					{
						"name": "Day",
						"type": "integer"
					},
					{
						"name": "repoWeek",
						"type": "integer"
					},
					{
						"name": "displayName",
						"type": "string"
					},
					{
						"name": "Timestamp",
						"type": "timestamp"
					},
					{
						"name": "searchedWord",
						"type": "string"
					},
					{
						"name": "nResults",
						"type": "integer"
					},
					{
						"name": "tagSelected",
						"type": "string"
					},
					{
						"name": "nTagsOn",
						"type": "integer"
					},
					{
						"name": "tagsOn",
						"type": "string"
					},
					{
						"name": "sourceOfSelection",
						"type": "string"
					},
					{
						"name": "Success",
						"type": "integer"
					},
					{
						"name": "tagName",
						"type": "string"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/test_delimited_text_kpi_featureusage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDev",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "KPI",
						"fileSystem": "testCopyActivity"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\r",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HourlyBronzeLogAnalytics')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Bronze_LogAnalytics",
							"type": "PipelineReference"
						},
						"parameters": {
							"ClientSecret": "[parameters('HourlyBronzeLogAnalytics_properties_Bronze_LogAnalytics_parameters_ClientSecret')]",
							"ClientID": "[parameters('HourlyBronzeLogAnalytics_properties_Bronze_LogAnalytics_parameters_ClientID')]",
							"Table_Names": "[parameters('HourlyBronzeLogAnalytics_properties_Bronze_LogAnalytics_parameters_Table_Names')]",
							"end_time": "[parameters('HourlyBronzeLogAnalytics_properties_Bronze_LogAnalytics_parameters_end_time')]",
							"TenantID": "[parameters('HourlyBronzeLogAnalytics_properties_Bronze_LogAnalytics_parameters_TenantID')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 1,
						"startTime": "2022-05-13T18:00:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Search_Analysis')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Search_Exploration",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Set End time",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/riccardo.perelli@blinkoo.com/KPI/Search_Exploration",
							"baseParameters": {
								"startDate": {
									"value": "@variables('start_time')",
									"type": "Expression"
								},
								"endDate": {
									"value": "@variables('end_time')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set Start Time",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "start_time",
							"value": {
								"value": "@concat(formatDateTime(pipeline().parameters.endTime,'yyyy-MM-dd'), ' ', '00:00:00')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set End time",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Start Time",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "end_time",
							"value": {
								"value": "@formatDateTime(pipeline().parameters.endTime)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"triggerTime": {
						"type": "string",
						"defaultValue": "2023-12-07 03:00:00"
					},
					"endTime": {
						"type": "string"
					}
				},
				"variables": {
					"start_time": {
						"type": "String"
					},
					"end_time": {
						"type": "String"
					}
				},
				"folder": {
					"name": "KPIs"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bronze_Delta_CosmosDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Tables",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set variable Table",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable EndTime",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set variable Table",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "EndTime",
										"value": {
											"value": "@{div(sub(ticks(addHours(pipeline().parameters.end_time,-3)), ticks('1970-01-01')),10000000)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Notebook1",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Set variable EndTime",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/elnur.garashov@porini.it/elnur.garashov/CosmosDB/Bronze/Bronze Delta",
										"baseParameters": {
											"Table": {
												"value": "@variables('Table')",
												"type": "Expression"
											},
											"EndDate": {
												"value": "@variables('EndTime')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Trigger Silver Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Silver_Delta_CosmosDB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"end_time": {
									"value": "@pipeline().parameters.end_time",
									"type": "Expression"
								},
								"Tables": {
									"value": "@pipeline().parameters.Tables",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"end_time": {
						"type": "string",
						"defaultValue": "2022-05-12 03:00:00"
					},
					"Tables": {
						"type": "array",
						"defaultValue": [
							"Post",
							"Geometry",
							"PostStat",
							"UserInfo",
							"Categories",
							"Places",
							"Feed",
							"GeoLocation"
						]
					}
				},
				"variables": {
					"EndTime": {
						"type": "String"
					},
					"Table": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Dev/Draft/CosmosDB/Delta"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-23T08:12:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Daily_Bronze_SqlServer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Tables",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Bronze ETL",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Set end_time in timestamp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/riccardo.perelli@blinkoo.com/Pipelines/Bronze/SqlBronze",
										"baseParameters": {
											"Table": {
												"value": "@item()",
												"type": "Expression"
											},
											"EndDate": {
												"value": "@variables('EndTime')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set end_time in timestamp",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "EndTime",
										"value": {
											"value": "@{div(sub(ticks(addHours(pipeline().parameters.end_time,-3)), ticks('1970-01-01')),10000000)}\n",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Execute Silver Update Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Daily_Silver_SqlServer",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Tables": {
									"value": "@pipeline().parameters.Tables",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Tables": {
						"type": "array",
						"defaultValue": [
							"place_tip",
							"categories",
							"geo_location",
							"places"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-06-24 04:00:00"
					}
				},
				"variables": {
					"EndTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Cosmos DB/Daily"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-24T05:03:08Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Daily_Bronze_SqlServer_dev')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Tables",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Bronze ETL",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Set end_time in timestamp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/riccardo.perelli@blinkoo.com/Pipelines/Bronze/SqlBronze_dev",
										"baseParameters": {
											"Table": {
												"value": "@item()",
												"type": "Expression"
											},
											"EndDate": {
												"value": "@variables('EndTime')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set end_time in timestamp",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "EndTime",
										"value": {
											"value": "@{div(sub(ticks(addHours(pipeline().parameters.end_time,-3)), ticks('1970-01-01')),10000000)}\n",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Execute Silver Update Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Daily_Silver_SqlServer_dev",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Tables": {
									"value": "@pipeline().parameters.Tables",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Tables": {
						"type": "array",
						"defaultValue": [
							"place_tip",
							"categories",
							"geo_location",
							"places"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-06-24 04:00:00"
					}
				},
				"variables": {
					"EndTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Cosmos DB/Daily"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-24T05:03:08Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Daily_Bronze_Update_CosmosDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Tables",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Bronze ETL",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Set end_time in timestamp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/elnur.garashov@porini.it/elnur.garashov/0 CosmosDB Update/0 Bronze",
										"baseParameters": {
											"Table": {
												"value": "@item()",
												"type": "Expression"
											},
											"EndDate": {
												"value": "@variables('EndTime')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set end_time in timestamp",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "EndTime",
										"value": {
											"value": "@{div(sub(ticks(addHours(pipeline().parameters.end_time,-3)), ticks('1970-01-01')),10000000)}\n",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Execute Silver Update Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Daily_Silver_Update_CosmosDB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Tables": {
									"value": "@pipeline().parameters.Tables",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Tables": {
						"type": "array",
						"defaultValue": [
							"FeedList",
							"PostStat",
							"UserInfo",
							"Feed"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-06-24 04:00:00"
					}
				},
				"variables": {
					"EndTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Cosmos DB/Daily"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-24T05:03:08Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Daily_Bronze_Update_CosmosDB_dev')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Tables",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Bronze ETL",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Set end_time in timestamp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/elnur.garashov@porini.it/elnur.garashov/0 CosmosDB Update/0 Bronze_dev",
										"baseParameters": {
											"Table": {
												"value": "@item()",
												"type": "Expression"
											},
											"EndDate": {
												"value": "@variables('EndTime')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set end_time in timestamp",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "EndTime",
										"value": {
											"value": "@{div(sub(ticks(addHours(pipeline().parameters.end_time,-3)), ticks('1970-01-01')),10000000)}\n",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Execute Silver Update Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Daily_Silver_Update_CosmosDB_dev",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Tables": {
									"value": "@pipeline().parameters.Tables",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Tables": {
						"type": "array",
						"defaultValue": [
							"FeedList",
							"PostStat",
							"UserInfo",
							"Feed"
						]
					},
					"end_time": {
						"type": "string",
						"defaultValue": "2022-06-24 04:00:00"
					}
				},
				"variables": {
					"EndTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Cosmos DB/Daily"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-24T05:03:08Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Silver_LogAnalytics')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.TableNames",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Variable Table",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Table",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set Variable End Date",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Variable Table",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "EndTime",
										"value": {
											"value": "@formatDateTime(addHours(pipeline().parameters.start_time,-3),'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "BronzeToSilver_por_version",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Set Variable End Date",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 1,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/elnur.garashov@porini.it/elnur.garashov/1 LogAnalytics/Delta",
										"baseParameters": {
											"Table": {
												"value": "@variables('Table')",
												"type": "Expression"
											},
											"EndDate": {
												"value": "@variables('EndTime')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Post_interactions",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set Variable End Time",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Post_interactions",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"triggerTime": {
									"value": "@formatDateTime(pipeline().parameters.triggerTime,'yyyy-MM-dd HH:mm:ss')",
									"type": "Expression"
								},
								"endTime": {
									"value": "@variables('EndTime')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "User_info_ext_pre_processing",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set Variable End Time",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "User_info_ext_pre_processing",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"triggerTime": {
									"value": "@formatDateTime(pipeline().parameters.triggerTime,'yyyy-MM-dd HH:mm:ss')",
									"type": "Expression"
								},
								"endTime": {
									"value": "@variables('EndTime')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Set Variable End Time",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "For Each Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "EndTime",
							"value": {
								"value": "@concat(formatDateTime(addHours(pipeline().parameters.triggerTime,-5),'yyyy-MM-dd'), ' ', '23:59:59')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Post_publication",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set Variable End Time",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Post_publication",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"triggerTime": {
									"value": "@formatDateTime(pipeline().parameters.triggerTime,'yyyy-MM-dd HH:mm:ss')",
									"type": "Expression"
								},
								"endTime": {
									"value": "@variables('EndTime')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Search_Analysis",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set Variable End Time",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Search_Analysis",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"triggerTime": {
									"value": "@formatDateTime(pipeline().parameters.triggerTime,'yyyy-MM-dd HH:mm:ss')",
									"type": "Expression"
								},
								"endTime": {
									"value": "@variables('EndTime')",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"TableNames": {
						"type": "array",
						"defaultValue": [
							"AppDependencies",
							"AppEvents",
							"AppExceptions",
							"AppMetrics",
							"AppPageViews",
							"AppPerformanceCounters",
							"AppRequests",
							"AppSystemEvents",
							"AppTraces",
							"Usage"
						]
					},
					"start_time": {
						"type": "string",
						"defaultValue": "2023-12-07 03:00:00"
					},
					"triggerTime": {
						"type": "string",
						"defaultValue": "@trigger().startTime"
					}
				},
				"variables": {
					"EndTime": {
						"type": "String"
					},
					"Table": {
						"type": "String"
					},
					"StartTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "LogAnalytics"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-06T21:34:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Search_Analysis')]"
			]
		}
	]
}