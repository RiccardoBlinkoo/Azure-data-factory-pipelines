{
	"name": "test_KPI_pipeline",
	"properties": {
		"activities": [
			{
				"name": "PreDeepSession",
				"type": "DatabricksNotebook",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Users/riccardo.perelli@blinkoo.com/DeepSession/Pre - DeepSession - Test",
					"baseParameters": {
						"startDate": {
							"value": "@formatDateTime(addDays(addHours(pipeline().triggerTime, -6), -7), 'yyyy-MM-dd HH:mm:ss')",
							"type": "Expression"
						},
						"endDate": {
							"value": "@formatDateTime(addHours(pipeline().triggerTime, -6), 'yyyy-MM-dd HH:mm:ss')",
							"type": "Expression"
						},
						"testNumber": {
							"value": "@pipeline().parameters.testNumber",
							"type": "Expression"
						},
						"isTest": {
							"value": "@pipeline().parameters.isTest",
							"type": "Expression"
						}
					},
					"libraries": [
						{
							"pypi": {
								"package": "pandas==1.4.0"
							}
						}
					]
				},
				"linkedServiceName": {
					"referenceName": "AzureDatabricks1",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Deep session",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "PreDeepSession",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Users/riccardo.perelli@blinkoo.com/DeepSession/DeepSession - Test",
					"baseParameters": {
						"startDate": {
							"value": "@formatDateTime(addDays(addHours(pipeline().triggerTime, -6), -7), 'yyyy-MM-dd HH:mm:ss')",
							"type": "Expression"
						},
						"endDate": {
							"value": "@formatDateTime(addHours(pipeline().triggerTime, -6), 'yyyy-MM-dd HH:mm:ss')",
							"type": "Expression"
						},
						"interval": "7",
						"isTest": {
							"value": "@pipeline().parameters.isTest",
							"type": "Expression"
						},
						"testNumber": {
							"value": "@pipeline().parameters.testNumber",
							"type": "Expression"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "AzureDatabricks1",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Feature Usage",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "Badge_lite",
						"dependencyConditions": [
							"Succeeded",
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Users/riccardo.perelli@blinkoo.com/KPI/FeatureUsage_+_UserInfo_+_Performing",
					"baseParameters": {
						"startDate": {
							"value": "@formatDateTime(addDays(addHours(pipeline().triggerTime, -6), -7), 'yyyy-MM-dd HH:mm:ss')",
							"type": "Expression"
						},
						"endDate": {
							"value": "@formatDateTime(addHours(pipeline().triggerTime, -6), 'yyyy-MM-dd HH:mm:ss')",
							"type": "Expression"
						},
						"interval": "7",
						"extractionName": "kpi_featureusage",
						"isTest": {
							"value": "@pipeline().parameters.isTest",
							"type": "Expression"
						},
						"testNumber": {
							"value": "@pipeline().parameters.testNumber",
							"type": "Expression"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "AzureDatabricks1",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "User info",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "User Performing",
						"dependencyConditions": [
							"Succeeded",
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Users/riccardo.perelli@blinkoo.com/KPI/FeatureUsage_+_UserInfo_+_Performing",
					"baseParameters": {
						"startDate": {
							"value": "@formatDateTime(addDays(pipeline().triggerTime, -7), 'yyyy-MM-dd HH:mm:ss')",
							"type": "Expression"
						},
						"endDate": {
							"value": "@formatDateTime(addHours(pipeline().triggerTime, -6), 'yyyy-MM-dd HH:mm:ss')",
							"type": "Expression"
						},
						"interval": "7",
						"extractionName": "kpi_userinfo",
						"isTest": {
							"value": "@pipeline().parameters.isTest",
							"type": "Expression"
						},
						"testNumber": {
							"value": "@pipeline().parameters.testNumber",
							"type": "Expression"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "AzureDatabricks1",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "User Performing",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "Feature Usage",
						"dependencyConditions": [
							"Failed",
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Users/riccardo.perelli@blinkoo.com/KPI/FeatureUsage_+_UserInfo_+_Performing",
					"baseParameters": {
						"startDate": {
							"value": "@formatDateTime(addDays(addHours(pipeline().triggerTime, -6), -7), 'yyyy-MM-dd HH:mm:ss')",
							"type": "Expression"
						},
						"endDate": {
							"value": "@formatDateTime(addHours(pipeline().triggerTime, -6), 'yyyy-MM-dd HH:mm:ss')",
							"type": "Expression"
						},
						"interval": "7",
						"extractionName": "kpi_userperforming",
						"isTest": {
							"value": "@pipeline().parameters.isTest",
							"type": "Expression"
						},
						"testNumber": {
							"value": "@pipeline().parameters.testNumber",
							"type": "Expression"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "AzureDatabricks1",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Badge_lite",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "Deep session",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Users/enrico.sartor@blinkoo.com/badges_lite",
					"baseParameters": {
						"endDate": {
							"value": "@formatDateTime(pipeline().triggerTime, 'yyyy-MM-dd HH:mm:ss')",
							"type": "Expression"
						},
						"startDate": {
							"value": "@formatDateTime(addHours(pipeline().triggerTime, -6), 'yyyy-MM-dd HH:mm:ss')",
							"type": "Expression"
						},
						"interval": "7",
						"timeback": "30",
						"isTest": {
							"value": "@pipeline().parameters.isTest",
							"type": "Expression"
						},
						"postTableName": {
							"value": "by_post",
							"type": "Expression"
						},
						"userTableName": {
							"value": "by_user",
							"type": "Expression"
						},
						"testNumber": {
							"value": "@pipeline().parameters.testNumber",
							"type": "Expression"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "AzureDatabricks1",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "KPI Standard",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "User info",
						"dependencyConditions": [
							"Succeeded",
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Users/riccardo.perelli@blinkoo.com/KPI/KPI_standard",
					"baseParameters": {
						"startDate": {
							"value": "@formatDateTime(addDays(addHours(pipeline().triggerTime, -6), -7), 'yyyy-MM-dd HH:mm:ss')",
							"type": "Expression"
						},
						"endDate": {
							"value": "@formatDateTime(addHours(pipeline().triggerTime, -6), 'yyyy-MM-dd HH:mm:ss')",
							"type": "Expression"
						},
						"isTest": {
							"value": "@pipeline().parameters.isTest",
							"type": "Expression"
						},
						"testNumber": {
							"value": "@pipeline().parameters.testNumber",
							"type": "Expression"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "AzureDatabricks1",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "KPI SearchUsage",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "KPI Standard",
						"dependencyConditions": [
							"Succeeded",
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Users/riccardo.perelli@blinkoo.com/KPI/Search",
					"baseParameters": {
						"startDate": {
							"value": "@formatDateTime(addDays(addHours(pipeline().triggerTime, -6), -7), 'yyyy-MM-dd HH:mm:ss')",
							"type": "Expression"
						},
						"endDate": {
							"value": "@formatDateTime(addHours(pipeline().triggerTime, -6), 'yyyy-MM-dd HH:mm:ss')",
							"type": "Expression"
						},
						"isTest": {
							"value": "@pipeline().parameters.isTest",
							"type": "Expression"
						},
						"testNumber": {
							"value": "@pipeline().parameters.testNumber",
							"type": "Expression"
						},
						"interval": "7",
						"searchedWords": "False"
					}
				},
				"linkedServiceName": {
					"referenceName": "AzureDatabricks1",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"triggerTime": {
				"type": "string",
				"defaultValue": "@trigger().startTime"
			},
			"testNumber": {
				"type": "string",
				"defaultValue": "@trigger().parameters.testNumber"
			},
			"isTest": {
				"type": "string",
				"defaultValue": "@trigger().parameters.isTest"
			}
		},
		"folder": {
			"name": "Dev/Draft"
		},
		"annotations": []
	}
}